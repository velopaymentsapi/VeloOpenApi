{
  "openapi": "3.0.2",
  "info": {
    "description": "## Terms and Definitions\n\nThroughout this document and the Velo platform the following terms are used:\n\n* **Payor.** An entity (typically a corporation) which wishes to pay funds to one or more payees via a payout.\n* **Payee.** The recipient of funds paid out by a payor.\n* **Payment.** A single transfer of funds from a payor to a payee.\n* **Payout.** A batch of Payments, typically used by a payor to logically group payments (e.g. by business day). Technically there need be no relationship between the payments in a payout - a single payout can contain payments to multiple payees and/or multiple payments to a single payee.\n* **Sandbox.** An integration environment provided by Velo Payments which offers a similar API experience to the production environment, but all funding and payment events are simulated, along with many other services such as OFAC sanctions list checking.\n\n## Overview\n\nThe Velo Payments API allows a payor to perform a number of operations. The following is a list of the main capabilities in a natural order of execution:\n\n* Authenticate with the Velo platform\n* Maintain a collection of payees\n* Query the payor’s current balance of funds within the platform and perform additional funding\n* Issue payments to payees\n* Query the platform for a history of those payments\n\nThis document describes the main concepts and APIs required to get up and running with the Velo Payments platform. It is not an exhaustive API reference. For that, please see the separate Velo Payments API Reference.\n\n## API Considerations\n\nThe Velo Payments API is REST based and uses the JSON format for requests and responses.\n\nMost calls are secured using OAuth 2 security and require a valid authentication access token for successful operation. See the Authentication section for details.\n\nWhere a dynamic value is required in the examples below, the {token} format is used, suggesting that the caller needs to supply the appropriate value of the token in question (without including the { or } characters).\n\nWhere curl examples are given, the –d @filename.json approach is used, indicating that the request body should be placed into a file named filename.json in the current directory. Each of the curl examples in this document should be considered a single line on the command-line, regardless of how they appear in print.\n\n## Authenticating with the Velo Platform\n\nOnce Velo backoffice staff have added your organization as a payor within the Velo platform sandbox, they will create you a payor Id, an API key and an API secret and share these with you in a secure manner.\n\nYou will need to use these values to authenticate with the Velo platform in order to gain access to the APIs. The steps to take are explained in the following:\n\ncreate a string comprising the API key (e.g. 44a9537d-d55d-4b47-8082-14061c2bcdd8) and API secret (e.g. c396b26b-137a-44fd-87f5-34631f8fd529) with a colon between them. E.g. 44a9537d-d55d-4b47-8082-14061c2bcdd8:c396b26b-137a-44fd-87f5-34631f8fd529\n\nbase64 encode this string. E.g.: NDRhOTUzN2QtZDU1ZC00YjQ3LTgwODItMTQwNjFjMmJjZGQ4OmMzOTZiMjZiLTEzN2EtNDRmZC04N2Y1LTM0NjMxZjhmZDUyOQ==\n\ncreate an HTTP **Authorization** header with the value set to e.g. Basic NDRhOTUzN2QtZDU1ZC00YjQ3LTgwODItMTQwNjFjMmJjZGQ4OmMzOTZiMjZiLTEzN2EtNDRmZC04N2Y1LTM0NjMxZjhmZDUyOQ==\n\nperform the Velo authentication REST call using the HTTP header created above e.g. via curl:\n\n```\n  curl -X POST \\\n  -H \"Content-Type: application/json\" \\\n  -H \"Authorization: Basic NDRhOTUzN2QtZDU1ZC00YjQ3LTgwODItMTQwNjFjMmJjZGQ4OmMzOTZiMjZiLTEzN2EtNDRmZC04N2Y1LTM0NjMxZjhmZDUyOQ==\" \\\n  'https://api.sandbox.velopayments.com/v1/authenticate?grant_type=client_credentials'\n```\n\nIf successful, this call will result in a **200** HTTP status code and a response body such as:\n\n```\n  {\n    \"access_token\":\"19f6bafd-93fd-4747-b229-00507bbc991f\",\n    \"token_type\":\"bearer\",\n    \"expires_in\":1799,\n    \"scope\":\"...\"\n  }\n```\n## API access following authentication\nFollowing successful authentication, the value of the access_token field in the response (indicated in green above) should then be presented with all subsequent API calls to allow the Velo platform to validate that the caller is authenticated.\n\nThis is achieved by setting the HTTP Authorization header with the value set to e.g. Bearer 19f6bafd-93fd-4747-b229-00507bbc991f such as the curl example below:\n\n```\n  -H \"Authorization: Bearer 19f6bafd-93fd-4747-b229-00507bbc991f \"\n```\n\nIf you make other Velo API calls which require authorization but the Authorization header is missing or invalid then you will get a **401** HTTP status response.\n",
    "license": {
      "name": "Apache License 2.0",
      "url": "https://www.apache.org/licenses/LICENSE-2.0.html"
    },
    "title": "Velo Payments APIs",
    "version": "2.36.72",
    "x-logo": {
      "url": "https://apidocs.velopayments.com/velo-logo-e9573185_new.svg"
    }
  },
  "servers": [
    {
      "description": "Velo Payments Sandbox for testing",
      "url": "https://api.sandbox.velopayments.com/"
    },
    {
      "description": "Velo Payments Production URL",
      "url": "https://api.payouts.velopayments.com"
    }
  ],
  "security": [
    {
      "OAuth2": []
    }
  ],
  "tags": [
    {
      "description": "A payee is a person you wish to transfer money to. In this section you will find API opertions for working with Payees.\n",
      "name": "Payees"
    },
    {
      "description": "Payee invitation is a process of inviting individual payees to the Velo platform. In this sction you will find APIs for working with Payee Invitations.",
      "name": "Payee Invitation"
    },
    {
      "description": "A Payor is the entity which is sending money. Here you will find the available APIs for working with Payors.",
      "name": "Payors"
    },
    {
      "description": "<p>Payors that are part of the same organization can be linked together in a hierarchical fashion</p>\n<p>Payors higher up in the tree can read and write data on behalf of payors below them</p>\n<p>For example Payor A can make payouts on behalf of Payor B if Payor B is linked below Payor A</p>\n<p>Payors can not access data of payors above them in the hierarchy</p>\n<p>Contact Velo if you need to link payors in your organization</p>\n",
      "name": "Payor Hierarchy"
    },
    {
      "description": "<p>Payout APIs allow you to create and instruct payouts to payees</p>\n<p>There are three phases to a payout:</p>\n<ul>\n    <li>Submit - the payments are created within the platform</li>\n    <li>Quote - optional step if FX is involved</li>\n    <li>Instruct - the payments are sent to the payment rails for processing</li>\n</ul>\n<p>Between 1 and 2000 payments can be created within the platform as part of a Payout</p>\n",
      "name": "Payouts"
    },
    {
      "description": "<p>APIs for initiating funding of source accounts from external sources and viewing balance updates</p>\n",
      "name": "Funding"
    },
    {
      "description": "<p>Source Accounts are where funds are drawn from for making payouts</p>\n",
      "name": "Source Accounts"
    },
    {
      "description": "<p>Transactions are linked to a specific Source Account and allow a payor to logically separate funds</p>\n",
      "name": "Transactions"
    },
    {
      "description": "Payment Audit Service APIs allow you to see the history of fundings, payouts, and payments to payees.",
      "name": "Payment Audit Service"
    },
    {
      "description": "<p>When a payor creates a payee then an invite token is emailed to the invited payee</p>\n<p>Payees use this token to onboard to the platform</p>\n<p>There are several required tasks that the payee must perform before they are accepted onto the platform</p>\n",
      "name": "Invites"
    },
    {
      "description": "<p>Verification tokens allow users to complete authenitcation flows such as user invite, MFA registration and password reset</p>\n<p>Tokens have an expiry and are one-time use only</p>\n",
      "name": "Tokens"
    },
    {
      "description": "<p>This document, including all counts herein, and the Velo Payments API are the intellectual property\nof Velo Payments. The Velo Payment API and your use of the Velo Payment API, is goverend by and subject to the\nVelo Payments Terms of Use</p>\n<p>&copy; Velo Payments, Inc.</p>\n",
      "name": "Legal"
    }
  ],
  "paths": {
    "/v1/authenticate": {
      "post": {
        "description": "<p>Use this endpoint to obtain an access token for calling Velo Payments APIs. </p>\n<p>You need your API key and API secret issued by Velo</p>\n<p>To login and get an access token the API key and API secret must be Base64 encoded by concatenating them with a colon between them</p>\n<p>e.g. Given an ApiKey: 44a9537d-d55d-4b47-8082-14061c2bcdd8 and ApiSecret: c396b26b-137a-44fd-87f5-34631f8fd529</p>\n<p>Using a Base64 encode function Base64Encoder().encode(\"44a9537d-d55d-4b47-8082-14061c2bcdd8:c396b26b-137a-44fd-87f5-34631f8fd529\")</p>\n<p>Included as a Basic Authorization header: -H \"Authorization: Basic NDRhOTUzN2QtZDU1ZC00YjQ3LTgwODItMTQwNjFjMmJjZGQ4OmMzOTZiMjZiLTEzN2EtNDRmZC04N2Y1LTM0NjMxZjhmZDUyOQ==\" </p>\n",
        "operationId": "veloAuth",
        "parameters": [
          {
            "description": "OAuth grant type. Should use 'client_credentials'",
            "in": "query",
            "name": "grant_type",
            "schema": {
              "default": "client_credentials",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthResponse"
                }
              }
            },
            "description": "Valid Authenication response",
            "headers": {
              "Cache-Control": {
                "description": "Ensure clients do not cache request",
                "required": true,
                "schema": {
                  "default": "no-store",
                  "type": "string"
                }
              },
              "Pragma": {
                "description": "Ensure clients do not cache request",
                "required": true,
                "schema": {
                  "default": "no-cache",
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ],
        "summary": "Authentication endpoint",
        "tags": [
          "Login"
        ]
      }
    },
    "/v1/logout": {
      "post": {
        "description": "<p>Given a valid access token in the header then log out the authenticated user or client </p>\n<p>Will revoke the token</p>\n",
        "operationId": "logout",
        "responses": {
          "204": {
            "description": "User has been logged out"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_401"
                }
              }
            },
            "description": "Invalid access token. May be expired or invalid"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_403"
                }
              }
            },
            "description": "The authentication does not have permissions to access the resource\nThis usually occurs when there is a valid authentication instance (client or user) but they do not have the required permissions\n"
          }
        },
        "summary": "Logout",
        "tags": [
          "Login"
        ],
        "x-code-samples": [
          {
            "lang": "shell",
            "source": "$ curl 'https://api.sandbox.velopayments.com/v1/logout' -i -X POST \\\n    -H 'Content-Type: application/json' \\\n    -H 'Authorization: Bearer 93560bbb-5e79-492a-97b5-1ffbdf1cfeb8'\n"
          }
        ]
      }
    },
    "/v1/password/reset": {
      "post": {
        "description": "<p>Reset password </p>\n<p>An email with an embedded link will be sent to the receipient of the email address </p>\n<p>The link will contain a token to be used for resetting the password </p>\n",
        "operationId": "resetPassword",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ResetPasswordRequest"
              }
            }
          },
          "description": "An Email address to send the reset password link to",
          "required": true
        },
        "responses": {
          "204": {
            "description": "the request was accepted"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_400"
                }
              }
            },
            "description": "Invalid request. See Error message payload for details of failure"
          }
        },
        "security": [],
        "summary": "Reset password",
        "tags": [
          "Login"
        ],
        "x-code-samples": [
          {
            "lang": "shell",
            "source": "$ curl 'https://api.sandbox.velopayments.com/v1/password/reset' -i -X POST \\\n      -H 'Content-Type: application/json' \\\n      -d '{\"email\":\"foo@example.com\"}'\n"
          }
        ]
      }
    },
    "/v1/validate": {
      "post": {
        "description": "<p>The second part of login involves validating using an MFA device</p>\n<p>An access token with PRE_AUTH authorities is required</p>\n",
        "operationId": "validateAccessToken",
        "parameters": [
          {
            "description": "Bearer token authorization leg of validate",
            "in": "header",
            "name": "Authorization",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AccessTokenValidationRequest"
              }
            }
          },
          "description": "An OTP from the user's registered MFA Device\n",
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AccessTokenResponse"
                }
              }
            },
            "description": "User request has been validated"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_401"
                }
              }
            },
            "description": "Invalid access token. May be expired or invalid"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_403"
                }
              }
            },
            "description": "The authentication does not have permissions to access the resource\nThis usually occurs when there is a valid authentication instance (client or user) but they do not have the required permissions\n"
          }
        },
        "summary": "validate",
        "tags": [
          "Login"
        ],
        "x-code-samples": [
          {
            "lang": "shell",
            "source": "$ curl 'https://api.sandbox.velopayments.com/v1/validate' -i -X POST \\\n    -H 'Content-Type: application/json' \\\n    -H 'Authorization: Bearer 93560bbb-5e79-492a-97b5-1ffbdf1cfeb8' \\\n    -d '{\"otp\":\"123456\"}'\n"
          }
        ]
      }
    },
    "/v2/users": {
      "get": {
        "description": "Get a paginated response listing the Users",
        "operationId": "listUsers",
        "parameters": [
          {
            "description": "The Type of the User.",
            "in": "query",
            "name": "type",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/UserType"
            }
          },
          {
            "description": "The status of the User.",
            "in": "query",
            "name": "status",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/UserStatus"
            }
          },
          {
            "description": "The entityId of the User.",
            "in": "query",
            "name": "entityId",
            "required": false,
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          },
          {
            "description": "The Type of the Payee entity. Either COMPANY or INDIVIDUAL.",
            "in": "query",
            "name": "payeeType",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/PayeeType"
            }
          },
          {
            "description": "Page number. Default is 1.",
            "in": "query",
            "name": "page",
            "required": false,
            "schema": {
              "default": 1,
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "description": "The number of results to return in a page",
            "in": "query",
            "name": "pageSize",
            "required": false,
            "schema": {
              "default": 25,
              "format": "int32",
              "maximum": 100,
              "minimum": 1,
              "type": "integer"
            }
          },
          {
            "description": "List of sort fields (e.g. ?sort=email:asc,lastName:asc)\nDefault is email:asc 'name'\nThe supported sort fields are - email, lastNmae.\n",
            "in": "query",
            "name": "sort",
            "required": false,
            "schema": {
              "default": "email:asc",
              "pattern": "[a-zA-Z]+[:desc|:asc]",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PagedUserResponse"
                }
              }
            },
            "description": "Paginated list of Users filtered by query parameters"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_400"
                }
              }
            },
            "description": "Invalid request. See Error message payload for details of failure"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_401"
                }
              }
            },
            "description": "Invalid access token. May be expired or invalid"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_403"
                }
              }
            },
            "description": "The authentication does not have permissions to access the resource\nThis usually occurs when there is a valid authentication instance (client or user) but they do not have the required permissions\n"
          }
        },
        "summary": "List Users",
        "tags": [
          "Users"
        ],
        "x-code-samples": [
          {
            "lang": "shell",
            "source": "$ curl 'https://api.sandbox.velopayments.com/v2/users?pageSize=2&page=8&status=DISABLED' -i -X GET \\\n    -H 'Authorization: Bearer 6dd5e976-e329-462f-bd6b-25d463cf02fd' \\\n    -H 'Content-Type: application/json'\n"
          }
        ]
      }
    },
    "/v2/users/{userId}": {
      "delete": {
        "description": "Delete User by Id.\n",
        "operationId": "deleteUserByIdV2",
        "parameters": [
          {
            "description": "The UUID of the User.",
            "in": "path",
            "name": "userId",
            "required": true,
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "request completed okay"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_401"
                }
              }
            },
            "description": "Invalid access token. May be expired or invalid"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_403"
                }
              }
            },
            "description": "The authentication does not have permissions to access the resource\nThis usually occurs when there is a valid authentication instance (client or user) but they do not have the required permissions\n"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_404"
                }
              }
            },
            "description": "The resource was not found or is no longer available\n"
          }
        },
        "summary": "Delete a User",
        "tags": [
          "Users"
        ],
        "x-code-samples": [
          {
            "lang": "shell",
            "source": "$ curl 'https://api.sandbox.velopayments.com/v2/users/d4ca564-f2ee-4725-97c2-7193a093f0f1' -i -X DELETE \\\n    -H 'Authorization: Bearer 3387c417-464c-41a6-b25e-6630f0a06093' \\\n    -H 'Content-Type: application/json'\n"
          }
        ]
      },
      "get": {
        "description": "Get a Single User by Id.\n",
        "operationId": "getUserByIdV2",
        "parameters": [
          {
            "description": "The UUID of the User.",
            "in": "path",
            "name": "userId",
            "required": true,
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserResponse"
                }
              }
            },
            "description": "Get User Details",
            "x-contracts": [
              {
                "contractId": 1,
                "headers": {
                  "Content-Type": "application/json"
                },
                "body": {
                  "id": "5782f21b-03ab-4f4c-a2ca-ca1e1141eeee",
                  "email": "foo@example.com",
                  "firstName": "Foo",
                  "lastName": "Bar",
                  "status": "ENABLED",
                  "smsNumber": 44123555000,
                  "primaryContactNumber": 44123555001,
                  "secondaryContactNumber": 44123555002,
                  "entityId": "93742f58-d584-4527-b187-19a90a70fe89",
                  "roles": [
                    "payor.admin"
                  ],
                  "mfaStatus": "REGISTERED",
                  "mfaType": "TOTP",
                  "lockedOut": false
                }
              }
            ]
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_401"
                }
              }
            },
            "description": "Invalid access token. May be expired or invalid"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_403"
                }
              }
            },
            "description": "The authentication does not have permissions to access the resource\nThis usually occurs when there is a valid authentication instance (client or user) but they do not have the required permissions\n"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_404"
                }
              }
            },
            "description": "The resource was not found or is no longer available\n"
          }
        },
        "summary": "Get User",
        "tags": [
          "Users"
        ],
        "x-code-samples": [
          {
            "lang": "shell",
            "source": "$ curl 'https://api.sandbox.velopayments.com/v2/users/d4ca564-f2ee-4725-97c2-7193a093f0f1' -i -X GET \\\n    -H 'Authorization: Bearer 3387c417-464c-41a6-b25e-6630f0a06093' \\\n    -H 'Content-Type: application/json'\n"
          }
        ]
      }
    },
    "/v2/users/{userId}/disable": {
      "post": {
        "description": "<p>If a user is enabled this endpoint will disable them </p>\n<p>The invoker must have the appropriate permission </p>\n<p>A user cannot disable themself </p>\n<p>When a user is disabled any active access tokens will be revoked and the user will not be able to log in</p>\n",
        "operationId": "disableUserV2",
        "parameters": [
          {
            "description": "The UUID of the User.",
            "in": "path",
            "name": "userId",
            "required": true,
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success the user was disabled or was already disabled"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_400"
                }
              }
            },
            "description": "Invalid request. See Error message payload for details of failure"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_401"
                }
              }
            },
            "description": "Invalid access token. May be expired or invalid"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_403"
                }
              }
            },
            "description": "The authentication does not have permissions to access the resource\nThis usually occurs when there is a valid authentication instance (client or user) but they do not have the required permissions\n"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_404"
                }
              }
            },
            "description": "The resource was not found or is no longer available\n"
          }
        },
        "summary": "Disable a User",
        "tags": [
          "Users"
        ],
        "x-code-samples": [
          {
            "lang": "shell",
            "source": "$ curl 'https://api.sandbox.velopayments.com/v2/users/79a6fdaa-f4bb-47b7-9c1f-f6fd99c156a0/disable' -i -X POST \\\n    -H 'Content-Type: application/json' \\\n    -H 'Authorization: Bearer 93560bbb-5e79-492a-97b5-1ffbdf1cfeb8'\n"
          }
        ]
      }
    },
    "/v2/users/{userId}/enable": {
      "post": {
        "description": "<p>If a user has been disabled this endpoints will enable them </p>\n<p>The invoker must have the appropriate permission </p>\n<p>A user cannot enable themself </p>\n<p>If the user is a payor user and the payor is disabled this operation is not allowed</p>\n<p>If enabling a payor user would breach the limit for master admin payor users the request will be rejected </p>\n",
        "operationId": "enableUserV2",
        "parameters": [
          {
            "description": "The UUID of the User.",
            "in": "path",
            "name": "userId",
            "required": true,
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success the user was enabled or was already enabled"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_400"
                }
              }
            },
            "description": "Invalid request. See Error message payload for details of failure"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_401"
                }
              }
            },
            "description": "Invalid access token. May be expired or invalid"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_403"
                }
              }
            },
            "description": "The authentication does not have permissions to access the resource\nThis usually occurs when there is a valid authentication instance (client or user) but they do not have the required permissions\n"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_404"
                }
              }
            },
            "description": "The resource was not found or is no longer available\n"
          }
        },
        "summary": "Enable a User",
        "tags": [
          "Users"
        ],
        "x-code-samples": [
          {
            "lang": "shell",
            "source": "$ curl 'https://api.sandbox.velopayments.com/v2/users/79a6fdaa-f4bb-47b7-9c1f-f6fd99c156a0/enable' -i -X POST \\\n    -H 'Content-Type: application/json' \\\n    -H 'Authorization: Bearer 93560bbb-5e79-492a-97b5-1ffbdf1cfeb8'\n"
          }
        ]
      }
    },
    "/v2/users/invite": {
      "post": {
        "description": "Create a User and invite them to the system\n",
        "operationId": "inviteUser",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/InviteUserRequest"
              }
            }
          },
          "description": "Details of User to invite",
          "required": true
        },
        "responses": {
          "204": {
            "description": "No Content. The user was invited successfully"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_400"
                }
              }
            },
            "description": "Invalid request. See Error message payload for details of failure"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_401"
                }
              }
            },
            "description": "Invalid access token. May be expired or invalid"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_403"
                }
              }
            },
            "description": "The authentication does not have permissions to access the resource\nThis usually occurs when there is a valid authentication instance (client or user) but they do not have the required permissions\n"
          },
          "409": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_409"
                }
              }
            },
            "description": "The request contained data that would result in a duplicate value\n"
          },
          "412": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_412"
                }
              }
            },
            "description": "The request could not be completed as a precondition was not met\n"
          }
        },
        "summary": "Invite a User",
        "tags": [
          "Users"
        ],
        "x-code-samples": [
          {
            "lang": "shell",
            "source": "$ curl 'https://api.sandbox.velopayments.com/v2/users/invite' -i -X POST \\\n    -H 'Content-Type: application/json' \\\n    -H 'Authorization: Bearer 93560bbb-5e79-492a-97b5-1ffbdf1cfeb8' \\\n    -d '{\"email\":\"foo@example.com\", \\\n        \"mfaType\":\"YUBIKEY\", \\\n        \"smsNumber\":\"+4411223344556\", \\\n        \"primaryContactNumber\":\"+4411223344556\", \\\n        \"secondaryContactNumber\":null, \\\n        \"roles\":[\"payor.admin\"], \\\n        \"firstName\":\"Foo\", \\\n        \"lastName\":\"Bar\", \\\n        \"entityId\":\"f84e437a-50a4-4e45-9223-e0601e370a79\", \\\n        \"verificationCode\":null \\\n        }'\n"
          }
        ]
      }
    },
    "/v2/users/{userId}/roleUpdate": {
      "post": {
        "description": "<p>Update the user's Role</p>\n",
        "operationId": "roleUpdate",
        "parameters": [
          {
            "description": "The UUID of the User.",
            "in": "path",
            "name": "userId",
            "required": true,
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RoleUpdateRequest"
              }
            }
          },
          "description": "The Role to change to",
          "required": true
        },
        "responses": {
          "204": {
            "description": "request completed okay"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_400"
                }
              }
            },
            "description": "Invalid request. See Error message payload for details of failure"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_401"
                }
              }
            },
            "description": "Invalid access token. May be expired or invalid"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_403"
                }
              }
            },
            "description": "The authentication does not have permissions to access the resource\nThis usually occurs when there is a valid authentication instance (client or user) but they do not have the required permissions\n"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_404"
                }
              }
            },
            "description": "The resource was not found or is no longer available\n"
          }
        },
        "summary": "Update User Role",
        "tags": [
          "Users"
        ],
        "x-code-samples": [
          {
            "lang": "shell",
            "source": "$ curl 'https://api.sandbox.velopayments.com/v2/users/ad19fc24-0cf6-4c15-a571-754b015b18e0/roleUpdate' -i -X POST \\\n      -H 'Authorization: Bearer 147c0008-2ec1-4009-9e2e-1f435f02a69b' \\\n      -H 'Content-Type: application/json' \\\n      -d '{\"role\":\"payor.admin\", \\\n          \"verificationCode\": \"123456\" \\\n          }'\n"
          }
        ]
      }
    },
    "/v2/users/{userId}/mfa/unregister": {
      "post": {
        "description": "<p>Unregister the MFA device for the user </p>\n<p>If the user does not require further verification then a register new MFA device token will be sent to them via their email address</p>\n",
        "operationId": "unregisterMFA",
        "parameters": [
          {
            "description": "The UUID of the User.",
            "in": "path",
            "name": "userId",
            "required": true,
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UnregisterMFARequest"
              }
            }
          },
          "description": "The MFA Type to unregister",
          "required": true
        },
        "responses": {
          "204": {
            "description": "the MFA Type to unregister"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_400"
                }
              }
            },
            "description": "Invalid request. See Error message payload for details of failure"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_401"
                }
              }
            },
            "description": "Invalid access token. May be expired or invalid"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_403"
                }
              }
            },
            "description": "The authentication does not have permissions to access the resource\nThis usually occurs when there is a valid authentication instance (client or user) but they do not have the required permissions\n"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_404"
                }
              }
            },
            "description": "The resource was not found or is no longer available\n"
          }
        },
        "summary": "Unregister MFA for the user",
        "tags": [
          "Users"
        ],
        "x-code-samples": [
          {
            "lang": "shell",
            "source": "$ curl 'https://api.sandbox.velopayments.com/v2/users/79a6fdaa-f4bb-47b7-9c1f-f6fd99c156a0/mfa/unregister' -i -X POST \\\n      -H 'Content-Type: application/json' \\\n      -d '{\"mfaType\":\"TOTP\", \\\n        \"verificationCode\":\"123456\", \\\n        }'\n"
          }
        ]
      }
    },
    "/v2/users/{userId}/tokens": {
      "post": {
        "description": "<p>Resend the specified token </p>\n<p>The token to resend must already exist for the user </p>\n<p>It will be revoked and a new one issued</p>\n",
        "operationId": "resendToken",
        "parameters": [
          {
            "description": "The UUID of the User.",
            "in": "path",
            "name": "userId",
            "required": true,
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ResendTokenRequest"
              }
            }
          },
          "description": "The type of token to resend",
          "required": true
        },
        "responses": {
          "204": {
            "description": "request completed okay"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_400"
                }
              }
            },
            "description": "Invalid request. See Error message payload for details of failure"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_401"
                }
              }
            },
            "description": "Invalid access token. May be expired or invalid"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_403"
                }
              }
            },
            "description": "The authentication does not have permissions to access the resource\nThis usually occurs when there is a valid authentication instance (client or user) but they do not have the required permissions\n"
          }
        },
        "summary": "Resend a token",
        "tags": [
          "Tokens",
          "Users"
        ],
        "x-code-samples": [
          {
            "lang": "shell",
            "source": "$ curl 'https://api.sandbox.velopayments.com/v2/users/79a6fdaa-f4bb-47b7-9c1f-f6fd99c156a0/tokens' -i -X POST \\\n      -H 'Authorization: Bearer 147c0008-2ec1-4009-9e2e-1f435f02a69b' \\\n      -H 'Content-Type: application/json' \\\n      -d '{\"tokenType\":\"MFA_REGISTRATION\"}'\n"
          }
        ]
      }
    },
    "/v2/users/{userId}/unlock": {
      "post": {
        "description": "If a user is locked this endpoint will unlock them\n",
        "operationId": "unlockUserV2",
        "parameters": [
          {
            "description": "The UUID of the User.",
            "in": "path",
            "name": "userId",
            "required": true,
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success the user was unlocked or was already unlocked"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_400"
                }
              }
            },
            "description": "Invalid request. See Error message payload for details of failure"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_401"
                }
              }
            },
            "description": "Invalid access token. May be expired or invalid"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_403"
                }
              }
            },
            "description": "The authentication does not have permissions to access the resource\nThis usually occurs when there is a valid authentication instance (client or user) but they do not have the required permissions\n"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_404"
                }
              }
            },
            "description": "The resource was not found or is no longer available\n"
          }
        },
        "summary": "Unlock a User",
        "tags": [
          "Users"
        ],
        "x-code-samples": [
          {
            "lang": "shell",
            "source": "$ curl 'https://api.sandbox.velopayments.com/v2/users/79a6fdaa-f4bb-47b7-9c1f-f6fd99c156a0/unlock' -i -X POST \\\n    -H 'Content-Type: application/json' \\\n    -H 'Authorization: Bearer 93560bbb-5e79-492a-97b5-1ffbdf1cfeb8'\n"
          }
        ]
      }
    },
    "/v2/users/{userId}/userDetailsUpdate": {
      "post": {
        "description": "<p>Update the profile details for the given user</p>\n<p>When updating Payor users with the role of payor.master_admin a verificationCode is required</p>\n",
        "operationId": "userDetailsUpdate",
        "parameters": [
          {
            "description": "The UUID of the User.",
            "in": "path",
            "name": "userId",
            "required": true,
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserDetailsUpdateRequest"
              }
            }
          },
          "description": "The details of the user to update",
          "required": true
        },
        "responses": {
          "204": {
            "description": "request completed okay"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_400"
                }
              }
            },
            "description": "Invalid request. See Error message payload for details of failure"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_401"
                }
              }
            },
            "description": "Invalid access token. May be expired or invalid"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_403"
                }
              }
            },
            "description": "The authentication does not have permissions to access the resource\nThis usually occurs when there is a valid authentication instance (client or user) but they do not have the required permissions\n"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_404"
                }
              }
            },
            "description": "The resource was not found or is no longer available\n"
          },
          "409": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_409"
                }
              }
            },
            "description": "The request contained data that would result in a duplicate value\n"
          }
        },
        "summary": "Update User Details",
        "tags": [
          "Users"
        ],
        "x-code-samples": [
          {
            "lang": "shell",
            "source": "$ curl 'https://api.sandbox.velopayments.com/v2/users/ad19fc24-0cf6-4c15-a571-754b015b18e0/userDetailsUpdate' -i -X POST \\\n      -H 'Authorization: Bearer 147c0008-2ec1-4009-9e2e-1f435f02a69b' \\\n      -H 'Content-Type: application/json' \\\n      -d '{\"firstName: \"Foo\", \\\n           \"lastName\": \"Bar\", \\\n           \"primaryContactNumber\": \"+1234567890\", \\\n           \"secondaryContactNumber\": \"+!234567890\", \\\n           \"email\": \"foo@example.com\", \\\n           \"smsNumber\": \"+1234567890\", \\\n           \"mfaType\": \"TOTP\", \\\n           \"verificationCode\": \"123456\" \\\n           }'\n"
          }
        ]
      }
    },
    "/v2/users/registration/sms": {
      "post": {
        "description": "<p>Register an Sms number and send an OTP to it </p>\n<p>Used for manual verification of a user </p>\n<p>The backoffice user initiates the request to send the OTP to the user's sms </p>\n<p>The user then reads back the OTP which the backoffice user enters in the verifactionCode property for requests that require it</p>\n",
        "operationId": "registerSms",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RegisterSmsRequest"
              }
            }
          },
          "description": "a SMS Number to send an OTP to",
          "required": true
        },
        "responses": {
          "204": {
            "description": "request completed okay"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_400"
                }
              }
            },
            "description": "Invalid request. See Error message payload for details of failure"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_401"
                }
              }
            },
            "description": "Invalid access token. May be expired or invalid"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_403"
                }
              }
            },
            "description": "The authentication does not have permissions to access the resource\nThis usually occurs when there is a valid authentication instance (client or user) but they do not have the required permissions\n"
          }
        },
        "summary": "Register SMS Number",
        "tags": [
          "Users"
        ],
        "x-code-samples": [
          {
            "lang": "shell",
            "source": "$ curl 'https://api.sandbox.velopayments.com/v2/users/registration/sms' -i -X POST \\\n      -H 'Authorization: Bearer 147c0008-2ec1-4009-9e2e-1f435f02a69b' \\\n      -H 'Content-Type: application/json' \\\n      -d '{\"smsNumber\":\"+4411223344556\"}'\n"
          }
        ]
      }
    },
    "/v2/users/self": {
      "get": {
        "description": "Get the user's details\n",
        "operationId": "getSelf",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserResponse"
                }
              }
            },
            "description": "Get User Details"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_401"
                }
              }
            },
            "description": "Invalid access token. May be expired or invalid"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_403"
                }
              }
            },
            "description": "The authentication does not have permissions to access the resource\nThis usually occurs when there is a valid authentication instance (client or user) but they do not have the required permissions\n"
          }
        },
        "summary": "Get Self",
        "tags": [
          "Users"
        ],
        "x-code-samples": [
          {
            "lang": "shell",
            "source": "$ curl 'https://api.sandbox.velopayments.com/v2/users/self' -i -X GET \\\n    -H 'Authorization: Bearer 3387c417-464c-41a6-b25e-6630f0a06093' \\\n    -H 'Content-Type: application/json'\n"
          }
        ]
      }
    },
    "/v2/users/self/userDetailsUpdate": {
      "post": {
        "description": "<p>Update the profile details for the given user</p>\n<p>Only Payee user types are supported</p>\n",
        "operationId": "userDetailsUpdateForSelf",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PayeeUserSelfUpdateRequest"
              }
            }
          },
          "description": "The details of the user to update",
          "required": true
        },
        "responses": {
          "204": {
            "description": "request completed okay"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_400"
                }
              }
            },
            "description": "Invalid request. See Error message payload for details of failure"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_401"
                }
              }
            },
            "description": "Invalid access token. May be expired or invalid"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_403"
                }
              }
            },
            "description": "The authentication does not have permissions to access the resource\nThis usually occurs when there is a valid authentication instance (client or user) but they do not have the required permissions\n"
          },
          "409": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_409"
                }
              }
            },
            "description": "The request contained data that would result in a duplicate value\n"
          }
        },
        "summary": "Update User Details for self",
        "tags": [
          "Users"
        ],
        "x-code-samples": [
          {
            "lang": "shell",
            "source": "$ curl 'https://api.sandbox.velopayments.com/v2/users/self/userDetailsUpdate' -i -X POST \\\n      -H 'Authorization: Bearer 147c0008-2ec1-4009-9e2e-1f435f02a69b' \\\n      -H 'Content-Type: application/json' \\\n      -d '{\"firstName: \"Foo\", \\\n           \"lastName\": \"Bar\", \\\n           \"primaryContactNumber\": \"+1234567890\", \\\n           \"secondaryContactNumber\": \"+!234567890\", \\\n           \"email\": \"foo@example.com\", \\\n           \"smsNumber\": \"+1234567890\", \\\n           }'\n"
          }
        ]
      }
    },
    "/v2/users/self/mfa/unregister": {
      "post": {
        "description": "<p>Unregister the MFA device for the user </p>\n<p>If the user does not require further verification then a register new MFA device token will be sent to them via their email address</p>\n",
        "operationId": "unregisterMFAForSelf",
        "parameters": [
          {
            "description": "Bearer token authorization leg of validate",
            "in": "header",
            "name": "Authorization",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SelfMFATypeUnregisterRequest"
              }
            }
          },
          "description": "The MFA Type to unregister",
          "required": true
        },
        "responses": {
          "204": {
            "description": "the MFA Type to unregister"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_400"
                }
              }
            },
            "description": "Invalid request. See Error message payload for details of failure"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_401"
                }
              }
            },
            "description": "Invalid access token. May be expired or invalid"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_403"
                }
              }
            },
            "description": "The authentication does not have permissions to access the resource\nThis usually occurs when there is a valid authentication instance (client or user) but they do not have the required permissions\n"
          }
        },
        "summary": "Unregister MFA for Self",
        "tags": [
          "Users"
        ],
        "x-code-samples": [
          {
            "lang": "shell",
            "source": "$ curl 'https://api.sandbox.velopayments.com/v2/users/self/mfa/unregister' -i -X POST \\\n      -H 'Content-Type: application/json' \\\n      -d '{\"mfaType\":\"TOTP\"}'\n"
          }
        ]
      }
    },
    "/v2/users/self/password": {
      "post": {
        "description": "Update password for self\n",
        "operationId": "updatePasswordSelf",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SelfUpdatePasswordRequest"
              }
            }
          },
          "description": "The password",
          "required": true
        },
        "responses": {
          "204": {
            "description": "the password was submitted and accepted"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_400"
                }
              }
            },
            "description": "Invalid request. See Error message payload for details of failure"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_401"
                }
              }
            },
            "description": "Invalid access token. May be expired or invalid"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_403"
                }
              }
            },
            "description": "The authentication does not have permissions to access the resource\nThis usually occurs when there is a valid authentication instance (client or user) but they do not have the required permissions\n"
          }
        },
        "summary": "Update Password for self",
        "tags": [
          "Users"
        ],
        "x-code-samples": [
          {
            "lang": "shell",
            "source": "$ curl 'https://api.sandbox.velopayments.com/v2/users/self/password' -i -X POST \\\n      -H 'Content-Type: application/json' \\\n      -d '{\"oldpassword\":\"abcd_12345\", \\\n          \"newPassword\": \"myNewPassword\"}'\n"
          }
        ]
      }
    },
    "/v2/users/self/password/validate": {
      "post": {
        "description": "validate the password and return a score\n",
        "operationId": "validatePasswordSelf",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PasswordRequest"
              }
            }
          },
          "description": "The password",
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidatePasswordResponse"
                }
              }
            },
            "description": "the password was checked and a score returned"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_400"
                }
              }
            },
            "description": "Invalid request. See Error message payload for details of failure"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_401"
                }
              }
            },
            "description": "Invalid access token. May be expired or invalid"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_403"
                }
              }
            },
            "description": "The authentication does not have permissions to access the resource\nThis usually occurs when there is a valid authentication instance (client or user) but they do not have the required permissions\n"
          }
        },
        "summary": "Validate the proposed password",
        "tags": [
          "Users"
        ],
        "x-code-samples": [
          {
            "lang": "shell",
            "source": "$ curl 'https://api.sandbox.velopayments.com/v2/users/self/password/validate' -i -X POST \\\n      -H 'Content-Type: application/json' \\\n      -d '{\"password\":\"abcd_12345\"}'\n"
          }
        ]
      }
    },
    "/v2/payors/{payorId}": {
      "get": {
        "description": "Get a Single Payor by Id.\n",
        "operationId": "getPayorByIdV2",
        "parameters": [
          {
            "description": "The account owner Payor ID",
            "in": "path",
            "name": "payorId",
            "required": true,
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PayorV2"
                }
              }
            },
            "description": "Get Payor Details",
            "x-contracts": [
              {
                "contractId": 1,
                "headers": {
                  "Content-Type": "application/json;charset=UTF-8"
                },
                "body": {
                  "payorId": "0a818933-087d-47f2-ad83-2f986ed087eb",
                  "payorXid": "ABC_12345678",
                  "payorName": "Joe",
                  "address": {
                    "line1": "101 California Street",
                    "city": "San Francisco",
                    "zipOrPostcode": 94111,
                    "country": "US"
                  },
                  "primaryContactName": "Joe",
                  "primaryContactPhone": 1231231234,
                  "primaryContactEmail": "foo@example.com",
                  "kycState": "PASSED_KYC",
                  "manualLockout": false,
                  "payeeGracePeriodProcessingEnabled": true,
                  "payeeGracePeriodDays": 90,
                  "dbaName": "FlyByNight, Inc",
                  "allowsLanguageChoice": false,
                  "reminderEmailsOptOut": false,
                  "language": "EN",
                  "supportContact": "support@example.com",
                  "collectiveAlias": "MyAlias",
                  "maxMasterPayorAdmins": 2
                }
              }
            ]
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_400"
                }
              }
            },
            "description": "Invalid request. See Error message payload for details of failure"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_403"
                }
              }
            },
            "description": "The authentication does not have permissions to access the resource\nThis usually occurs when there is a valid authentication instance (client or user) but they do not have the required permissions\n"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Payor Id Not Found",
            "x-contracts": [
              {
                "contractId": 2
              }
            ]
          }
        },
        "summary": "Get Payor",
        "tags": [
          "Payors"
        ],
        "x-code-samples": [
          {
            "lang": "shell",
            "source": "$ curl 'https://api.sandbox.velopayments.com/v2/payors/126969bd-6a18-47ec-96e1-57559afecf32' -i -X GET \\\n    -H 'Authorization: Bearer 3387c417-464c-41a6-b25e-6630f0a06093' \\\n    -H 'Content-Type: application/json'\n"
          }
        ],
        "x-contracts": [
          {
            "contractId": 1,
            "name": "Test Get Payor V2",
            "contractPath": "/v2/payors/0a818933-087d-47f2-ad83-2f986ed087eb",
            "serviceName": "payor-service"
          },
          {
            "contractId": 2,
            "name": "Test Payor Not Found V2",
            "contractPath": "/v2/payors/00000000-0000-0000-0000-000000000000",
            "serviceName": "payor-service"
          }
        ]
      }
    },
    "/v1/payors/{payorId}/applications": {
      "post": {
        "description": "<p>Create an application for the given Payor ID.</p>\n<p>Applications provide a means to group your API Keys</p>\n<p>For example you might have an SAP application that you wish to integrate with Velo</p>\n<p>You can create an application and then create one or more API keys for the application</p>\n",
        "operationId": "payorCreateApplicationV1",
        "parameters": [
          {
            "description": "The account owner Payor ID",
            "in": "path",
            "name": "payorId",
            "required": true,
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PayorCreateApplicationRequest"
              }
            }
          },
          "description": "Details of application to create",
          "required": true,
          "x-contracts": [
            {
              "contractId": 1,
              "headers": {
                "Content-Type": "application/json"
              },
              "body": {
                "name": "foo",
                "description": "a foo application"
              },
              "matchers": {
                "headers": [
                  {
                    "key": "Content-Type",
                    "regex": "application/json.*"
                  }
                ],
                "body": [
                  {
                    "path": "$.name",
                    "type": "by_regex",
                    "predefined": "non_empty"
                  },
                  {
                    "path": "$.description",
                    "type": "by_regex",
                    "predefined": "non_empty"
                  }
                ]
              }
            }
          ]
        },
        "responses": {
          "201": {
            "description": "Success",
            "headers": {
              "Location": {
                "description": "location",
                "schema": {
                  "example": "<p>HTTP/1.1 201 Created</p>\n<p>Location: https://api.sandbox.velopayments.com/v1/payors/2e144160-e87f-4976-b577-6087e683f419/applications/8701c174-b64a-476a-ab1a-4af27f09f0b8</p>\n",
                  "type": "string"
                }
              }
            },
            "x-contracts": [
              {
                "contractId": 1,
                "mathers": {
                  "headers": [
                    {
                      "key": "Location",
                      "predefined": "non_blank"
                    }
                  ]
                }
              }
            ]
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_400"
                }
              }
            },
            "description": "Invalid request. See Error message payload for details of failure"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_403"
                }
              }
            },
            "description": "The authentication does not have permissions to access the resource\nThis usually occurs when there is a valid authentication instance (client or user) but they do not have the required permissions\n"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_404"
                }
              }
            },
            "description": "The resource was not found or is no longer available\n"
          },
          "409": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_409"
                }
              }
            },
            "description": "The request contained data that would result in a duplicate value\n"
          }
        },
        "summary": "Create Application",
        "tags": [
          "Payors"
        ],
        "x-code-samples": [
          {
            "lang": "shell",
            "source": "$ curl 'https://api.sandbox.velopayments.com/v1/payors/79a6fdaa-f4bb-47b7-9c1f-f6fd99c156a0/applications' -i -X POST \\\n    -H 'Content-Type: application/json' \\\n    -H 'Authorization: Bearer 93560bbb-5e79-492a-97b5-1ffbdf1cfeb8' \\\n    -d '{\"name\":\"foo\",\"description\":\"a foo application\"}'\n"
          }
        ],
        "x-contracts": [
          {
            "contractId": 1,
            "name": "Test Create Application",
            "contractPath": "/v1/payors/835ac62e-616c-4261-bf38-63366db78c0d/applications",
            "serviceName": "payor-service"
          }
        ]
      }
    },
    "/v1/payors/{payorId}/applications/{applicationId}/keys": {
      "post": {
        "description": "<p>Create an an API key for the given payor Id and application Id</p>\n<p>You can create multiple API Keys for a given application</p>\n<p>API Keys are programmatic users for integrating your application with the Velo platform</p>\n",
        "operationId": "payorCreateApiKeyV1",
        "parameters": [
          {
            "description": "The account owner Payor ID",
            "in": "path",
            "name": "payorId",
            "required": true,
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          },
          {
            "description": "Application ID",
            "in": "path",
            "name": "applicationId",
            "required": true,
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PayorCreateApiKeyRequest"
              }
            }
          },
          "description": "Details of application API key to create",
          "required": true,
          "x-contracts": [
            {
              "contractId": 4,
              "headers": {
                "Content-Type": "application/json"
              },
              "body": {
                "name": "Key Name",
                "description": "A key description",
                "roles": [
                  "velo.payor.admin"
                ]
              },
              "matchers": {
                "headers": [
                  {
                    "key": "Content-Type",
                    "regex": "application/json.*"
                  }
                ],
                "body": [
                  {
                    "path": "$.name",
                    "type": "by_regex",
                    "predefined": "non_empty"
                  },
                  {
                    "path": "$.description",
                    "type": "by_regex",
                    "predefined": "non_empty"
                  },
                  {
                    "path": "$.roles",
                    "type": "by_regex",
                    "predefined": "non_empty"
                  }
                ]
              }
            }
          ]
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PayorCreateApiKeyResponse"
                }
              }
            },
            "description": "HTTP Ok, key created",
            "x-contracts": [
              {
                "contractId": 4,
                "headers": {
                  "Content-Type": "application/json"
                },
                "body": {
                  "apiKey": "385d4506-e7dd-446e-a092-5f30b98e7b26",
                  "apiSecret": "f25767d9-342a-48ac-a788-0a7a38ae6fb3"
                },
                "matchers": {
                  "headers": [
                    {
                      "key": "Content-Type",
                      "regex": "application/json.*"
                    }
                  ],
                  "body": [
                    {
                      "path": "$.apiKey",
                      "type": "by_regex",
                      "predefined": "non_empty"
                    },
                    {
                      "path": "$.apiSecret",
                      "type": "by_regex",
                      "predefined": "non_empty"
                    }
                  ]
                }
              }
            ]
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_400"
                }
              }
            },
            "description": "Invalid request. See Error message payload for details of failure"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_403"
                }
              }
            },
            "description": "The authentication does not have permissions to access the resource\nThis usually occurs when there is a valid authentication instance (client or user) but they do not have the required permissions\n"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_404"
                }
              }
            },
            "description": "The resource was not found or is no longer available\n"
          }
        },
        "summary": "Create API Key",
        "tags": [
          "Payors"
        ],
        "x-code-samples": [
          {
            "lang": "shell",
            "source": "$ curl 'https://api.sandbox.velopayments.com/v1/payors/79a6fdaa-f4bb-47b7-9c1f-f6fd99c156a0/applications/ba08877f-9d96-41e4-9c26-44a872d856ae/keys' -i -X POST \\\n    -H 'Content-Type: application/json' \\\n    -H 'Authorization: Bearer 698f1609-c616-48f0-b8d5-03373e9fbd40' \\\n    -d '{\"name\":\"foo\",\"description\":\"a foo key\",\"roles\":[\"velo.payor.admin\"]}'\n"
          }
        ],
        "x-contracts": [
          {
            "contractId": 4,
            "name": "Create an API key for a payor",
            "contractPath": "/v1/payors/0a818933-087d-47f2-ad83-2f986ed087eb/applications/ba08877f-9d96-41e4-9c26-44a872d856ae/keys",
            "serviceName": "payor-service"
          }
        ]
      }
    },
    "/v1/payors/{payorId}/reminderEmailsUpdate": {
      "post": {
        "description": "Update the emailRemindersOptOut field for a Payor. This API can be used to opt out\nor opt into Payor Reminder emails. These emails are typically around payee events\nsuch as payees registering and onboarding.\n",
        "operationId": "payorEmailOptOut",
        "parameters": [
          {
            "description": "The account owner Payor ID",
            "in": "path",
            "name": "payorId",
            "required": true,
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PayorEmailOptOutRequest"
              }
            }
          },
          "description": "Reminder Emails Opt-Out Request",
          "required": true,
          "x-contracts": [
            {
              "contractId": 1,
              "headers": {
                "Content-Type": "application/json"
              },
              "body": {
                "reminderEmailsOptOut": true
              }
            },
            {
              "contractId": 2,
              "headers": {
                "Content-Type": "application/json"
              },
              "body": {
                "reminderEmailsOptOut": true
              }
            }
          ]
        },
        "responses": {
          "202": {
            "description": "HTTP Accepted",
            "x-contracts": [
              {
                "contractId": 1
              }
            ]
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_400"
                }
              }
            },
            "description": "Invalid request. See Error message payload for details of failure"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_403"
                }
              }
            },
            "description": "The authentication does not have permissions to access the resource\nThis usually occurs when there is a valid authentication instance (client or user) but they do not have the required permissions\n"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Payor Id Not Found",
            "x-contracts": [
              {
                "contractId": 2
              }
            ]
          }
        },
        "summary": "Reminder Email Opt-Out",
        "tags": [
          "Payors"
        ],
        "x-code-samples": [
          {
            "lang": "shell",
            "source": "$ curl 'https://api.sandbox.velopayments.com/v1/payors/d8d49d3a-0712-4ad0-bb14-2e308d240233/reminderEmailsUpdate' -i -X POST \\\n    -H 'Authorization: Bearer fc825fad-e4a7-49e5-b6d9-9b9aa47a19c8' \\\n    -H 'Content-Type: application/json' \\\n    -d '{\"reminderEmailsOptOut\":true}'\n"
          }
        ],
        "x-contracts": [
          {
            "contractId": 1,
            "name": "Test Email Opt-Out",
            "serviceName": "payor-service",
            "contractPath": "/v1/payors/0a818933-087d-47f2-ad83-2f986ed087eb/reminderEmailsUpdate"
          },
          {
            "contractId": 2,
            "name": "Test Not Found",
            "serviceName": "payor-service",
            "contractPath": "/v1/payors/00000000-0000-0000-0000-000000000000/reminderEmailsUpdate"
          }
        ]
      }
    },
    "/v1/payors/{payorId}/branding/logos": {
      "post": {
        "description": "<p>Add Payor Logo</p>\n<p>Logo file is used in your branding and emails sent to payees</p>\n",
        "operationId": "payorAddPayorLogoV1",
        "parameters": [
          {
            "description": "The account owner Payor ID",
            "in": "path",
            "name": "payorId",
            "required": true,
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/PayorLogoRequest"
              }
            }
          },
          "description": "Image file to upload",
          "required": true
        },
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_400"
                }
              }
            },
            "description": "Invalid request. See Error message payload for details of failure"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_403"
                }
              }
            },
            "description": "The authentication does not have permissions to access the resource\nThis usually occurs when there is a valid authentication instance (client or user) but they do not have the required permissions\n"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_404"
                }
              }
            },
            "description": "The resource was not found or is no longer available\n"
          }
        },
        "summary": "Add Logo",
        "tags": [
          "Payors"
        ],
        "x-code-samples": [
          {
            "lang": "shell",
            "source": "$ curl 'https://api.sandbox.velopayments.com/v1/payors/450ecb66-df18-4d0c-b557-f718782775df/branding/logos' -i -X POST \\\n    -H 'Content-Type: multipart/form-data' \\\n    -F 'logo=@mylogo.png;type=image/png'\n"
          }
        ]
      }
    },
    "/v1/payors/{payorId}/branding": {
      "get": {
        "description": "Get the payor branding details.",
        "operationId": "payorGetBranding",
        "parameters": [
          {
            "description": "The account owner Payor ID",
            "in": "path",
            "name": "payorId",
            "required": true,
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PayorBrandingResponse"
                }
              }
            },
            "description": "HTTP Ok, key created",
            "x-contracts": [
              {
                "contractId": 1,
                "body": {
                  "payorName": "Payor1",
                  "logoUrl": "http://example.com",
                  "collectiveAlias": "customer",
                  "supportContact": "support@example.com",
                  "dbaName": "FlybyNight Inc"
                },
                "matchers": {
                  "headers": [
                    {
                      "key": "Content_type",
                      "regex": "application/json.*"
                    }
                  ],
                  "body": [
                    {
                      "path": "$.payorName",
                      "type": "by_regex",
                      "predefined": "non_empty"
                    },
                    {
                      "path": "$.logoUrl",
                      "type": "by_regex",
                      "predefined": "non_empty"
                    },
                    {
                      "path": "$.collectiveAlias",
                      "type": "by_regex",
                      "predefined": "non_empty"
                    },
                    {
                      "path": "$.supportContact",
                      "type": "by_regex",
                      "predefined": "non_empty"
                    },
                    {
                      "path": "$.dbaName",
                      "type": "by_regex",
                      "predefined": "non_empty"
                    }
                  ]
                }
              }
            ]
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_400"
                }
              }
            },
            "description": "Invalid request. See Error message payload for details of failure"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_403"
                }
              }
            },
            "description": "The authentication does not have permissions to access the resource\nThis usually occurs when there is a valid authentication instance (client or user) but they do not have the required permissions\n"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Payor Id Not Found",
            "x-contracts": [
              {
                "contractId": 2
              }
            ]
          }
        },
        "summary": "Get Branding",
        "tags": [
          "Payors"
        ],
        "x-code-samples": [
          {
            "lang": "shell",
            "source": "$ curl 'https://api.sandbox.velopayments.com/v1/payors/450ecb66-df18-4d0c-b557-f718782775df/branding' -i -X GET \\\n    -H 'Content-Type: application/json' \\\n    -H 'Authorization: Bearer d60eef1c-bea6-4f7e-8755-e916268ad4ff'\n"
          }
        ],
        "x-contracts": [
          {
            "contractId": 1,
            "name": "Get Payor Branding Details",
            "description": "Test to get branding details for payor",
            "label": "Payor_Branding",
            "priority": 10,
            "ignored": false,
            "contractPath": "/v1/payors/0a818933-087d-47f2-ad83-2f986ed087eb/branding",
            "serviceName": "payor-service"
          },
          {
            "contractId": 2,
            "name": "Get Payor Brandding Details - not found",
            "description": "Test to not found status returned by API",
            "label": "Payor_Branding",
            "priority": 20,
            "contractPath": "/v1/payors/00000000-0000-0000-0000-000000000000/branding",
            "serviceName": "payor-service"
          }
        ]
      }
    },
    "/v1/payorLinks": {
      "get": {
        "description": "<p>If the payor is set up as part of a hierarchy you can use this API to traverse the hierarchy</p>\n",
        "operationId": "payorLinksV1",
        "parameters": [
          {
            "description": "The Payor ID from which to start the query to show all descendants",
            "in": "query",
            "name": "descendantsOfPayor",
            "required": false,
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          },
          {
            "description": "Query for the parent payor details for this payor id",
            "in": "query",
            "name": "parentOfPayor",
            "required": false,
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          },
          {
            "description": "<p>List of additional Payor fields to include in the response for each Payor</p>\n<p>The values of payorId and payorName are always included for each Payor by default</p>\n<p>You can add fields to the response for each payor by including them in the fields parameter separated by commas</p>\n<p>The supported fields are any combination of: primaryContactEmail,kycState</p>\n",
            "in": "query",
            "name": "fields",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PayorLinksResponse"
                }
              }
            },
            "description": "Details of Payor Links",
            "x-contracts": [
              {
                "contractId": 1,
                "headers": {
                  "Content-Type": "application/json"
                },
                "body": {
                  "links": [
                    {
                      "linkId": "65514617-d18d-4bb4-8cee-09b3e7625fc9",
                      "fromPayorId": "51e93026-2f47-4dfd-a5ff-c0da0954a847",
                      "linkType": "PARENT_OF",
                      "toPayorId": "b0b09d8a-866c-4703-833e-2ff9106e185b"
                    },
                    {
                      "linkId": "6a91b045-6f42-4f9f-a627-f97f66d39bef",
                      "fromPayorId": "b0b09d8a-866c-4703-833e-2ff9106e185b",
                      "linkType": "PARENT_OF",
                      "toPayorId": "15486051-aa39-430d-8926-a4bc2fea1d04"
                    }
                  ],
                  "payors": [
                    {
                      "payorId": "51e93026-2f47-4dfd-a5ff-c0da0954a847",
                      "payorName": "Payor One"
                    },
                    {
                      "payorId": "b0b09d8a-866c-4703-833e-2ff9106e185b",
                      "payorName": "Payor Two"
                    },
                    {
                      "payorId": "15486051-aa39-430d-8926-a4bc2fea1d04",
                      "payorName": "Payor Three"
                    }
                  ]
                },
                "matchers": {
                  "headers": [
                    {
                      "key": "Content-Type",
                      "regex": "application/json.*"
                    }
                  ]
                }
              },
              {
                "contractId": 2,
                "headers": {
                  "Content-Type": "application/json"
                },
                "body": {
                  "links": [
                    {
                      "linkId": "65514617-d18d-4bb4-8cee-09b3e7625fc9",
                      "fromPayorId": "51e93026-2f47-4dfd-a5ff-c0da0954a847",
                      "linkType": "PARENT_OF",
                      "toPayorId": "b0b09d8a-866c-4703-833e-2ff9106e185b"
                    },
                    {
                      "linkId": "6a91b045-6f42-4f9f-a627-f97f66d39bef",
                      "fromPayorId": "b0b09d8a-866c-4703-833e-2ff9106e185b",
                      "linkType": "PARENT_OF",
                      "toPayorId": "15486051-aa39-430d-8926-a4bc2fea1d04"
                    }
                  ],
                  "payors": [
                    {
                      "payorId": "51e93026-2f47-4dfd-a5ff-c0da0954a847",
                      "payorName": "Payor One",
                      "primaryContactEmail": "payorone@somewhere.com",
                      "kycState": "FAILED_KYC"
                    },
                    {
                      "payorId": "b0b09d8a-866c-4703-833e-2ff9106e185b",
                      "payorName": "Payor Two",
                      "primaryContactEmail": "payortwo@anothersite.com",
                      "kycState": "PASSED_KYC"
                    },
                    {
                      "payorId": "15486051-aa39-430d-8926-a4bc2fea1d04",
                      "payorName": "Payor Three",
                      "primaryContactEmail": "payorthree@example.com",
                      "kycState": "REQUIRES_KYC"
                    }
                  ]
                },
                "matchers": {
                  "headers": [
                    {
                      "key": "Content-Type",
                      "regex": "application/json.*"
                    }
                  ]
                }
              }
            ]
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_400"
                }
              }
            },
            "description": "Invalid request. See Error message payload for details of failure"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_403"
                }
              }
            },
            "description": "The authentication does not have permissions to access the resource\nThis usually occurs when there is a valid authentication instance (client or user) but they do not have the required permissions\n"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_404"
                }
              }
            },
            "description": "The resource was not found or is no longer available\n"
          }
        },
        "summary": "List Payor Links",
        "tags": [
          "Payor Hierarchy"
        ],
        "x-contracts": [
          {
            "contractId": 1,
            "ignored": true,
            "name": "Test List Payor Links - default Payor fields",
            "request": {
              "queryParameters": [
                {
                  "key": "descendantsOfPayor",
                  "value": "0a818933-087d-47f2-ad83-2f986ed087eb"
                }
              ]
            },
            "serviceName": "payor-service"
          },
          {
            "contractId": 2,
            "ignored": true,
            "name": "Test List Payor Links - all Payor fields requested",
            "request": {
              "queryParameters": [
                {
                  "key": "descendantsOfPayor",
                  "value": "0a818933-087d-47f2-ad83-2f986ed087eb"
                },
                {
                  "key": "fields",
                  "value": "primaryContactEmail,kycState"
                }
              ]
            },
            "serviceName": "payor-service"
          }
        ],
        "x-code-samples": [
          {
            "lang": "shell",
            "source": "$ curl 'https://api.sandbox.velopayments.com/v1/payorLinks?descendantsOfPayor=0a818933-087d-47f2-ad83-2f986ed087eb' -i -X GET \\\n    -H 'Authorization: Bearer 3387c417-464c-41a6-b25e-6630f0a06093' \\\n    -H 'Content-Type: application/json'\n"
          }
        ]
      },
      "post": {
        "description": "This endpoint allows you to create a payor link.",
        "operationId": "createPayorLinks",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreatePayorLinkRequest"
              }
            }
          },
          "description": "Request to create a payor link",
          "required": true
        },
        "responses": {
          "201": {
            "description": "HTTP Creeated",
            "headers": {
              "Location": {
                "description": "URI to location of created resource",
                "schema": {
                  "example": "http://example.com/resourcepath/123123123",
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_400"
                }
              }
            },
            "description": "Invalid request. See Error message payload for details of failure"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_403"
                }
              }
            },
            "description": "The authentication does not have permissions to access the resource\nThis usually occurs when there is a valid authentication instance (client or user) but they do not have the required permissions\n"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_404"
                }
              }
            },
            "description": "The resource was not found or is no longer available\n"
          }
        },
        "security": [
          {
            "oAuthVeloBackOffice": []
          }
        ],
        "summary": "Create a Payor Link",
        "tags": [
          "Payors Private"
        ]
      }
    },
    "/v3/payees/{payeeId}": {
      "delete": {
        "deprecated": true,
        "description": "<p>Use v4 instead</p>\n<p>This API will delete Payee by Id (UUID). Deletion by ID is not allowed if:</p>\n<p>* Payee ID is not found</p>\n<p>* If Payee has not been on-boarded</p>\n<p>* If Payee is in grace period</p>\n<p>* If Payee has existing payments</p>\n",
        "operationId": "deletePayeeByIdV3",
        "parameters": [
          {
            "description": "The UUID of the payee.",
            "in": "path",
            "name": "payeeId",
            "required": true,
            "schema": {
              "example": "2aa5d7e0-2ecb-403f-8494-1865ed0454e9",
              "format": "uuid",
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No content. Payee Id accepted for deletion."
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_400"
                }
              }
            },
            "description": "Invalid request. See Error message payload for details of failure"
          },
          "404": {
            "description": "Payee Id not found"
          }
        },
        "summary": "Delete Payee by Id",
        "tags": [
          "Payees"
        ]
      },
      "get": {
        "deprecated": true,
        "description": "<p>Use v4 instead</p>\n<p>Get Payee by Id</p>\n",
        "operationId": "getPayeeByIdV3",
        "parameters": [
          {
            "description": "The UUID of the payee.",
            "in": "path",
            "name": "payeeId",
            "required": true,
            "schema": {
              "example": "2aa5d7e0-2ecb-403f-8494-1865ed0454e9",
              "format": "uuid",
              "type": "string"
            }
          },
          {
            "description": "Optional. If omitted or set to false, any Personal Identifiable Information (PII) values are returned masked.\nIf set to true, and you have permission, the PII values will be returned as their original unmasked values.\n",
            "in": "query",
            "name": "sensitive",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PayeeDetailResponseV3"
                }
              }
            },
            "description": "Success response, request completed okay",
            "x-contracts": [
              {
                "contractId": 1,
                "headers": {
                  "Content-Type": "application/json"
                },
                "body": {
                  "payeeId": "2aa5d7e0-2ecb-403f-8494-1865ed0454e9",
                  "payorRefs": [
                    {
                      "payorId": "9ac75325-5dcd-42d5-b992-175d7e0a035e",
                      "remoteId": "remoteId",
                      "invitationStatus": "PENDING"
                    }
                  ],
                  "email": "bob@example.com",
                  "onboardedStatus": "CREATED",
                  "watchlistStatus": "PENDING",
                  "watchlistOverrideExpiresAtTimestamp": "2019-02-04T00:00:00.000Z",
                  "watchlistOverrideComment": "watchlist override comment",
                  "language": "fr",
                  "created": "2018-01-02T00:00:00.000Z",
                  "country": "US",
                  "displayName": "Cuthbert, Barney",
                  "payeeType": "Individual",
                  "disabled": false,
                  "disabledComment": "disabled comment",
                  "disabledUpdatedTimestamp": "2018-02-03T00:00:00.000Z",
                  "address": {
                    "line1": "100 Battery Street",
                    "line2": "line2",
                    "line3": "line3",
                    "line4": "line4",
                    "city": "San Francisco",
                    "countyOrProvince": "California",
                    "zipOrPostcode": "94018",
                    "country": "US"
                  },
                  "individual": {
                    "name": {
                      "title": "Mr",
                      "firstName": "Barney",
                      "otherNames": "Grubb",
                      "lastName": "Cuthbert"
                    },
                    "nationalIdentification": "XXXXX4321",
                    "dateOfBirth": "XXXX-XX-XX"
                  },
                  "cellphoneNumber": "0800800800",
                  "watchlistStatusUpdatedTimestamp": "2018-02-04T00:00:00.000Z",
                  "gracePeriodEndDate": "2019-12-23T00:00:00.000Z",
                  "enhancedKycCompleted": true,
                  "kycCompletedTimestamp": "2018-02-04T00:00:00.000Z",
                  "pausePayment": false,
                  "pausePaymentTimestamp": "2018-02-04T00:00:00.000Z",
                  "marketingOptInDecision": true,
                  "marketingOptInTimestamp": "2018-02-03T00:00:00.000Z",
                  "acceptTermsAndConditionsTimestamp": "2018-01-02T00:00:00.000Z"
                }
              },
              {
                "contractId": 2,
                "headers": {
                  "Content-Type": "application/json"
                },
                "body": {
                  "payeeId": "01b51877-2a17-427a-b2b0-d73f2b136315",
                  "payorRefs": [
                    {
                      "payorId": "9ac75325-5dcd-42d5-b992-175d7e0a035e",
                      "remoteId": "remoteId",
                      "invitationStatus": "PENDING"
                    }
                  ],
                  "email": "bob@example.com",
                  "onboardedStatus": "CREATED",
                  "watchlistStatus": "PENDING",
                  "watchlistOverrideExpiresAtTimestamp": "2019-02-04T00:00:00.000Z",
                  "watchlistOverrideComment": "watchlist override comment",
                  "language": "fr",
                  "created": "2018-01-02T00:00:00.000Z",
                  "country": "US",
                  "displayName": "Cuthbert, Barney",
                  "payeeType": "Company",
                  "disabled": false,
                  "disabledComment": "disabled comment",
                  "disabledUpdatedTimestamp": "2018-02-03T00:00:00.000Z",
                  "address": {
                    "line1": "100 Battery Street",
                    "line2": "line2",
                    "line3": "line3",
                    "line4": "line4",
                    "city": "San Francisco",
                    "countyOrProvince": "California",
                    "zipOrPostcode": "94018",
                    "country": "US"
                  },
                  "company": {
                    "name": "WIDGET CORP",
                    "taxId": "223344556",
                    "operatingName": "SAMPLE DBA NAME"
                  },
                  "cellphoneNumber": "0800800800",
                  "watchlistStatusUpdatedTimestamp": "2018-02-04T00:00:00.000Z",
                  "gracePeriodEndDate": "2019-12-23T00:00:00.000Z",
                  "enhancedKycCompleted": true,
                  "kycCompletedTimestamp": "2018-02-04T00:00:00.000Z",
                  "pausePayment": false,
                  "pausePaymentTimestamp": "2018-02-04T00:00:00.000Z",
                  "marketingOptInDecision": true,
                  "marketingOptInTimestamp": "2018-02-03T00:00:00.000Z",
                  "acceptTermsAndConditionsTimestamp": "2018-01-02T00:00:00.000Z"
                }
              },
              {
                "contractId": 4,
                "headers": {
                  "Content-Type": "application/json"
                },
                "body": {
                  "payeeId": "026cc3c8-3a0c-4083-a05b-e908048c1b08",
                  "payorRefs": [
                    {
                      "payorId": "9ac75325-5dcd-42d5-b992-175d7e0a035e",
                      "remoteId": "remoteId",
                      "invitationStatus": "PENDING"
                    }
                  ],
                  "email": "bob@example.com",
                  "onboardedStatus": "CREATED",
                  "watchlistStatus": "PENDING",
                  "watchlistOverrideExpiresAtTimestamp": "2019-02-04T00:00:00.000Z",
                  "watchlistOverrideComment": "watchlist override comment",
                  "language": "fr",
                  "created": "2018-01-02T00:00:00.000Z",
                  "country": "US",
                  "displayName": "Cuthbert, Barney",
                  "payeeType": "Individual",
                  "disabled": false,
                  "disabledComment": "disabled comment",
                  "disabledUpdatedTimestamp": "2018-02-03T00:00:00.000Z",
                  "address": {
                    "line1": "100 Battery Street",
                    "line2": "line2",
                    "line3": "line3",
                    "line4": "line4",
                    "city": "San Francisco",
                    "countyOrProvince": "California",
                    "zipOrPostcode": "94018",
                    "country": "US"
                  },
                  "individual": {
                    "name": {
                      "title": "Mr",
                      "firstName": "Barney",
                      "otherNames": "Grubb",
                      "lastName": "Cuthbert"
                    },
                    "nationalIdentification": "987654321",
                    "dateOfBirth": "1970-05-20T00:00:00.000Z"
                  },
                  "cellphoneNumber": "0800800800",
                  "watchlistStatusUpdatedTimestamp": "2018-02-04T00:00:00.000Z",
                  "gracePeriodEndDate": "2019-12-23T00:00:00.000Z",
                  "enhancedKycCompleted": true,
                  "kycCompletedTimestamp": "2018-02-04T00:00:00.000Z",
                  "pausePayment": false,
                  "pausePaymentTimestamp": "2018-02-04T00:00:00.000Z",
                  "marketingOptInDecision": true,
                  "marketingOptInTimestamp": "2018-02-03T00:00:00.000Z",
                  "acceptTermsAndConditionsTimestamp": "2018-01-02T00:00:00.000Z"
                }
              }
            ]
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_404"
                }
              }
            },
            "description": "The resource was not found or is no longer available\n"
          }
        },
        "summary": "Get Payee by Id",
        "tags": [
          "Payees"
        ],
        "x-contracts": [
          {
            "contractId": 1,
            "name": "Get Individual Payee v3",
            "serviceName": "payee-service",
            "contractPath": "/v3/payees/2aa5d7e0-2ecb-403f-8494-1865ed0454e9"
          },
          {
            "contractId": 2,
            "name": "Get Company Payee v3",
            "serviceName": "payee-service",
            "contractPath": "/v3/payees/01b51877-2a17-427a-b2b0-d73f2b136315"
          },
          {
            "contractId": 3,
            "name": "Payee Id Not Found v3",
            "serviceName": "payee-service",
            "contractPath": "/v3/payees/e67cbda6-c031-4aae-8e72-922fe76c7a24"
          },
          {
            "contractId": 4,
            "name": "Get Payee sensitive true v3",
            "serviceName": "payee-service",
            "contractPath": "/v3/payees/026cc3c8-3a0c-4083-a05b-e908048c1b08"
          }
        ]
      }
    },
    "/v3/payees": {
      "get": {
        "deprecated": true,
        "description": "<p>Use v4 instead</p>\nGet a paginated response listing the payees for a payor.\n",
        "operationId": "listPayeesV3",
        "parameters": [
          {
            "description": "The account owner Payor ID",
            "in": "query",
            "name": "payorId",
            "required": true,
            "schema": {
              "format": "uuid",
              "type": "string"
            },
            "x-contracts": [
              {
                "contractId": 1,
                "value": "0a818933-087d-47f2-ad83-2f986ed087eb",
                "matchers": [
                  {
                    "type": "equal_to",
                    "value": "0a818933-087d-47f2-ad83-2f986ed087eb"
                  }
                ]
              }
            ]
          },
          {
            "description": "The watchlistStatus of the payees.",
            "in": "query",
            "name": "watchlistStatus",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/WatchlistStatusV3"
            }
          },
          {
            "description": "Payee disabled",
            "in": "query",
            "name": "disabled",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": "The onboarded status of the payees.",
            "in": "query",
            "name": "onboardedStatus",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/OnboardedStatusV4"
            }
          },
          {
            "description": "Email address",
            "in": "query",
            "name": "email",
            "required": false,
            "schema": {
              "example": "bob@example.com",
              "format": "email",
              "type": "string"
            }
          },
          {
            "description": "The display name of the payees.",
            "in": "query",
            "name": "displayName",
            "required": false,
            "schema": {
              "example": "Bob Smith",
              "type": "string"
            }
          },
          {
            "description": "The remote id of the payees.",
            "in": "query",
            "name": "remoteId",
            "required": false,
            "schema": {
              "example": "remoteId123",
              "type": "string"
            }
          },
          {
            "description": "The onboarded status of the payees.",
            "in": "query",
            "name": "payeeType",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/PayeeType_2"
            }
          },
          {
            "description": "The country of the payee - 2 letter ISO 3166-1 country code (upper case)",
            "in": "query",
            "name": "payeeCountry",
            "required": false,
            "schema": {
              "example": "US",
              "type": "string"
            }
          },
          {
            "description": "Page number. Default is 1.",
            "in": "query",
            "name": "page",
            "required": false,
            "schema": {
              "default": 1,
              "example": 1,
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "description": "Page size. Default is 25. Max allowable is 100.",
            "in": "query",
            "name": "pageSize",
            "required": false,
            "schema": {
              "default": 25,
              "example": 25,
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "description": "List of sort fields (e.g. ?sort=onboardedStatus:asc,name:asc) Default is name:asc 'name' is treated as company name for companies - last name + ',' + firstName for individuals The supported sort fields are - payeeId, displayName, payoutStatus, onboardedStatus.\n",
            "in": "query",
            "name": "sort",
            "required": false,
            "schema": {
              "default": "displayName:asc",
              "example": "displayName:asc",
              "pattern": "[a-zA-Z]+[:desc|:asc]",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PagedPayeeResponseV3"
                }
              }
            },
            "description": "Details of Payee",
            "x-contracts": [
              {
                "contractId": 1,
                "headers": {
                  "Content-Type": "application/json"
                },
                "body": {
                  "page": {
                    "numberOfElements": 1,
                    "totalElements": 1,
                    "totalPages": 23,
                    "page": "9,",
                    "pageSize": 2
                  },
                  "links": [
                    {
                      "rel": "first",
                      "href": "https://api.sandbox.velopayments.com/v3/payees?payorId=1982b223-73b7-419d-a2e1-e64362b0ee8b&page=1&pageSize=2&sort=displayName:asc"
                    }
                  ],
                  "content": [
                    {
                      "payeeId": "ee2cc9a1-34dd-4ab6-91e3-db111d08d995"
                    }
                  ]
                },
                "matchers": {
                  "headers": [
                    {
                      "key": "Content-Type",
                      "regex": "application/json.*"
                    }
                  ],
                  "body": [
                    {
                      "path": "$.page.numberOfElements",
                      "type": "by_regex",
                      "predefined": "number"
                    },
                    {
                      "path": "$.page.totalElements",
                      "type": "by_regex",
                      "predefined": "number"
                    },
                    {
                      "path": "$.page.totalPages",
                      "type": "by_regex",
                      "predefined": "number"
                    },
                    {
                      "path": "$.page.page",
                      "type": "by_regex",
                      "predefined": "number"
                    },
                    {
                      "path": "$.page.pageSize",
                      "type": "by_regex",
                      "predefined": "number"
                    },
                    {
                      "path": "$.links",
                      "type": "by_type",
                      "minOccurrence": 1,
                      "maxOccurrence": 5
                    },
                    {
                      "path": "$.links[0].href",
                      "type": "by_regex",
                      "predefined": "url"
                    },
                    {
                      "path": "$.content",
                      "type": "by_type",
                      "minOccurrence": 1
                    },
                    {
                      "path": "$.content[0].payeeId",
                      "type": "by_regex",
                      "predefined": "uuid"
                    },
                    {
                      "path": "$.content[0].email",
                      "type": "by_regex",
                      "predefined": "email"
                    },
                    {
                      "path": "$.content[0].created",
                      "type": "by_regex",
                      "value": "([\\d]{4})-([\\d]{2})-([\\d]{2})T([\\d]{2}):([\\d]{2}):([\\d]{2})*(.([\\d]{1,3}))Z"
                    },
                    {
                      "path": "$.content[0].payorRefs[0].payorId",
                      "type": "by_regex",
                      "predefined": "uuid"
                    }
                  ]
                }
              }
            ]
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_400"
                }
              }
            },
            "description": "Invalid request. See Error message payload for details of failure"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_401"
                }
              }
            },
            "description": "Invalid access token. May be expired or invalid"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_403"
                }
              }
            },
            "description": "The authentication does not have permissions to access the resource\nThis usually occurs when there is a valid authentication instance (client or user) but they do not have the required permissions\n"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_404"
                }
              }
            },
            "description": "The resource was not found or is no longer available\n"
          }
        },
        "summary": "List Payees",
        "tags": [
          "Payees"
        ],
        "x-contracts": [
          {
            "contractId": 1,
            "name": "Test List Payees All params for v3",
            "headers": {
              "Content-Type": "application/json"
            },
            "request": {
              "queryParameters": [
                {
                  "key": "page",
                  "value": 1
                },
                {
                  "key": "pageSize",
                  "value": 30
                },
                {
                  "key": "watchlistStatus",
                  "value": "PASSED"
                },
                {
                  "key": "onboardedStatus",
                  "value": "CREATED"
                },
                {
                  "key": "email",
                  "value": "testemail@example.com"
                },
                {
                  "key": "displayName",
                  "value": "foo"
                },
                {
                  "key": "remoteId",
                  "value": "123123123asdf"
                },
                {
                  "key": "payeeType",
                  "value": "Individual"
                },
                {
                  "key": "payeeCountry",
                  "value": "US"
                }
              ]
            },
            "serviceName": "payee-service"
          }
        ],
        "x-code-samples": [
          {
            "lang": "shell",
            "source": "$ curl 'https://api.sandbox.velopayments.com/v3/payees?pageSize=2&page=8&payorId=9cade13d-0c55-41a7-9e6d-164e8b138b40&watchlistStatus=PASSED&onboardedStatus=INVITED&email=foo@example.com&displayName=Bar&remoteId=remote&payeeCountry=US&payeeType=Individual' -i -X GET \\\n    -H 'Authorization: Bearer 6dd5e976-e329-462f-bd6b-25d463cf02fd' \\\n    -H 'Content-Type: application/json'\n"
          }
        ]
      },
      "post": {
        "deprecated": true,
        "description": "<p>Use v4 instead</p>\nInitiate the process of creating 1 to 2000 payees in a batch Use the response location header to query\nfor status (201 - Created, 400 - invalid request body. In addition to standard semantic validations, a\n400 will also result if there is a duplicate remote id within the batch / if there is a duplicate email\nwithin the batch, i.e. if there is a conflict between the data provided for one payee within the batch and\nthat provided for another payee within the same batch). The validation at this stage is intra-batch only.\nValidation against payees who have already been invited occurs subsequently during processing of the batch.\n",
        "operationId": "createPayeeV3",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreatePayeesRequestV3"
              }
            },
            "multipart/form-data": {
              "schema": {
                "properties": {
                  "payorId": {
                    "format": "uuid",
                    "type": "string"
                  },
                  "file": {
                    "description": "CSV File of payee data",
                    "items": {
                      "$ref": "#/components/schemas/CreatePayeesCSVRequestV3"
                    },
                    "type": "array"
                  }
                },
                "type": "object"
              }
            }
          },
          "description": "Post payees to create.",
          "x-contracts": [
            {
              "contractId": 1,
              "headers": {
                "Content-Type": "application/json"
              },
              "body": {
                "payorId": "0a818933-087d-47f2-ad83-2f986ed087eb",
                "payees": [
                  {
                    "type": "Individual",
                    "remoteId": "remoteId",
                    "email": "bob@example.com",
                    "address": {
                      "line1": "100 Battery Street",
                      "line2": "line2",
                      "line3": "line3",
                      "line4": "line4",
                      "city": "San Francisco",
                      "countyOrProvince": "California",
                      "zipOrPostcode": "94018",
                      "country": "US"
                    },
                    "paymentChannel": {
                      "paymentChannelName": "My Payment Channel",
                      "accountNumber": "12345678",
                      "routingNumber": "123456789",
                      "countryCode": "US",
                      "currency": "USD",
                      "accountName": "Foo Account"
                    },
                    "individual": {
                      "name": {
                        "title": "Mr",
                        "firstName": "Barney",
                        "otherNames": "Grubb",
                        "lastName": "Cuthbert"
                      },
                      "nationalIdentification": "987654321",
                      "dateOfBirth": "1970-05-20T00:00:00.000Z"
                    },
                    "language": "fr"
                  },
                  {
                    "type": "Company",
                    "remoteId": "remoteId",
                    "email": "bob@example.com",
                    "address": {
                      "line1": "100 Battery Street",
                      "line2": "line2",
                      "line3": "line3",
                      "line4": "line4",
                      "city": "San Francisco",
                      "countyOrProvince": "California",
                      "zipOrPostcode": "94018",
                      "country": "US"
                    },
                    "paymentChannel": {
                      "paymentChannelName": "My Payment Channel",
                      "accountNumber": "12345678",
                      "routingNumber": "123456789",
                      "countryCode": "US",
                      "currency": "USD",
                      "accountName": "Foo Account"
                    },
                    "company": {
                      "name": "ABC Payee Corp",
                      "taxId": "223344556"
                    },
                    "language": "fr"
                  }
                ]
              },
              "matchers": {
                "headers": [
                  {
                    "key": "Content-Type",
                    "regex": "application/json.*"
                  }
                ],
                "body": [
                  {
                    "path": "$.payorId",
                    "type": "by_regex",
                    "predefined": "uuid"
                  },
                  {
                    "path": "$.payees",
                    "type": "by_regex",
                    "predefined": "non_empty"
                  }
                ]
              }
            },
            {
              "contractId": 2,
              "headers": {
                "Content-Type": "multipart/form-data"
              },
              "multipart": {
                "params": {
                  "payorId": "0a818933-087d-47f2-ad83-2f986ed087eb"
                },
                "named": [
                  {
                    "paramName": "file",
                    "fileName": "filename.csv",
                    "fileContent": "type,remoteId,email,addressLine1,addressLine2,addressLine3,addressLine4,addressCity,addressCountyOrProvince,addressZipOrPostcode,addressCountry,individualNationalIdentification,individualDateOfBirth,individualTite,individualFirstName,individualOtherNames,individualLastName,companyName,companyEIN,paymentChannelAccountNumber,paymentChannelRoutingNumber,paymentChannelIban,paymentChannelAccountName,paymentChannelCountryCode,paymentChannelCurrency,challengeDescription,challengeValue,payeeLanguage\\n Individual,remoteId123,bob@example.com,Address line 1,Address line 2,Address line 3,Address line 4,The City,The County,The Zip,GB,123456789,1970-02-25,Mr,Bob,Hungry,Wiggins,,,12345678,123456789,,Account name,US,USD,Challenge Description,Challenge Value,EN\\n Company,remoteId1234,jim@example.com,Address line 1,Address line 2,Address line 3,Address line 4,The City,The County,The Zip,GB,,,,,,,ABC Corp,987654321,,,1234567890123456789012345678901234,Account name,US,USD,,,FR\\n\n"
                  }
                ]
              }
            }
          ]
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreatePayeesCSVResponseV3"
                }
              }
            },
            "description": "HTTP Created. Body created only on CSV requests",
            "x-contracts": [
              {
                "contractId": 1,
                "headers": {
                  "Location": "https://api.sandbox.velopayments.com/v3/payees/batch/dbe7df3a-6b75-4bcb-97c5-45d25f828267"
                },
                "matchers": {
                  "headers": [
                    {
                      "key": "Location",
                      "type": "by_regex",
                      "predefined": "url"
                    }
                  ]
                }
              },
              {
                "contractId": 2,
                "headers": {
                  "Content-Type": "application/json",
                  "Location": "https://api.sandbox.velopayments.com/v3/payees/batch/dbe7df3a-6b75-4bcb-97c5-45d25f828267"
                },
                "matchers": {
                  "headers": [
                    {
                      "key": "Location",
                      "type": "by_regex",
                      "predefined": "url"
                    },
                    {
                      "key": "Content-Type",
                      "regex": "application/json.*"
                    }
                  ]
                }
              }
            ]
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_400"
                }
              }
            },
            "description": "Invalid request. See Error message payload for details of failure"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_401"
                }
              }
            },
            "description": "Invalid access token. May be expired or invalid"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_403"
                }
              }
            },
            "description": "The authentication does not have permissions to access the resource\nThis usually occurs when there is a valid authentication instance (client or user) but they do not have the required permissions\n"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_404"
                }
              }
            },
            "description": "The resource was not found or is no longer available\n"
          }
        },
        "summary": "Initiate Payee Creation",
        "tags": [
          "Payee Invitation"
        ],
        "x-contracts": [
          {
            "contractId": 1,
            "name": "Create Payees by JSON v3",
            "serviceName": "payee-service"
          },
          {
            "contractId": 2,
            "name": "Create Payees by CSV v3",
            "serviceName": "payee-service"
          }
        ],
        "x-code-samples": [
          {
            "lang": "shell",
            "source": "$ curl 'https://api.sandbox.velopayments.com/v3/payees' -i -X POST \\\n    -H 'Content-Type: application/json' \\\n    -H 'Authorization: Bearer 829d8ec0-00a3-4c95-8234-ad09500bb627' \\\n    -d '{\"payorId\":\"7ddebfed-0624-4bce-848d-40ffe818a2df\",\"payees\":[{\"type\":\"Individual\",\"remoteId\":\"remoteId\",\n    \"email\":\"bob@example.com\",\"address\":{\"line1\":\"100 Battery Street\",\"line2\":\"line2\",\"line3\":\"line3\",\n    \"line4\":\"line4\",\"city\":\"San Francisco\",\"countyOrProvince\":\"California\",\"zipOrPostcode\":\"94018\",\"country\":\"US\"},\n    \"paymentChannel\":{\"paymentChannelName\":\"My Payment Channel\",\"accountNumber\":\"12345678\",\"routingNumber\":\"123456789\",\n    \"countryCode\":\"US\",\"currency\":\"USD\",\"accountName\":\"Foo Account\"},\"individual\":{\"name\":{\"title\":\"Mr\",\n    \"firstName\":\"Barney\",\"otherNames\":\"Grubb\",\"lastName\":\"Cuthbert\"},\"nationalIdentification\":\"987654321\",\n    \"dateOfBirth\":\"1970-05-20\"},\"ofacOverride\":false,\"language\":\"fr\"},{\"type\":\"Company\",\"remoteId\":\"remoteId\",\n    \"email\":\"bob@example.com\",\"address\":{\"line1\":\"100 Battery Street\",\"line2\":\"line2\",\"line3\":\"line3\",\n    \"line4\":\"line4\",\"city\":\"San Francisco\",\"countyOrProvince\":\"California\",\"zipOrPostcode\":\"94018\",\"country\":\"US\"},\n    \"paymentChannel\":{\"paymentChannelName\":\"My Payment Channel\",\"accountNumber\":\"12345678\",\"routingNumber\":\"123456789\",\n    \"countryCode\":\"US\",\"currency\":\"USD\",\"accountName\":\"Foo Account\"},\"company\":{\"name\":\"ABC Payee Corp\",\n    \"taxId\":\"223344556\"},\"ofacOverride\":false,\"language\":\"fr\"}]}'\n"
          }
        ]
      }
    },
    "/v3/payees/batch/{batchId}": {
      "get": {
        "deprecated": true,
        "description": "<p>Use v4 instead</p>\nFetch the status of a specific batch of payees. The batch is fully processed when status is ACCEPTED and pendingCount is 0 ( 200 - OK, 404 - batch not found ).\n",
        "operationId": "queryBatchStatusV3",
        "parameters": [
          {
            "description": "Batch Id",
            "in": "path",
            "name": "batchId",
            "required": true,
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/QueryBatchResponseV3"
                }
              }
            },
            "description": "Get Batch Status"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_400"
                }
              }
            },
            "description": "Invalid request. See Error message payload for details of failure"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_401"
                }
              }
            },
            "description": "Invalid access token. May be expired or invalid"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_403"
                }
              }
            },
            "description": "The authentication does not have permissions to access the resource\nThis usually occurs when there is a valid authentication instance (client or user) but they do not have the required permissions\n"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_404"
                }
              }
            },
            "description": "The resource was not found or is no longer available\n"
          }
        },
        "summary": "Query Batch Status",
        "tags": [
          "Payee Invitation"
        ],
        "x-code-samples": [
          {
            "lang": "shell",
            "source": "$ curl 'https://api.sandbox.velopayments.com/v3/payees/batch/cb6ff8c6-85e9-45a6-b7d9-d05305db67f3' -i -X GET \\\n    -H 'Content-Type: application/json' \\\n    -H 'Authorization: Bearer f01caad1-5ae5-454d-9467-5053e459fe45'\n"
          }
        ]
      }
    },
    "/v3/payees/{payeeId}/invite": {
      "post": {
        "deprecated": true,
        "description": "<p>Use v4 instead</p>\n<p>Resend an invite to the Payee The payee must have already been invited by the payor and not yet accepted or declined</p>\n<p>Any previous invites to the payee by this Payor will be invalidated</p>\n",
        "operationId": "resendPayeeInviteV3",
        "parameters": [
          {
            "description": "The UUID of the payee.",
            "in": "path",
            "name": "payeeId",
            "required": true,
            "schema": {
              "example": "2aa5d7e0-2ecb-403f-8494-1865ed0454e9",
              "format": "uuid",
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/InvitePayeeRequestV3"
              }
            }
          },
          "description": "Provide Payor Id in body of request",
          "required": true
        },
        "responses": {
          "200": {
            "description": "the request was accepted"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_400"
                }
              }
            },
            "description": "Invalid request. See Error message payload for details of failure"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_401"
                }
              }
            },
            "description": "Invalid access token. May be expired or invalid"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_403"
                }
              }
            },
            "description": "The authentication does not have permissions to access the resource\nThis usually occurs when there is a valid authentication instance (client or user) but they do not have the required permissions\n"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_404"
                }
              }
            },
            "description": "The resource was not found or is no longer available\n"
          },
          "409": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_409"
                }
              }
            },
            "description": "The request contained data that would result in a duplicate value\n"
          }
        },
        "summary": "Resend Payee Invite",
        "tags": [
          "Payee Invitation"
        ],
        "x-code-samples": [
          {
            "lang": "shell",
            "source": "$ curl 'https://api.sandbox.velopayments.com/v3/payees/5032e339-2e24-4fca-bfc9-f6a66e3157dd/invite' -i -X POST \\\n    -H 'Authorization: Bearer 5e40dde3-ff1c-4d69-94b0-3a6e96fd789e' \\\n    -H 'Content-Type: application/json' \\\n    -d '{\"payorId\":\"545e29bd-75a8-4354-8192-ae68bab59d7b\"}'\n"
          }
        ]
      }
    },
    "/v3/payees/payors/{payorId}/invitationStatus": {
      "get": {
        "deprecated": true,
        "description": "<p>Use v4 instead</p>\n<p>Returns a filtered, paginated list of payees associated with a payor, along with invitation status and grace period end date.</p>\n",
        "operationId": "getPayeesInvitationStatusV3",
        "parameters": [
          {
            "description": "The account owner Payor ID",
            "in": "path",
            "name": "payorId",
            "required": true,
            "schema": {
              "example": "9ac75325-5dcd-42d5-b992-175d7e0a035e",
              "format": "uuid",
              "type": "string"
            }
          },
          {
            "description": "The UUID of the payee.",
            "in": "query",
            "name": "payeeId",
            "required": false,
            "schema": {
              "example": "2aa5d7e0-2ecb-403f-8494-1865ed0454e9",
              "format": "uuid",
              "type": "string"
            }
          },
          {
            "description": "The invitation status of the payees.",
            "in": "query",
            "name": "invitationStatus",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/InvitationStatusV4"
            }
          },
          {
            "description": "Page number. Default is 1.",
            "in": "query",
            "name": "page",
            "required": false,
            "schema": {
              "default": 1,
              "example": 1,
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "description": "Page size. Default is 25. Max allowable is 100.",
            "in": "query",
            "name": "pageSize",
            "required": false,
            "schema": {
              "default": 25,
              "example": 25,
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PagedPayeeInvitationStatusResponseV3"
                }
              }
            },
            "description": "Get Payees with Invitaion status - filters of payeeId and invitationStatus",
            "x-contracts": [
              {
                "contractId": 1,
                "headers": {
                  "Content-Type": "application/json"
                },
                "body": {
                  "page": {
                    "numberOfElements": 1,
                    "totalElements": 1,
                    "totalPages": 1,
                    "page": 1,
                    "pageSize": 25
                  },
                  "links": [
                    {
                      "rel": "first",
                      "href": "http://localhost:62142/v3/payees/payors/f20b038b-e841-4d80-9175-b47c6cf19bc1/invitationStatus?payeeId=c3d60e1f-a4d0-4273-b501-bfa81c70d56b&invitationStatus=ACCEPTED&page=1&pageSize=25"
                    }
                  ],
                  "content": [
                    {
                      "payeeId": "c3d60e1f-a4d0-4273-b501-bfa81c70d56b"
                    }
                  ]
                },
                "matchers": {
                  "headers": [
                    {
                      "key": "Content-Type",
                      "regex": "application/json.*"
                    }
                  ],
                  "body": [
                    {
                      "path": "$.page",
                      "type": "by_type",
                      "minOccurrence": 1
                    },
                    {
                      "path": "$.page.numberOfElements",
                      "type": "by_regex",
                      "predefined": "number"
                    },
                    {
                      "path": "$.page.totalElements",
                      "type": "by_regex",
                      "predefined": "number"
                    },
                    {
                      "path": "$.page.totalPages",
                      "type": "by_regex",
                      "predefined": "number"
                    },
                    {
                      "path": "$.page.page",
                      "type": "by_regex",
                      "predefined": "number"
                    },
                    {
                      "path": "$.page.pageSize",
                      "type": "by_regex",
                      "predefined": "number"
                    },
                    {
                      "path": "$.links",
                      "type": "by_type",
                      "minOccurrence": 1,
                      "maxOccurrence": 5
                    },
                    {
                      "path": "$.links[0].href",
                      "type": "by_regex",
                      "predefined": "url"
                    },
                    {
                      "path": "$.content",
                      "type": "by_type",
                      "minOccurrence": 1
                    },
                    {
                      "path": "$.content[0].payeeId",
                      "type": "by_regex",
                      "predefined": "uuid"
                    }
                  ]
                }
              }
            ]
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_400"
                }
              }
            },
            "description": "Invalid request. See Error message payload for details of failure"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_401"
                }
              }
            },
            "description": "Invalid access token. May be expired or invalid"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_403"
                }
              }
            },
            "description": "The authentication does not have permissions to access the resource\nThis usually occurs when there is a valid authentication instance (client or user) but they do not have the required permissions\n"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_404"
                }
              }
            },
            "description": "The resource was not found or is no longer available\n"
          }
        },
        "summary": "Get Payee Invitation Status",
        "tags": [
          "Payee Invitation"
        ],
        "x-code-samples": [
          {
            "lang": "shell",
            "source": "$ curl 'https://api.sandbox.velopayments.com/v3/payees/payors/f20b038b-e841-4d80-9175-b47c6cf19bc1/invitationStatus?payeeId=c3d60e1f-a4d0-4273-b501-bfa81c70d56b&invitationStatus=ACCEPTED' -i -X GET \\\n    -H 'Authorization: Bearer ed73aa9a-b51b-44cb-a8e9-11e2fb85046b'\n"
          }
        ]
      }
    },
    "/v3/payees/deltas": {
      "get": {
        "deprecated": true,
        "description": "<p>Use v4 instead</p>\n<p>Get a paginated response listing payee changes.</p>\n",
        "operationId": "listPayeeChangesV3",
        "parameters": [
          {
            "description": "The Payor ID to find associated Payees",
            "in": "query",
            "name": "payorId",
            "required": true,
            "schema": {
              "format": "uuid",
              "type": "string"
            },
            "x-contracts": [
              {
                "contractId": 1,
                "value": "0a818933-087d-47f2-ad83-2f986ed087eb",
                "matchers": [
                  {
                    "type": "equal_to",
                    "value": "0a818933-087d-47f2-ad83-2f986ed087eb"
                  }
                ]
              }
            ]
          },
          {
            "description": "The updatedSince filter in the format YYYY-MM-DDThh:mm:ss+hh:mm",
            "in": "query",
            "name": "updatedSince",
            "required": true,
            "schema": {
              "format": "date-time",
              "type": "string"
            },
            "x-contracts": [
              {
                "contractId": 1,
                "value": "2019-01-20T09:00:00.000Z",
                "matchers": [
                  {
                    "type": "equal_to",
                    "value": "2019-01-20T09:00:00.000Z"
                  }
                ]
              }
            ]
          },
          {
            "description": "Page number. Default is 1.",
            "in": "query",
            "name": "page",
            "required": false,
            "schema": {
              "default": 1,
              "example": 1,
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "description": "Page size. Default is 100. Max allowable is 1000.",
            "in": "query",
            "name": "pageSize",
            "required": false,
            "schema": {
              "default": 100,
              "example": 100,
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PayeeDeltaResponseV3"
                }
              }
            },
            "description": "Details of Payee Changes",
            "x-contracts": null
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_400"
                }
              }
            },
            "description": "Invalid request. See Error message payload for details of failure"
          }
        },
        "summary": "List Payee Changes",
        "tags": [
          "Payees"
        ],
        "x-contracts": [
          {
            "contractId": 1,
            "name": "Test List Payee Changes V3",
            "ignored": true,
            "request": {
              "queryParameters": [
                {
                  "key": "page",
                  "value": 1
                },
                {
                  "key": "pageSize",
                  "value": 30
                }
              ]
            },
            "serviceName": "payee-service"
          }
        ],
        "x-code-samples": [
          {
            "lang": "shell",
            "source": "$ curl 'https://api.sandbox.velopayments.com/v3/payees/deltas?pageSize=2&page=8&payorId=0a818933-087d-47f2-ad83-2f986ed087eb&updatedSince=2019-01-20T09:00:00+00:00' -i -X GET \\\n    -H 'Authorization: Bearer 6dd5e976-e329-462f-bd6b-25d463cf02fd' \\\n    -H 'Content-Type: application/json'\n"
          }
        ]
      }
    },
    "/v3/payees/{payeeId}/remoteIdUpdate": {
      "post": {
        "deprecated": true,
        "description": "<p>Use v4 instead</p>\n<p>Update the remote Id for the given Payee Id.</p>\n",
        "parameters": [
          {
            "description": "The UUID of the payee.",
            "in": "path",
            "name": "payeeId",
            "required": true,
            "schema": {
              "example": "2aa5d7e0-2ecb-403f-8494-1865ed0454e9",
              "format": "uuid",
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateRemoteIdRequestV3"
              }
            }
          },
          "description": "Request to update payee remote id v3",
          "required": true
        },
        "responses": {
          "204": {
            "description": "Accepted, No Content"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_400"
                }
              }
            },
            "description": "Invalid request. See Error message payload for details of failure"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_401"
                }
              }
            },
            "description": "Invalid access token. May be expired or invalid"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_403"
                }
              }
            },
            "description": "The authentication does not have permissions to access the resource\nThis usually occurs when there is a valid authentication instance (client or user) but they do not have the required permissions\n"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_404"
                }
              }
            },
            "description": "The resource was not found or is no longer available\n"
          },
          "409": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_409"
                }
              }
            },
            "description": "The request contained data that would result in a duplicate value\n"
          }
        },
        "summary": "Update Payee Remote Id",
        "tags": [
          "Payees"
        ]
      }
    },
    "/v3/payees/{payeeId}/payeeDetailsUpdate": {
      "post": {
        "deprecated": true,
        "description": "<p>Use v4 instead</p>\n<p>Update payee details for the given Payee Id.<p>\n",
        "operationId": "payeeDetailsUpdateV3",
        "parameters": [
          {
            "description": "The UUID of the payee.",
            "in": "path",
            "name": "payeeId",
            "required": true,
            "schema": {
              "example": "2aa5d7e0-2ecb-403f-8494-1865ed0454e9",
              "format": "uuid",
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdatePayeeDetailsRequestV3"
              }
            }
          },
          "description": "Request to update payee details",
          "required": true
        },
        "responses": {
          "204": {
            "description": "Request accepted"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_400"
                }
              }
            },
            "description": "Invalid request. See Error message payload for details of failure"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_401"
                }
              }
            },
            "description": "Invalid access token. May be expired or invalid"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_403"
                }
              }
            },
            "description": "The authentication does not have permissions to access the resource\nThis usually occurs when there is a valid authentication instance (client or user) but they do not have the required permissions\n"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_404"
                }
              }
            },
            "description": "The resource was not found or is no longer available\n"
          }
        },
        "summary": "Update Payee Details",
        "tags": [
          "Payees"
        ],
        "x-code-samples": [
          {
            "lang": "shell",
            "source": "$ curl 'https://api.sandbox.velopayments.com/v3/payees/77f84ae9-42df-49d7-941b-47360347f86f/payeeDetailsUpdate' -i -X POST \\\n    -H 'Authorization: Bearer ed73aa9a-b51b-44cb-a8e9-11e2fb85046b' \\\n    -H 'Content-Type: application/json' \\\n    -d '{\n            \"address\": {\n                \"line1\": \"line1\",\n                \"line2\": \"line2\",\n                \"line3\": \"line3\",\n                \"line4\": \"line4\",\n                \"city\": \"City\",\n                \"countyOrProvince\": \"county\",\n                \"zipOrPostcode\": \"BS11AA\",\n                \"country\": \"US\"\n            },\n            \"individual\": {\n                \"name\": {\n                    \"title\": \"Mr\",\n                    \"firstName\": \"A\",\n                    \"otherNames\": \"P\",\n                    \"lastName\": \"Smith\"\n                },\n                \"nationalIdentification\": \"987654321\",\n                \"dateOfBirth\": \"1970-04-03\"\n            }\n        }'\n"
          }
        ]
      }
    },
    "/v4/payees/{payeeId}": {
      "delete": {
        "description": "<p>This API will delete Payee by Id (UUID). Deletion by ID is not allowed if:</p>\n<p>* Payee ID is not found</p>\n<p>* If Payee has not been on-boarded</p>\n<p>* If Payee is in grace period</p>\n<p>* If Payee has existing payments</p>\n",
        "operationId": "deletePayeeByIdV4",
        "parameters": [
          {
            "description": "The UUID of the payee.",
            "in": "path",
            "name": "payeeId",
            "required": true,
            "schema": {
              "example": "2aa5d7e0-2ecb-403f-8494-1865ed0454e9",
              "format": "uuid",
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No content. Payee Id accepted for deletion."
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_400"
                }
              }
            },
            "description": "Invalid request. See Error message payload for details of failure"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_404"
                }
              }
            },
            "description": "The resource was not found or is no longer available\n"
          }
        },
        "summary": "Delete Payee by Id",
        "tags": [
          "Payees"
        ]
      },
      "get": {
        "description": "Get Payee by Id",
        "operationId": "getPayeeByIdV4",
        "parameters": [
          {
            "description": "The UUID of the payee.",
            "in": "path",
            "name": "payeeId",
            "required": true,
            "schema": {
              "example": "2aa5d7e0-2ecb-403f-8494-1865ed0454e9",
              "format": "uuid",
              "type": "string"
            }
          },
          {
            "description": "Optional. If omitted or set to false, any Personal Identifiable Information (PII) values are returned masked.\nIf set to true, and you have permission, the PII values will be returned as their original unmasked values.\n",
            "in": "query",
            "name": "sensitive",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PayeeDetailResponseV4"
                }
              }
            },
            "description": "Success response, request completed okay",
            "x-contracts": [
              {
                "contractId": 1,
                "headers": {
                  "Content-Type": "application/json"
                },
                "body": {
                  "payeeId": "2aa5d7e0-2ecb-403f-8494-1865ed0454e9",
                  "payorRefs": [
                    {
                      "payorId": "9ac75325-5dcd-42d5-b992-175d7e0a035e",
                      "remoteId": "remoteId",
                      "invitationStatus": "PENDING"
                    }
                  ],
                  "email": "bob@example.com",
                  "onboardedStatus": "CREATED",
                  "watchlistStatus": "PENDING",
                  "watchlistOverrideExpiresAtTimestamp": "2019-02-04T00:00:00.000Z",
                  "watchlistOverrideComment": "watchlist override comment",
                  "language": "fr",
                  "created": "2018-01-02T00:00:00.000Z",
                  "country": "US",
                  "displayName": "Cuthbert, Barney",
                  "payeeType": "Individual",
                  "disabled": false,
                  "disabledComment": "disabled comment",
                  "disabledUpdatedTimestamp": "2018-02-03T00:00:00.000Z",
                  "address": {
                    "line1": "100 Battery Street",
                    "line2": "line2",
                    "line3": "line3",
                    "line4": "line4",
                    "city": "San Francisco",
                    "countyOrProvince": "California",
                    "zipOrPostcode": "94018",
                    "country": "US"
                  },
                  "individual": {
                    "name": {
                      "title": "Mr",
                      "firstName": "Barney",
                      "otherNames": "Grubb",
                      "lastName": "Cuthbert"
                    },
                    "nationalIdentification": "XXXXX4321",
                    "dateOfBirth": "XXXX-XX-XX"
                  },
                  "cellphoneNumber": "0800800800",
                  "watchlistStatusUpdatedTimestamp": "2018-02-04T00:00:00.000Z",
                  "gracePeriodEndDate": "2019-12-23T00:00:00.000Z",
                  "enhancedKycCompleted": true,
                  "kycCompletedTimestamp": "2018-02-04T00:00:00.000Z",
                  "pausePayment": false,
                  "pausePaymentTimestamp": "2018-02-04T00:00:00.000Z",
                  "marketingOptInDecision": true,
                  "marketingOptInTimestamp": "2018-02-03T00:00:00.000Z",
                  "acceptTermsAndConditionsTimestamp": "2018-01-02T00:00:00.000Z"
                }
              },
              {
                "contractId": 2,
                "headers": {
                  "Content-Type": "application/json"
                },
                "body": {
                  "payeeId": "01b51877-2a17-427a-b2b0-d73f2b136315",
                  "payorRefs": [
                    {
                      "payorId": "9ac75325-5dcd-42d5-b992-175d7e0a035e",
                      "remoteId": "remoteId",
                      "invitationStatus": "PENDING"
                    }
                  ],
                  "email": "bob@example.com",
                  "onboardedStatus": "CREATED",
                  "watchlistStatus": "PENDING",
                  "watchlistOverrideExpiresAtTimestamp": "2019-02-04T00:00:00.000Z",
                  "watchlistOverrideComment": "watchlist override comment",
                  "language": "fr",
                  "created": "2018-01-02T00:00:00.000Z",
                  "country": "US",
                  "displayName": "Cuthbert, Barney",
                  "payeeType": "Company",
                  "disabled": false,
                  "disabledComment": "disabled comment",
                  "disabledUpdatedTimestamp": "2018-02-03T00:00:00.000Z",
                  "address": {
                    "line1": "100 Battery Street",
                    "line2": "line2",
                    "line3": "line3",
                    "line4": "line4",
                    "city": "San Francisco",
                    "countyOrProvince": "California",
                    "zipOrPostcode": "94018",
                    "country": "US"
                  },
                  "company": {
                    "name": "WIDGET CORP",
                    "taxId": "223344556",
                    "operatingName": "SAMPLE DBA NAME"
                  },
                  "cellphoneNumber": "0800800800",
                  "watchlistStatusUpdatedTimestamp": "2018-02-04T00:00:00.000Z",
                  "gracePeriodEndDate": "2019-12-23T00:00:00.000Z",
                  "enhancedKycCompleted": true,
                  "kycCompletedTimestamp": "2018-02-04T00:00:00.000Z",
                  "pausePayment": false,
                  "pausePaymentTimestamp": "2018-02-04T00:00:00.000Z",
                  "marketingOptInDecision": true,
                  "marketingOptInTimestamp": "2018-02-03T00:00:00.000Z",
                  "acceptTermsAndConditionsTimestamp": "2018-01-02T00:00:00.000Z"
                }
              },
              {
                "contractId": 4,
                "headers": {
                  "Content-Type": "application/json"
                },
                "body": {
                  "payeeId": "026cc3c8-3a0c-4083-a05b-e908048c1b08",
                  "payorRefs": [
                    {
                      "payorId": "9ac75325-5dcd-42d5-b992-175d7e0a035e",
                      "remoteId": "remoteId",
                      "invitationStatus": "PENDING"
                    }
                  ],
                  "email": "bob@example.com",
                  "onboardedStatus": "CREATED",
                  "watchlistStatus": "PENDING",
                  "watchlistOverrideExpiresAtTimestamp": "2019-02-04T00:00:00.000Z",
                  "watchlistOverrideComment": "watchlist override comment",
                  "language": "fr",
                  "created": "2018-01-02T00:00:00.000Z",
                  "country": "US",
                  "displayName": "Cuthbert, Barney",
                  "payeeType": "Individual",
                  "disabled": false,
                  "disabledComment": "disabled comment",
                  "disabledUpdatedTimestamp": "2018-02-03T00:00:00.000Z",
                  "address": {
                    "line1": "100 Battery Street",
                    "line2": "line2",
                    "line3": "line3",
                    "line4": "line4",
                    "city": "San Francisco",
                    "countyOrProvince": "California",
                    "zipOrPostcode": "94018",
                    "country": "US"
                  },
                  "individual": {
                    "name": {
                      "title": "Mr",
                      "firstName": "Barney",
                      "otherNames": "Grubb",
                      "lastName": "Cuthbert"
                    },
                    "nationalIdentification": "987654321",
                    "dateOfBirth": "1970-05-20T00:00:00.000Z"
                  },
                  "cellphoneNumber": "0800800800",
                  "watchlistStatusUpdatedTimestamp": "2018-02-04T00:00:00.000Z",
                  "gracePeriodEndDate": "2019-12-23T00:00:00.000Z",
                  "enhancedKycCompleted": true,
                  "kycCompletedTimestamp": "2018-02-04T00:00:00.000Z",
                  "pausePayment": false,
                  "pausePaymentTimestamp": "2018-02-04T00:00:00.000Z",
                  "marketingOptInDecision": true,
                  "marketingOptInTimestamp": "2018-02-03T00:00:00.000Z",
                  "acceptTermsAndConditionsTimestamp": "2018-01-02T00:00:00.000Z"
                }
              }
            ]
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_404"
                }
              }
            },
            "description": "The resource was not found or is no longer available\n"
          }
        },
        "summary": "Get Payee by Id",
        "tags": [
          "Payees"
        ],
        "x-contracts": [
          {
            "contractId": 1,
            "name": "Get Individual Payee v4",
            "serviceName": "payee-service",
            "contractPath": "/v4/payees/2aa5d7e0-2ecb-403f-8494-1865ed0454e9"
          },
          {
            "contractId": 2,
            "name": "Get Company Payee v4",
            "serviceName": "payee-service",
            "contractPath": "/v4/payees/01b51877-2a17-427a-b2b0-d73f2b136315"
          },
          {
            "contractId": 3,
            "name": "Payee Id Not Found v4",
            "serviceName": "payee-service",
            "contractPath": "/v4/payees/e67cbda6-c031-4aae-8e72-922fe76c7a24"
          },
          {
            "contractId": 4,
            "name": "Get Payee sensitive true v4",
            "serviceName": "payee-service",
            "contractPath": "/v4/payees/026cc3c8-3a0c-4083-a05b-e908048c1b08"
          }
        ]
      }
    },
    "/v4/payees/{payeeId}/payeeDetailsUpdate": {
      "post": {
        "description": "<p>Update payee details for the given Payee Id.</p>\n<p>Payors may only update the payee details if the payee has not yet onboarded</p>\n",
        "operationId": "payeeDetailsUpdateV4",
        "parameters": [
          {
            "description": "The UUID of the payee.",
            "in": "path",
            "name": "payeeId",
            "required": true,
            "schema": {
              "example": "2aa5d7e0-2ecb-403f-8494-1865ed0454e9",
              "format": "uuid",
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdatePayeeDetailsRequestV4"
              }
            }
          },
          "description": "Request to update payee details",
          "required": true
        },
        "responses": {
          "204": {
            "description": "Request accepted"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_400"
                }
              }
            },
            "description": "Invalid request. See Error message payload for details of failure"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_401"
                }
              }
            },
            "description": "Invalid access token. May be expired or invalid"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_403"
                }
              }
            },
            "description": "The authentication does not have permissions to access the resource\nThis usually occurs when there is a valid authentication instance (client or user) but they do not have the required permissions\n"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_404"
                }
              }
            },
            "description": "The resource was not found or is no longer available\n"
          }
        },
        "summary": "Update Payee Details",
        "tags": [
          "Payees"
        ],
        "x-code-samples": [
          {
            "lang": "shell",
            "source": "$ curl 'https://api.sandbox.velopayments.com/v4/payees/77f84ae9-42df-49d7-941b-47360347f86f/payeeDetailsUpdate' -i -X POST \\\n    -H 'Authorization: Bearer ed73aa9a-b51b-44cb-a8e9-11e2fb85046b' \\\n    -H 'Content-Type: application/json' \\\n    -d '{\n            \"address\": {\n                \"line1\": \"line1\",\n                \"line2\": \"line2\",\n                \"line3\": \"line3\",\n                \"line4\": \"line4\",\n                \"city\": \"City\",\n                \"countyOrProvince\": \"county\",\n                \"zipOrPostcode\": \"BS11AA\",\n                \"country\": \"US\"\n            },\n            \"individual\": {\n                \"name\": {\n                    \"title\": \"Mr\",\n                    \"firstName\": \"A\",\n                    \"otherNames\": \"P\",\n                    \"lastName\": \"Smith\"\n                },\n                \"nationalIdentification\": \"987654321\",\n                \"dateOfBirth\": \"1970-04-03\"\n            }\n        }'\n"
          }
        ]
      }
    },
    "/v4/payees/{payeeId}/remoteIdUpdate": {
      "post": {
        "description": "<p>Update the remote Id for the given Payee Id.</p>\n",
        "parameters": [
          {
            "description": "The UUID of the payee.",
            "in": "path",
            "name": "payeeId",
            "required": true,
            "schema": {
              "example": "2aa5d7e0-2ecb-403f-8494-1865ed0454e9",
              "format": "uuid",
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateRemoteIdRequestV4"
              }
            }
          },
          "description": "Request to update payee remote id v4",
          "required": true
        },
        "responses": {
          "204": {
            "description": "Accepted, No Content"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_400"
                }
              }
            },
            "description": "Invalid request. See Error message payload for details of failure"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_401"
                }
              }
            },
            "description": "Invalid access token. May be expired or invalid"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_403"
                }
              }
            },
            "description": "The authentication does not have permissions to access the resource\nThis usually occurs when there is a valid authentication instance (client or user) but they do not have the required permissions\n"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_404"
                }
              }
            },
            "description": "The resource was not found or is no longer available\n"
          },
          "409": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_409"
                }
              }
            },
            "description": "The request contained data that would result in a duplicate value\n"
          }
        },
        "summary": "Update Payee Remote Id",
        "tags": [
          "Payees"
        ]
      }
    },
    "/v4/payees": {
      "get": {
        "description": "Get a paginated response listing the payees for a payor.",
        "operationId": "listPayeesV4",
        "parameters": [
          {
            "description": "The account owner Payor ID",
            "in": "query",
            "name": "payorId",
            "required": true,
            "schema": {
              "format": "uuid",
              "type": "string"
            },
            "x-contracts": [
              {
                "contractId": 1,
                "value": "0a818933-087d-47f2-ad83-2f986ed087eb",
                "matchers": [
                  {
                    "type": "equal_to",
                    "value": "0a818933-087d-47f2-ad83-2f986ed087eb"
                  }
                ]
              }
            ]
          },
          {
            "description": "The watchlistStatus of the payees.",
            "in": "query",
            "name": "watchlistStatus",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/WatchlistStatusV3"
            }
          },
          {
            "description": "Payee disabled",
            "in": "query",
            "name": "disabled",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": "The onboarded status of the payees.",
            "in": "query",
            "name": "onboardedStatus",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/OnboardedStatusV4"
            }
          },
          {
            "description": "Email address",
            "in": "query",
            "name": "email",
            "required": false,
            "schema": {
              "example": "bob@example.com",
              "format": "email",
              "type": "string"
            }
          },
          {
            "description": "The display name of the payees.",
            "in": "query",
            "name": "displayName",
            "required": false,
            "schema": {
              "example": "Bob Smith",
              "type": "string"
            }
          },
          {
            "description": "The remote id of the payees.",
            "in": "query",
            "name": "remoteId",
            "required": false,
            "schema": {
              "example": "remoteId123",
              "type": "string"
            }
          },
          {
            "description": "The onboarded status of the payees.",
            "in": "query",
            "name": "payeeType",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/PayeeType_2"
            }
          },
          {
            "description": "The country of the payee - 2 letter ISO 3166-1 country code (upper case)",
            "in": "query",
            "name": "payeeCountry",
            "required": false,
            "schema": {
              "example": "US",
              "type": "string"
            }
          },
          {
            "description": "The ofacStatus of the payees.",
            "in": "query",
            "name": "ofacStatus",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/OfacStatusV4"
            }
          },
          {
            "description": "Page number. Default is 1.",
            "in": "query",
            "name": "page",
            "required": false,
            "schema": {
              "default": 1,
              "example": 1,
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "description": "Page size. Default is 25. Max allowable is 100.",
            "in": "query",
            "name": "pageSize",
            "required": false,
            "schema": {
              "default": 25,
              "example": 25,
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "description": "List of sort fields (e.g. ?sort=onboardedStatus:asc,name:asc) Default is name:asc 'name' is treated as company name for companies - last name + ',' + firstName for individuals The supported sort fields are - payeeId, displayName, payoutStatus, onboardedStatus.\n",
            "in": "query",
            "name": "sort",
            "required": false,
            "schema": {
              "default": "displayName:asc",
              "example": "displayName:asc",
              "pattern": "[a-zA-Z]+[:desc|:asc]",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PagedPayeeResponseV4"
                }
              }
            },
            "description": "Details of Payee",
            "x-contracts": [
              {
                "contractId": 1,
                "headers": {
                  "Content-Type": "application/json"
                },
                "body": {
                  "page": {
                    "numberOfElements": 1,
                    "totalElements": 1,
                    "totalPages": 23,
                    "page": "9,",
                    "pageSize": 2
                  },
                  "links": [
                    {
                      "rel": "first",
                      "href": "https://api.sandbox.velopayments.com/v4/payees?payorId=1982b223-73b7-419d-a2e1-e64362b0ee8b&page=1&pageSize=2&sort=displayName:asc"
                    }
                  ],
                  "content": [
                    {
                      "payeeId": "ee2cc9a1-34dd-4ab6-91e3-db111d08d995"
                    }
                  ]
                },
                "matchers": {
                  "headers": [
                    {
                      "key": "Content-Type",
                      "regex": "application/json.*"
                    }
                  ],
                  "body": [
                    {
                      "path": "$.page.numberOfElements",
                      "type": "by_regex",
                      "predefined": "number"
                    },
                    {
                      "path": "$.page.totalElements",
                      "type": "by_regex",
                      "predefined": "number"
                    },
                    {
                      "path": "$.page.totalPages",
                      "type": "by_regex",
                      "predefined": "number"
                    },
                    {
                      "path": "$.page.page",
                      "type": "by_regex",
                      "predefined": "number"
                    },
                    {
                      "path": "$.page.pageSize",
                      "type": "by_regex",
                      "predefined": "number"
                    },
                    {
                      "path": "$.links",
                      "type": "by_type",
                      "minOccurrence": 1,
                      "maxOccurrence": 5
                    },
                    {
                      "path": "$.links[0].href",
                      "type": "by_regex",
                      "predefined": "url"
                    },
                    {
                      "path": "$.content",
                      "type": "by_type",
                      "minOccurrence": 1
                    },
                    {
                      "path": "$.content[0].payeeId",
                      "type": "by_regex",
                      "predefined": "uuid"
                    },
                    {
                      "path": "$.content[0].email",
                      "type": "by_regex",
                      "predefined": "email"
                    },
                    {
                      "path": "$.content[0].created",
                      "type": "by_regex",
                      "value": "([\\d]{4})-([\\d]{2})-([\\d]{2})T([\\d]{2}):([\\d]{2}):([\\d]{2})*(.([\\d]{1,3}))Z"
                    },
                    {
                      "path": "$.content[0].payorRefs[0].payorId",
                      "type": "by_regex",
                      "predefined": "uuid"
                    }
                  ]
                }
              }
            ]
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_400"
                }
              }
            },
            "description": "Invalid request. See Error message payload for details of failure"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_401"
                }
              }
            },
            "description": "Invalid access token. May be expired or invalid"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_403"
                }
              }
            },
            "description": "The authentication does not have permissions to access the resource\nThis usually occurs when there is a valid authentication instance (client or user) but they do not have the required permissions\n"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_404"
                }
              }
            },
            "description": "The resource was not found or is no longer available\n"
          }
        },
        "summary": "List Payees",
        "tags": [
          "Payees"
        ],
        "x-contracts": [
          {
            "contractId": 1,
            "name": "Test List Payees All params for v4",
            "headers": {
              "Content-Type": "application/json"
            },
            "request": {
              "queryParameters": [
                {
                  "key": "page",
                  "value": 1
                },
                {
                  "key": "pageSize",
                  "value": 30
                },
                {
                  "key": "watchlistStatus",
                  "value": "PASSED"
                },
                {
                  "key": "onboardedStatus",
                  "value": "CREATED"
                },
                {
                  "key": "email",
                  "value": "testemail@example.com"
                },
                {
                  "key": "displayName",
                  "value": "foo"
                },
                {
                  "key": "remoteId",
                  "value": "123123123asdf"
                },
                {
                  "key": "payeeType",
                  "value": "Individual"
                },
                {
                  "key": "payeeCountry",
                  "value": "US"
                }
              ]
            },
            "serviceName": "payee-service"
          }
        ],
        "x-code-samples": [
          {
            "lang": "shell",
            "source": "$ curl 'https://api.sandbox.velopayments.com/v4/payees?pageSize=2&page=8&payorId=9cade13d-0c55-41a7-9e6d-164e8b138b40&watchlistStatus=PASSED&onboardedStatus=INVITED&email=foo@example.com&displayName=Bar&remoteId=remote&payeeCountry=US&payeeType=Individual' -i -X GET \\\n    -H 'Authorization: Bearer 6dd5e976-e329-462f-bd6b-25d463cf02fd' \\\n    -H 'Content-Type: application/json'\n"
          }
        ]
      },
      "post": {
        "description": "<p>Initiate the process of creating 1 to 2000 payees in a batch</p>\n<p>Use the batchId in the response to query for status.</p>\n<p>In addition to standard semantic validations, a 400 will also result if: </p>\n<ul>\n<li>there is a duplicate remote id within the batch</li>\n<li>there is a duplicate email within the batch, i.e. if there is a conflict between the data provided for one payee within the batch and\nthat provided for another payee within the same batch).</li>\n</ul>\n<p>The validation at this stage is intra-batch only.</p>\n<p>Validation against payees who have already been invited occurs subsequently during processing of the batch.</p>\n",
        "operationId": "v4CreatePayee",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreatePayeesRequestV4"
              }
            },
            "multipart/form-data": {
              "schema": {
                "properties": {
                  "payorId": {
                    "format": "uuid",
                    "type": "string"
                  },
                  "file": {
                    "description": "CSV File of payee data",
                    "items": {
                      "$ref": "#/components/schemas/CreatePayeesCSVRequestV4"
                    },
                    "type": "array"
                  }
                },
                "type": "object"
              }
            }
          },
          "description": "Post payees to create.",
          "x-contracts": [
            {
              "contractId": 1,
              "headers": {
                "Content-Type": "application/json"
              },
              "body": {
                "payorId": "0a818933-087d-47f2-ad83-2f986ed087eb",
                "payees": [
                  {
                    "type": "Individual",
                    "remoteId": "remoteId",
                    "email": "bob@example.com",
                    "address": {
                      "line1": "100 Battery Street",
                      "line2": "line2",
                      "line3": "line3",
                      "line4": "line4",
                      "city": "San Francisco",
                      "countyOrProvince": "California",
                      "zipOrPostcode": "94018",
                      "country": "US"
                    },
                    "paymentChannel": {
                      "paymentChannelName": "My Payment Channel",
                      "accountNumber": "12345678",
                      "routingNumber": "123456789",
                      "countryCode": "US",
                      "currency": "USD",
                      "accountName": "Foo Account"
                    },
                    "individual": {
                      "name": {
                        "title": "Mr",
                        "firstName": "Barney",
                        "otherNames": "Grubb",
                        "lastName": "Cuthbert"
                      },
                      "nationalIdentification": "987654321",
                      "dateOfBirth": "1970-05-20T00:00:00.000Z"
                    },
                    "language": "fr"
                  },
                  {
                    "type": "Company",
                    "remoteId": "remoteId",
                    "email": "bob@example.com",
                    "address": {
                      "line1": "100 Battery Street",
                      "line2": "line2",
                      "line3": "line3",
                      "line4": "line4",
                      "city": "San Francisco",
                      "countyOrProvince": "California",
                      "zipOrPostcode": "94018",
                      "country": "US"
                    },
                    "paymentChannel": {
                      "paymentChannelName": "My Payment Channel",
                      "accountNumber": "12345678",
                      "routingNumber": "123456789",
                      "countryCode": "US",
                      "currency": "USD",
                      "accountName": "Foo Account"
                    },
                    "company": {
                      "name": "ABC Payee Corp",
                      "taxId": "223344556"
                    },
                    "language": "fr"
                  }
                ]
              },
              "matchers": {
                "headers": [
                  {
                    "key": "Content-Type",
                    "regex": "application/json.*"
                  }
                ],
                "body": [
                  {
                    "path": "$.payorId",
                    "type": "by_regex",
                    "predefined": "uuid"
                  },
                  {
                    "path": "$.payees",
                    "type": "by_regex",
                    "predefined": "non_empty"
                  }
                ]
              }
            },
            {
              "contractId": 2,
              "headers": {
                "Content-Type": "multipart/form-data"
              },
              "multipart": {
                "params": {
                  "payorId": "0a818933-087d-47f2-ad83-2f986ed087eb"
                },
                "named": [
                  {
                    "paramName": "file",
                    "fileName": "filename.csv",
                    "fileContent": "type,remoteId,email,addressLine1,addressLine2,addressLine3,addressLine4,addressCity,addressCountyOrProvince,addressZipOrPostcode,addressCountry,individualNationalIdentification,individualDateOfBirth,individualTitle,individualFirstName,individualOtherNames,individualLastName,companyName,companyEIN,paymentChannelAccountNumber,paymentChannelRoutingNumber,paymentChannelIban,paymentChannelAccountName,paymentChannelCountryCode,paymentChannelCurrency,challengeDescription,challengeValue,payeeLanguage\\n Individual,remoteId123,bob@example.com,Address line 1,Address line 2,Address line 3,Address line 4,The City,The County,The Zip,GB,123456789,1970-02-25,Mr,Bob,Hungry,Wiggins,,,12345678,123456789,,Account name,US,USD,Challenge Description,Challenge Value,EN\\n Company,remoteId1234,jim@example.com,Address line 1,Address line 2,Address line 3,Address line 4,The City,The County,The Zip,GB,,,,,,,ABC Corp,987654321,,,1234567890123456789012345678901234,Account name,US,USD,,,FR\\n\n"
                  }
                ]
              }
            }
          ]
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreatePayeesCSVResponseV4"
                }
              }
            },
            "description": "HTTP Created. Body created only on CSV requests",
            "headers": {
              "Location": {
                "schema": {
                  "description": "A url pointing to the location of the batch. This can be used to get the status of the batch",
                  "example": "https://api.sandbox.velopayments.com/v4/payees/batch/dbe7df3a-6b75-4bcb-97c5-45d25f828267",
                  "type": "string"
                }
              }
            },
            "x-contracts": [
              {
                "contractId": 1,
                "headers": {
                  "Location": "https://api.sandbox.velopayments.com/v4/payees/batch/dbe7df3a-6b75-4bcb-97c5-45d25f828267"
                },
                "matchers": {
                  "headers": [
                    {
                      "key": "Location",
                      "type": "by_regex",
                      "predefined": "url"
                    }
                  ]
                }
              },
              {
                "contractId": 2,
                "headers": {
                  "Content-Type": "application/json",
                  "Location": "https://api.sandbox.velopayments.com/v4/payees/batch/dbe7df3a-6b75-4bcb-97c5-45d25f828267"
                },
                "matchers": {
                  "headers": [
                    {
                      "key": "Location",
                      "type": "by_regex",
                      "predefined": "url"
                    },
                    {
                      "key": "Content-Type",
                      "regex": "application/json.*"
                    }
                  ]
                }
              }
            ]
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_400"
                }
              }
            },
            "description": "Invalid request. See Error message payload for details of failure"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_401"
                }
              }
            },
            "description": "Invalid access token. May be expired or invalid"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_403"
                }
              }
            },
            "description": "The authentication does not have permissions to access the resource\nThis usually occurs when there is a valid authentication instance (client or user) but they do not have the required permissions\n"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_404"
                }
              }
            },
            "description": "The resource was not found or is no longer available\n"
          }
        },
        "summary": "Initiate Payee Creation",
        "tags": [
          "Payee Invitation"
        ],
        "x-contracts": [
          {
            "contractId": 1,
            "name": "Create Payees by JSON v4",
            "serviceName": "payee-service"
          },
          {
            "contractId": 2,
            "name": "Create Payees by CSV v4",
            "serviceName": "payee-service"
          }
        ],
        "x-code-samples": [
          {
            "lang": "shell",
            "source": "$ curl 'https://api.sandbox.velopayments.com/v4/payees' -i -X POST \\\n    -H 'Content-Type: application/json' \\\n    -H 'Authorization: Bearer 829d8ec0-00a3-4c95-8234-ad09500bb627' \\\n    -d '{\"payorId\":\"7ddebfed-0624-4bce-848d-40ffe818a2df\",\"payees\":[{\"type\":\"Individual\",\"remoteId\":\"remoteId\",\n    \"email\":\"bob@example.com\",\"address\":{\"line1\":\"100 Battery Street\",\"line2\":\"line2\",\"line3\":\"line3\",\n    \"line4\":\"line4\",\"city\":\"San Francisco\",\"countyOrProvince\":\"California\",\"zipOrPostcode\":\"94018\",\"country\":\"US\"},\n    \"paymentChannel\":{\"paymentChannelName\":\"My Payment Channel\",\"accountNumber\":\"12345678\",\"routingNumber\":\"123456789\",\n    \"countryCode\":\"US\",\"currency\":\"USD\",\"accountName\":\"Foo Account\"},\"individual\":{\"name\":{\"title\":\"Mr\",\n    \"firstName\":\"Barney\",\"otherNames\":\"Grubb\",\"lastName\":\"Cuthbert\"},\"nationalIdentification\":\"987654321\",\n    \"dateOfBirth\":\"1970-05-20\"},\"ofacOverride\":false,\"language\":\"fr\"},{\"type\":\"Company\",\"remoteId\":\"remoteId\",\n    \"email\":\"bob@example.com\",\"address\":{\"line1\":\"100 Battery Street\",\"line2\":\"line2\",\"line3\":\"line3\",\n    \"line4\":\"line4\",\"city\":\"San Francisco\",\"countyOrProvince\":\"California\",\"zipOrPostcode\":\"94018\",\"country\":\"US\"},\n    \"paymentChannel\":{\"paymentChannelName\":\"My Payment Channel\",\"accountNumber\":\"12345678\",\"routingNumber\":\"123456789\",\n    \"countryCode\":\"US\",\"currency\":\"USD\",\"accountName\":\"Foo Account\"},\"company\":{\"name\":\"ABC Payee Corp\",\n    \"taxId\":\"223344556\"},\"ofacOverride\":false,\"language\":\"fr\"}]}'\n"
          }
        ]
      }
    },
    "/v4/payees/batch/{batchId}": {
      "get": {
        "description": "Fetch the status of a specific batch of payees. The batch is fully processed when status is ACCEPTED and pendingCount is 0 ( 200 - OK, 404 - batch not found ).\n",
        "operationId": "queryBatchStatusV4",
        "parameters": [
          {
            "description": "Batch Id",
            "in": "path",
            "name": "batchId",
            "required": true,
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/QueryBatchResponseV4"
                }
              }
            },
            "description": "Get Batch Status"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_400"
                }
              }
            },
            "description": "Invalid request. See Error message payload for details of failure"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_401"
                }
              }
            },
            "description": "Invalid access token. May be expired or invalid"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_403"
                }
              }
            },
            "description": "The authentication does not have permissions to access the resource\nThis usually occurs when there is a valid authentication instance (client or user) but they do not have the required permissions\n"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_404"
                }
              }
            },
            "description": "The resource was not found or is no longer available\n"
          }
        },
        "summary": "Query Batch Status",
        "tags": [
          "Payee Invitation"
        ],
        "x-code-samples": [
          {
            "lang": "shell",
            "source": "$ curl 'https://api.sandbox.velopayments.com/v4/payees/batch/cb6ff8c6-85e9-45a6-b7d9-d05305db67f3' -i -X GET \\\n    -H 'Content-Type: application/json' \\\n    -H 'Authorization: Bearer f01caad1-5ae5-454d-9467-5053e459fe45'\n"
          }
        ]
      }
    },
    "/v4/payees/{payeeId}/invite": {
      "post": {
        "description": "<p>Resend an invite to the Payee The payee must have already been invited by the payor and not yet accepted or declined</p>\n<p>Any previous invites to the payee by this Payor will be invalidated</p>\n",
        "operationId": "resendPayeeInviteV4",
        "parameters": [
          {
            "description": "The UUID of the payee.",
            "in": "path",
            "name": "payeeId",
            "required": true,
            "schema": {
              "example": "2aa5d7e0-2ecb-403f-8494-1865ed0454e9",
              "format": "uuid",
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/InvitePayeeRequestV4"
              }
            }
          },
          "description": "Provide Payor Id in body of request",
          "required": true
        },
        "responses": {
          "200": {
            "description": "the request was accepted"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_400"
                }
              }
            },
            "description": "Invalid request. See Error message payload for details of failure"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_401"
                }
              }
            },
            "description": "Invalid access token. May be expired or invalid"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_403"
                }
              }
            },
            "description": "The authentication does not have permissions to access the resource\nThis usually occurs when there is a valid authentication instance (client or user) but they do not have the required permissions\n"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_404"
                }
              }
            },
            "description": "The resource was not found or is no longer available\n"
          },
          "409": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_409"
                }
              }
            },
            "description": "The request contained data that would result in a duplicate value\n"
          }
        },
        "summary": "Resend Payee Invite",
        "tags": [
          "Payee Invitation"
        ],
        "x-code-samples": [
          {
            "lang": "shell",
            "source": "$ curl 'https://api.sandbox.velopayments.com/v4/payees/5032e339-2e24-4fca-bfc9-f6a66e3157dd/invite' -i -X POST \\\n    -H 'Authorization: Bearer 5e40dde3-ff1c-4d69-94b0-3a6e96fd789e' \\\n    -H 'Content-Type: application/json' \\\n    -d '{\"payorId\":\"545e29bd-75a8-4354-8192-ae68bab59d7b\"}'\n"
          }
        ]
      }
    },
    "/v4/payees/payors/{payorId}/invitationStatus": {
      "get": {
        "description": "Returns a filtered, paginated list of payees associated with a payor, along with invitation status and grace period end date.\n",
        "operationId": "getPayeesInvitationStatusV4",
        "parameters": [
          {
            "description": "The account owner Payor ID",
            "in": "path",
            "name": "payorId",
            "required": true,
            "schema": {
              "example": "9ac75325-5dcd-42d5-b992-175d7e0a035e",
              "format": "uuid",
              "type": "string"
            }
          },
          {
            "description": "The UUID of the payee.",
            "in": "query",
            "name": "payeeId",
            "required": false,
            "schema": {
              "example": "2aa5d7e0-2ecb-403f-8494-1865ed0454e9",
              "format": "uuid",
              "type": "string"
            }
          },
          {
            "description": "The invitation status of the payees.",
            "in": "query",
            "name": "invitationStatus",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/InvitationStatusV4"
            }
          },
          {
            "description": "Page number. Default is 1.",
            "in": "query",
            "name": "page",
            "required": false,
            "schema": {
              "default": 1,
              "example": 1,
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "description": "Page size. Default is 25. Max allowable is 100.",
            "in": "query",
            "name": "pageSize",
            "required": false,
            "schema": {
              "default": 25,
              "example": 25,
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PagedPayeeInvitationStatusResponseV4"
                }
              }
            },
            "description": "Get Payees with Invitaion status - filters of payeeId and invitationStatus",
            "x-contracts": [
              {
                "contractId": 1,
                "headers": {
                  "Content-Type": "application/json"
                },
                "body": {
                  "page": {
                    "numberOfElements": 1,
                    "totalElements": 1,
                    "totalPages": 1,
                    "page": 1,
                    "pageSize": 25
                  },
                  "links": [
                    {
                      "rel": "first",
                      "href": "http://localhost:62142/v4/payees/payors/f20b038b-e841-4d80-9175-b47c6cf19bc1/invitationStatus?payeeId=c3d60e1f-a4d0-4273-b501-bfa81c70d56b&invitationStatus=ACCEPTED&page=1&pageSize=25"
                    }
                  ],
                  "content": [
                    {
                      "payeeId": "c3d60e1f-a4d0-4273-b501-bfa81c70d56b"
                    }
                  ]
                },
                "matchers": {
                  "headers": [
                    {
                      "key": "Content-Type",
                      "regex": "application/json.*"
                    }
                  ],
                  "body": [
                    {
                      "path": "$.page",
                      "type": "by_type",
                      "minOccurrence": 1
                    },
                    {
                      "path": "$.page.numberOfElements",
                      "type": "by_regex",
                      "predefined": "number"
                    },
                    {
                      "path": "$.page.totalElements",
                      "type": "by_regex",
                      "predefined": "number"
                    },
                    {
                      "path": "$.page.totalPages",
                      "type": "by_regex",
                      "predefined": "number"
                    },
                    {
                      "path": "$.page.page",
                      "type": "by_regex",
                      "predefined": "number"
                    },
                    {
                      "path": "$.page.pageSize",
                      "type": "by_regex",
                      "predefined": "number"
                    },
                    {
                      "path": "$.links",
                      "type": "by_type",
                      "minOccurrence": 1,
                      "maxOccurrence": 5
                    },
                    {
                      "path": "$.links[0].href",
                      "type": "by_regex",
                      "predefined": "url"
                    },
                    {
                      "path": "$.content",
                      "type": "by_type",
                      "minOccurrence": 1
                    },
                    {
                      "path": "$.content[0].payeeId",
                      "type": "by_regex",
                      "predefined": "uuid"
                    }
                  ]
                }
              }
            ]
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_400"
                }
              }
            },
            "description": "Invalid request. See Error message payload for details of failure"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_401"
                }
              }
            },
            "description": "Invalid access token. May be expired or invalid"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_403"
                }
              }
            },
            "description": "The authentication does not have permissions to access the resource\nThis usually occurs when there is a valid authentication instance (client or user) but they do not have the required permissions\n"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_404"
                }
              }
            },
            "description": "The resource was not found or is no longer available\n"
          }
        },
        "summary": "Get Payee Invitation Status",
        "tags": [
          "Payee Invitation"
        ],
        "x-code-samples": [
          {
            "lang": "shell",
            "source": "$ curl 'https://api.sandbox.velopayments.com/v4/payees/payors/f20b038b-e841-4d80-9175-b47c6cf19bc1/invitationStatus?payeeId=c3d60e1f-a4d0-4273-b501-bfa81c70d56b&invitationStatus=ACCEPTED' -i -X GET \\\n    -H 'Authorization: Bearer ed73aa9a-b51b-44cb-a8e9-11e2fb85046b'\n"
          }
        ]
      }
    },
    "/v4/payees/deltas": {
      "get": {
        "description": "Get a paginated response listing payee changes (updated since a particular time) to a limited set of fields:\n- dbaName\n- displayName\n- email\n- onboardedStatus\n- payeeCountry\n- payeeId\n- remoteId\n",
        "operationId": "listPayeeChangesV4",
        "parameters": [
          {
            "description": "The Payor ID to find associated Payees",
            "in": "query",
            "name": "payorId",
            "required": true,
            "schema": {
              "format": "uuid",
              "type": "string"
            },
            "x-contracts": [
              {
                "contractId": 1,
                "value": "0a818933-087d-47f2-ad83-2f986ed087eb",
                "matchers": [
                  {
                    "type": "equal_to",
                    "value": "0a818933-087d-47f2-ad83-2f986ed087eb"
                  }
                ]
              }
            ]
          },
          {
            "description": "The updatedSince filter in the format YYYY-MM-DDThh:mm:ss+hh:mm",
            "in": "query",
            "name": "updatedSince",
            "required": true,
            "schema": {
              "format": "date-time",
              "type": "string"
            },
            "x-contracts": [
              {
                "contractId": 1,
                "value": "2019-01-20T09:00:00.000Z",
                "matchers": [
                  {
                    "type": "equal_to",
                    "value": "2019-01-20T09:00:00.000Z"
                  }
                ]
              }
            ]
          },
          {
            "description": "Page number. Default is 1.",
            "in": "query",
            "name": "page",
            "required": false,
            "schema": {
              "default": 1,
              "example": 1,
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "description": "Page size. Default is 100. Max allowable is 1000.",
            "in": "query",
            "name": "pageSize",
            "required": false,
            "schema": {
              "default": 100,
              "example": 100,
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PayeeDeltaResponseV4"
                }
              }
            },
            "description": "Details of Payee Changes",
            "x-contracts": null
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_400"
                }
              }
            },
            "description": "Invalid request. See Error message payload for details of failure"
          }
        },
        "summary": "List Payee Changes",
        "tags": [
          "Payees"
        ],
        "x-contracts": [
          {
            "contractId": 1,
            "name": "Test List Payee Changes V4",
            "ignored": true,
            "request": {
              "queryParameters": [
                {
                  "key": "page",
                  "value": 1
                },
                {
                  "key": "pageSize",
                  "value": 30
                }
              ]
            },
            "serviceName": "payee-service"
          }
        ],
        "x-code-samples": [
          {
            "lang": "shell",
            "source": "$ curl 'https://api.sandbox.velopayments.com/v4/payees/deltas?pageSize=2&page=8&payorId=0a818933-087d-47f2-ad83-2f986ed087eb&updatedSince=2019-01-20T09:00:00+00:00' -i -X GET \\\n    -H 'Authorization: Bearer 6dd5e976-e329-462f-bd6b-25d463cf02fd' \\\n    -H 'Content-Type: application/json'\n"
          }
        ]
      }
    },
    "/v1/sourceAccounts/{sourceAccountId}/notifications": {
      "post": {
        "deprecated": true,
        "description": "<p>Set notifications for a given source account</p>\n<p>deprecated since 2.34 (use v3 version)</p>\n",
        "operationId": "setNotificationsRequest",
        "parameters": [
          {
            "description": "Source account id",
            "in": "path",
            "name": "sourceAccountId",
            "required": true,
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SetNotificationsRequest"
              }
            }
          },
          "description": "Body to included minimum balance to set",
          "required": true
        },
        "responses": {
          "204": {
            "description": "Request Fulfilled"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_400"
                }
              }
            },
            "description": "Invalid request. See Error message payload for details of failure"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_401"
                }
              }
            },
            "description": "Invalid access token. May be expired or invalid"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_403"
                }
              }
            },
            "description": "The authentication does not have permissions to access the resource\nThis usually occurs when there is a valid authentication instance (client or user) but they do not have the required permissions\n"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_404"
                }
              }
            },
            "description": "The resource was not found or is no longer available\n"
          }
        },
        "summary": "Set notifications",
        "tags": [
          "Source Accounts"
        ],
        "x-code-samples": [
          {
            "lang": "shell",
            "source": "$ curl 'https://api.sandbox.velopayments.com/v1/sourceAccounts/533b082b-b3eb-4712-8242-0fd3a307033f/notifications' -i -X POST \\\n    -H 'Authorization: Bearer 67c1b4fc-29ce-425c-863b-950163a5e971' \\\n    -H 'Content-Type: application/json' \\\n    -d '{\"minimumBalance\":900}'\n"
          }
        ]
      }
    },
    "/v2/sourceAccounts/{sourceAccountId}/fundingRequest": {
      "post": {
        "deprecated": true,
        "description": "Instruct a funding request to transfer funds from the payor’s funding bank to the payor’s balance held within Velo  (202 - accepted, 400 - invalid request body, 404 - source account not found).",
        "operationId": "createFundingRequestV2",
        "parameters": [
          {
            "description": "Source account id",
            "in": "path",
            "name": "sourceAccountId",
            "required": true,
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FundingRequestV2"
              }
            }
          },
          "description": "Body to included amount to be funded",
          "required": true
        },
        "responses": {
          "202": {
            "description": "Request Accepted"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_400"
                }
              }
            },
            "description": "Invalid request. See Error message payload for details of failure"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_401"
                }
              }
            },
            "description": "Invalid access token. May be expired or invalid"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_403"
                }
              }
            },
            "description": "The authentication does not have permissions to access the resource\nThis usually occurs when there is a valid authentication instance (client or user) but they do not have the required permissions\n"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_404"
                }
              }
            },
            "description": "The resource was not found or is no longer available\n"
          }
        },
        "summary": "Create Funding Request",
        "tags": [
          "Funding"
        ],
        "x-code-samples": [
          {
            "lang": "shell",
            "source": "$ curl 'https://api.sandbox.velopayments.com/v2/sourceAccounts/533b082b-b3eb-4712-8242-0fd3a307033f/fundingRequest' -i -X POST \\\n    -H 'Authorization: Bearer 67c1b4fc-29ce-425c-863b-950163a5e971' \\\n    -H 'Content-Type: application/json' \\\n    -d '{\"amount\":999990}'\n"
          }
        ]
      }
    },
    "/v2/sourceAccounts": {
      "description": "List Source Accounts",
      "get": {
        "deprecated": true,
        "description": "List source accounts.",
        "operationId": "getSourceAccountsV2",
        "parameters": [
          {
            "description": "Physical Account Name",
            "in": "query",
            "name": "physicalAccountName",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The physical account ID",
            "in": "query",
            "name": "physicalAccountId",
            "required": false,
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          },
          {
            "description": "The account owner Payor ID",
            "in": "query",
            "name": "payorId",
            "required": false,
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          },
          {
            "description": "The funding account ID",
            "in": "query",
            "name": "fundingAccountId",
            "required": false,
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          },
          {
            "description": "Page number. Default is 1.",
            "in": "query",
            "name": "page",
            "required": false,
            "schema": {
              "default": 1,
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "description": "The number of results to return in a page",
            "in": "query",
            "name": "pageSize",
            "required": false,
            "schema": {
              "default": 25,
              "format": "int32",
              "maximum": 100,
              "minimum": 1,
              "type": "integer"
            }
          },
          {
            "description": "List of sort fields e.g. ?sort=name:asc\nDefault is name:asc\nThe supported sort fields are - fundingRef, name, balance\n",
            "in": "query",
            "name": "sort",
            "required": false,
            "schema": {
              "default": "fundingRef:asc",
              "pattern": "[fundingRef|name|balance]+[:desc|:asc]",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListSourceAccountResponseV2"
                }
              }
            },
            "description": "List Source Account response"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_400"
                }
              }
            },
            "description": "Invalid request. See Error message payload for details of failure"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_401"
                }
              }
            },
            "description": "Invalid access token. May be expired or invalid"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_403"
                }
              }
            },
            "description": "The authentication does not have permissions to access the resource\nThis usually occurs when there is a valid authentication instance (client or user) but they do not have the required permissions\n"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_404"
                }
              }
            },
            "description": "The resource was not found or is no longer available\n"
          }
        },
        "summary": "Get list of source accounts",
        "tags": [
          "Source Accounts"
        ],
        "x-code-samples": [
          {
            "lang": "shell",
            "source": "$ curl 'https://api.sandbox.velopayments.com/v2/sourceAccounts?payorId=a2967711-df07-41e5-b5ea-f563088911c6' -i -X GET \\\n    -H 'Authorization: Bearer 757a7dbf-2afb-45ec-877c-2aa3857c8e08'\n"
          }
        ]
      },
      "summary": "List Source Accounts"
    },
    "/v2/sourceAccounts/{sourceAccountId}": {
      "get": {
        "deprecated": true,
        "description": "Get details about given source account.",
        "operationId": "getSourceAccountV2",
        "parameters": [
          {
            "description": "Source account id",
            "in": "path",
            "name": "sourceAccountId",
            "required": true,
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SourceAccountResponseV2"
                }
              }
            },
            "description": "Source account response"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_400"
                }
              }
            },
            "description": "Invalid request. See Error message payload for details of failure"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_401"
                }
              }
            },
            "description": "Invalid access token. May be expired or invalid"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_403"
                }
              }
            },
            "description": "The authentication does not have permissions to access the resource\nThis usually occurs when there is a valid authentication instance (client or user) but they do not have the required permissions\n"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_404"
                }
              }
            },
            "description": "The resource was not found or is no longer available\n"
          }
        },
        "summary": "Get Source Account",
        "tags": [
          "Source Accounts"
        ],
        "x-code-samples": [
          {
            "lang": "shell",
            "source": "$ curl 'https://api.sandbox.velopayments.com/v2/sourceAccounts/126895a8-ba3d-44e8-9b34-84ee579cee7a' -i -X GET \\\n    -H 'Authorization: Bearer a016f840-dafc-4b10-95f5-70ecc75a02d1'\n"
          }
        ]
      }
    },
    "/v2/sourceAccounts/{sourceAccountId}/transfers": {
      "post": {
        "deprecated": true,
        "description": "Transfer funds between source accounts for a Payor. The 'from' source account is identified in the URL, and is the account which will be debited. The 'to' (destination) source account is in the body, and is the account which will be credited. Both source accounts must belong to the same Payor. There must be sufficient balance in the 'from' source account, otherwise the transfer attempt will fail.",
        "operationId": "transferFundsV2",
        "parameters": [
          {
            "description": "The 'from' source account id, which will be debited",
            "in": "path",
            "name": "sourceAccountId",
            "required": true,
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TransferRequestV2"
              }
            }
          },
          "description": "Body",
          "required": true
        },
        "responses": {
          "204": {
            "description": "Request Processed"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_400"
                }
              }
            },
            "description": "Invalid request. See Error message payload for details of failure"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_401"
                }
              }
            },
            "description": "Invalid access token. May be expired or invalid"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_403"
                }
              }
            },
            "description": "The authentication does not have permissions to access the resource\nThis usually occurs when there is a valid authentication instance (client or user) but they do not have the required permissions\n"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_404"
                }
              }
            },
            "description": "The resource was not found or is no longer available\n"
          }
        },
        "summary": "Transfer Funds between source accounts",
        "tags": [
          "Source Accounts"
        ],
        "x-code-samples": [
          {
            "lang": "shell",
            "source": "$ curl 'https://api.sandbox.velopayments.com/v2/sourceAccounts/533b082b-b3eb-4712-8242-0fd3a307033f/transfers' -i -X POST \\\n    -H 'Authorization: Bearer 67c1b4fc-29ce-425c-863b-950163a5e971' \\\n    -H 'Content-Type: application/json' \\\n    -d '{ \"toSourceAccountId\": \"a99f93f9-6845-451d-a1f5-f3c841599dd7\", \"amount\": 10000, \"currency\": \"USD\" }'\n"
          }
        ]
      }
    },
    "/v3/sourceAccounts/{sourceAccountId}/fundingRequest": {
      "post": {
        "description": "<p>Instruct a funding request to transfer funds from the payor’s funding bank to the payor’s balance held within Velo</p>\n",
        "operationId": "createFundingRequestV3",
        "parameters": [
          {
            "description": "Source account id",
            "in": "path",
            "name": "sourceAccountId",
            "required": true,
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FundingRequestV3"
              }
            }
          },
          "description": "Body to included amount to be funded",
          "required": true
        },
        "responses": {
          "202": {
            "description": "Request Accepted",
            "headers": {
              "Location": {
                "description": "Reference to created Funding Request",
                "schema": {
                  "example": "https://api.sandbox.velopayments.com/v1/fundings/8c1a8e1c-0147-4d8c-9f92-b696e1515750",
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_400"
                }
              }
            },
            "description": "Invalid request. See Error message payload for details of failure"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_401"
                }
              }
            },
            "description": "Invalid access token. May be expired or invalid"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_403"
                }
              }
            },
            "description": "The authentication does not have permissions to access the resource\nThis usually occurs when there is a valid authentication instance (client or user) but they do not have the required permissions\n"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_404"
                }
              }
            },
            "description": "The resource was not found or is no longer available\n"
          }
        },
        "summary": "Create Funding Request",
        "tags": [
          "Funding"
        ],
        "x-code-samples": [
          {
            "lang": "shell",
            "source": "$ curl 'https://api.sandbox.velopayments.com/v3/sourceAccounts/533b082b-b3eb-4712-8242-0fd3a307033f/fundingRequest' -i -X POST \\\n    -H 'Authorization: Bearer 67c1b4fc-29ce-425c-863b-950163a5e971' \\\n    -H 'Content-Type: application/json' \\\n    -d '{\"amount\":999990}'\n"
          }
        ]
      }
    },
    "/v3/sourceAccounts": {
      "description": "List Source Accounts",
      "get": {
        "description": "List source accounts.",
        "operationId": "getSourceAccountsV3",
        "parameters": [
          {
            "description": "Physical Account Name",
            "in": "query",
            "name": "physicalAccountName",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The physical account ID",
            "in": "query",
            "name": "physicalAccountId",
            "required": false,
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          },
          {
            "description": "The account owner Payor ID",
            "in": "query",
            "name": "payorId",
            "required": false,
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          },
          {
            "description": "The funding account ID",
            "in": "query",
            "name": "fundingAccountId",
            "required": false,
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          },
          {
            "description": "A filter for retrieving both active accounts and user deleted ones",
            "in": "query",
            "name": "includeUserDeleted",
            "required": false,
            "schema": {
              "format": "boolean",
              "type": "string"
            }
          },
          {
            "description": "The type of source account.",
            "in": "query",
            "name": "type",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/SourceAccountTypeV3"
            }
          },
          {
            "description": "Page number. Default is 1.",
            "in": "query",
            "name": "page",
            "required": false,
            "schema": {
              "default": 1,
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "description": "The number of results to return in a page",
            "in": "query",
            "name": "pageSize",
            "required": false,
            "schema": {
              "default": 25,
              "format": "int32",
              "maximum": 100,
              "minimum": 1,
              "type": "integer"
            }
          },
          {
            "description": "List of sort fields e.g. ?sort=name:asc\nDefault is name:asc\nThe supported sort fields are - fundingRef, name, balance\n",
            "in": "query",
            "name": "sort",
            "required": false,
            "schema": {
              "default": "fundingRef:asc",
              "pattern": "[fundingRef|name|balance]+[:desc|:asc]",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListSourceAccountResponseV3"
                }
              }
            },
            "description": "List Source Account response"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_400"
                }
              }
            },
            "description": "Invalid request. See Error message payload for details of failure"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_401"
                }
              }
            },
            "description": "Invalid access token. May be expired or invalid"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_403"
                }
              }
            },
            "description": "The authentication does not have permissions to access the resource\nThis usually occurs when there is a valid authentication instance (client or user) but they do not have the required permissions\n"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_404"
                }
              }
            },
            "description": "The resource was not found or is no longer available\n"
          }
        },
        "summary": "Get list of source accounts",
        "tags": [
          "Source Accounts"
        ],
        "x-code-samples": [
          {
            "lang": "shell",
            "source": "$ curl 'https://api.sandbox.velopayments.com/v3/sourceAccounts?payorId=a2967711-df07-41e5-b5ea-f563088911c6' -i -X GET \\\n    -H 'Authorization: Bearer 757a7dbf-2afb-45ec-877c-2aa3857c8e08'\n"
          }
        ]
      },
      "summary": "List Source Accounts"
    },
    "/v3/sourceAccounts/{sourceAccountId}": {
      "delete": {
        "description": "Mark a source account as deleted by ID",
        "operationId": "deleteSourceAccountV3",
        "parameters": [
          {
            "description": "Source account id",
            "in": "path",
            "name": "sourceAccountId",
            "required": true,
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content - Source account is deleted"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_400"
                }
              }
            },
            "description": "Invalid request. See Error message payload for details of failure"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_401"
                }
              }
            },
            "description": "Invalid access token. May be expired or invalid"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_403"
                }
              }
            },
            "description": "The authentication does not have permissions to access the resource\nThis usually occurs when there is a valid authentication instance (client or user) but they do not have the required permissions\n"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_404"
                }
              }
            },
            "description": "The resource was not found or is no longer available\n"
          },
          "409": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_409"
                }
              }
            },
            "description": "The request contained data that would result in a duplicate value\n"
          }
        },
        "summary": "Delete a source account by ID",
        "tags": [
          "Funding Manager Private"
        ],
        "x-code-samples": [
          {
            "lang": "shell",
            "source": "$ curl 'https://api.sandbox.velopayments.com/v3/sourceAccounts/126895a8-ba3d-44e8-9b34-84ee579cee7a' -i -X DELETE \\\n    -H 'Authorization: Bearer a016f840-dafc-4b10-95f5-70ecc75a02d1'\n"
          }
        ]
      },
      "get": {
        "description": "Get details about given source account.",
        "operationId": "getSourceAccountV3",
        "parameters": [
          {
            "description": "Source account id",
            "in": "path",
            "name": "sourceAccountId",
            "required": true,
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SourceAccountResponseV3"
                }
              }
            },
            "description": "Source account response"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_400"
                }
              }
            },
            "description": "Invalid request. See Error message payload for details of failure"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_401"
                }
              }
            },
            "description": "Invalid access token. May be expired or invalid"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_403"
                }
              }
            },
            "description": "The authentication does not have permissions to access the resource\nThis usually occurs when there is a valid authentication instance (client or user) but they do not have the required permissions\n"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_404"
                }
              }
            },
            "description": "The resource was not found or is no longer available\n"
          }
        },
        "summary": "Get details about given source account.",
        "tags": [
          "Source Accounts"
        ],
        "x-code-samples": [
          {
            "lang": "shell",
            "source": "$ curl 'https://api.sandbox.velopayments.com/v3/sourceAccounts/126895a8-ba3d-44e8-9b34-84ee579cee7a' -i -X GET \\\n    -H 'Authorization: Bearer a016f840-dafc-4b10-95f5-70ecc75a02d1'\n"
          }
        ]
      }
    },
    "/v3/sourceAccounts/{sourceAccountId}/transfers": {
      "post": {
        "description": "Transfer funds between source accounts for a Payor. The 'from' source account is identified in the URL, and is the account which will be debited. The 'to' (destination) source account is in the body, and is the account which will be credited. Both source accounts must belong to the same Payor. There must be sufficient balance in the 'from' source account, otherwise the transfer attempt will fail.",
        "operationId": "transferFundsV3",
        "parameters": [
          {
            "description": "The 'from' source account id, which will be debited",
            "in": "path",
            "name": "sourceAccountId",
            "required": true,
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TransferRequestV3"
              }
            }
          },
          "description": "Body",
          "required": true
        },
        "responses": {
          "204": {
            "description": "Request Processed"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_400"
                }
              }
            },
            "description": "Invalid request. See Error message payload for details of failure"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_401"
                }
              }
            },
            "description": "Invalid access token. May be expired or invalid"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_403"
                }
              }
            },
            "description": "The authentication does not have permissions to access the resource\nThis usually occurs when there is a valid authentication instance (client or user) but they do not have the required permissions\n"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_404"
                }
              }
            },
            "description": "The resource was not found or is no longer available\n"
          }
        },
        "summary": "Transfer Funds between source accounts",
        "tags": [
          "Source Accounts"
        ],
        "x-code-samples": [
          {
            "lang": "shell",
            "source": "$ curl 'https://api.sandbox.velopayments.com/v3/sourceAccounts/533b082b-b3eb-4712-8242-0fd3a307033f/transfers' -i -X POST \\\n    -H 'Authorization: Bearer 67c1b4fc-29ce-425c-863b-950163a5e971' \\\n    -H 'Content-Type: application/json' \\\n    -d '{ \"toSourceAccountId\": \"a99f93f9-6845-451d-a1f5-f3c841599dd7\", \"amount\": 10000, \"currency\": \"USD\" }'\n"
          }
        ]
      }
    },
    "/v3/sourceAccounts/{sourceAccountId}/notifications": {
      "post": {
        "description": "<p>Set notifications for a given source account</p>\n<p>If the balance falls below the amount set in the request an email notification will be sent to the email address registered in the payor profile</p>\n",
        "operationId": "setNotificationsRequestV3",
        "parameters": [
          {
            "description": "Source account id",
            "in": "path",
            "name": "sourceAccountId",
            "required": true,
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SetNotificationsRequest_2"
              }
            }
          },
          "description": "Body to included minimum balance to set",
          "required": true
        },
        "responses": {
          "204": {
            "description": "Request Fulfilled"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_400"
                }
              }
            },
            "description": "Invalid request. See Error message payload for details of failure"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_401"
                }
              }
            },
            "description": "Invalid access token. May be expired or invalid"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_403"
                }
              }
            },
            "description": "The authentication does not have permissions to access the resource\nThis usually occurs when there is a valid authentication instance (client or user) but they do not have the required permissions\n"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_404"
                }
              }
            },
            "description": "The resource was not found or is no longer available\n"
          }
        },
        "summary": "Set notifications",
        "tags": [
          "Source Accounts"
        ],
        "x-code-samples": [
          {
            "lang": "shell",
            "source": "$ curl 'https://api.sandbox.velopayments.com/v3/sourceAccounts/533b082b-b3eb-4712-8242-0fd3a307033f/notifications' -i -X POST \\\n    -H 'Authorization: Bearer 67c1b4fc-29ce-425c-863b-950163a5e971' \\\n    -H 'Content-Type: application/json' \\\n    -d '{\"minimumBalance\":900}'\n"
          }
        ]
      }
    },
    "/v2/fundingAccounts": {
      "get": {
        "description": "Get the funding accounts.",
        "operationId": "getFundingAccountsV2",
        "parameters": [
          {
            "in": "query",
            "name": "payorId",
            "required": false,
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          },
          {
            "description": "The descriptive funding account name",
            "in": "query",
            "name": "name",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The 2 letter ISO 3166-1 country code (upper case)",
            "in": "query",
            "name": "country",
            "required": false,
            "schema": {
              "example": "US",
              "type": "string"
            }
          },
          {
            "description": "The ISO 4217 currency code",
            "in": "query",
            "name": "currency",
            "required": false,
            "schema": {
              "example": "USD",
              "type": "string"
            }
          },
          {
            "description": "The type of funding account.",
            "in": "query",
            "name": "type",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/FundingAccountTypeV2"
            }
          },
          {
            "description": "Page number. Default is 1.",
            "in": "query",
            "name": "page",
            "required": false,
            "schema": {
              "default": 1,
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "description": "The number of results to return in a page",
            "in": "query",
            "name": "pageSize",
            "required": false,
            "schema": {
              "default": 25,
              "format": "int32",
              "maximum": 100,
              "minimum": 1,
              "type": "integer"
            }
          },
          {
            "description": "List of sort fields (e.g. ?sort=accountName:asc,name:asc) Default is accountName:asc The supported sort fields are - accountName, name.",
            "in": "query",
            "name": "sort",
            "required": false,
            "schema": {
              "default": "accountName:asc",
              "pattern": "[a-zA-Z]+[:desc|:asc]",
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "sensitive",
            "required": false,
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListFundingAccountsResponseV2"
                }
              }
            },
            "description": "Get Funding Accounts Response"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_400"
                }
              }
            },
            "description": "Invalid request. See Error message payload for details of failure"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_403"
                }
              }
            },
            "description": "The authentication does not have permissions to access the resource\nThis usually occurs when there is a valid authentication instance (client or user) but they do not have the required permissions\n"
          }
        },
        "summary": "Get Funding Accounts",
        "tags": [
          "Funding"
        ]
      },
      "post": {
        "description": "Create Funding Account",
        "operationId": "createFundingAccountV2",
        "requestBody": {
          "content": {
            "application/json": {
              "examples": {
                "fbo": {
                  "summary": "FBO Example",
                  "value": {
                    "type": "FBO",
                    "name": "My FBO Account",
                    "payorId": "ee53e01d-c078-43fd-abd4-47e92f4a06cf",
                    "accountName": "My Account Name",
                    "accountNumber": 1231231234556,
                    "routingNumber": 123456789
                  }
                },
                "private": {
                  "summary": "PRIVATE Example",
                  "value": {
                    "type": "PRIVATE",
                    "name": "My PRIVATE Account",
                    "payorId": "ee53e01d-c078-43fd-abd4-47e92f4a06cf",
                    "accountName": "My Account Name",
                    "accountNumber": 1231231234556,
                    "routingNumber": 123456789,
                    "currency": "AUD"
                  }
                }
              },
              "schema": {
                "$ref": "#/components/schemas/CreateFundingAccountRequestV2"
              }
            }
          }
        },
        "responses": {
          "202": {
            "description": "Funding Account Creation Request Accepted",
            "headers": {
              "Location": {
                "description": "Reference to status object",
                "schema": {
                  "format": "uri",
                  "type": "string"
                }
              },
              "Retry-After": {
                "description": "How long the user agent should wait before making a follow-up request (seconds)",
                "schema": {
                  "type": "integer"
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_400"
                }
              }
            },
            "description": "Invalid request. See Error message payload for details of failure"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_401"
                }
              }
            },
            "description": "Invalid access token. May be expired or invalid"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_403"
                }
              }
            },
            "description": "The authentication does not have permissions to access the resource\nThis usually occurs when there is a valid authentication instance (client or user) but they do not have the required permissions\n"
          }
        },
        "summary": "Create Funding Account",
        "tags": [
          "Funding Manager Private"
        ]
      }
    },
    "/v2/fundingAccounts/{fundingAccountId}": {
      "get": {
        "description": "Get Funding Account by ID",
        "operationId": "getFundingAccountV2",
        "parameters": [
          {
            "in": "path",
            "name": "fundingAccountId",
            "required": true,
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "sensitive",
            "required": false,
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FundingAccountResponseV2"
                }
              }
            },
            "description": "Funding Account Response"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_401"
                }
              }
            },
            "description": "Invalid access token. May be expired or invalid"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_403"
                }
              }
            },
            "description": "The authentication does not have permissions to access the resource\nThis usually occurs when there is a valid authentication instance (client or user) but they do not have the required permissions\n"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_404"
                }
              }
            },
            "description": "The resource was not found or is no longer available\n"
          }
        },
        "summary": "Get Funding Account",
        "tags": [
          "Funding"
        ]
      }
    },
    "/v1/deltas/fundings": {
      "get": {
        "description": "Get funding audit deltas for a payor",
        "operationId": "listFundingAuditDeltas",
        "parameters": [
          {
            "in": "query",
            "name": "payorId",
            "required": true,
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "updatedSince",
            "required": true,
            "schema": {
              "format": "date-time",
              "type": "string"
            }
          },
          {
            "description": "Page number. Default is 1.",
            "in": "query",
            "name": "page",
            "required": false,
            "schema": {
              "default": 1,
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "description": "The number of results to return in a page",
            "in": "query",
            "name": "pageSize",
            "required": false,
            "schema": {
              "default": 25,
              "format": "int32",
              "maximum": 100,
              "minimum": 1,
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PageResourceFundingPayorStatusAuditResponseFundingPayorStatusAuditResponse"
                }
              }
            },
            "description": "Funding Account Deltas"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_400"
                }
              }
            },
            "description": "Invalid request. See Error message payload for details of failure"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_401"
                }
              }
            },
            "description": "Invalid access token. May be expired or invalid"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_403"
                }
              }
            },
            "description": "The authentication does not have permissions to access the resource\nThis usually occurs when there is a valid authentication instance (client or user) but they do not have the required permissions\n"
          }
        },
        "summary": "Get Funding Audit Delta",
        "tags": [
          "Funding"
        ]
      }
    },
    "/v1/fundings/{fundingId}": {
      "get": {
        "description": "Get Funding by Id",
        "operationId": "getFundingByIdV1",
        "parameters": [
          {
            "in": "path",
            "name": "fundingId",
            "required": true,
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FundingResponse"
                }
              }
            },
            "description": "Funding response"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_400"
                }
              }
            },
            "description": "Invalid request. See Error message payload for details of failure"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_401"
                }
              }
            },
            "description": "Invalid access token. May be expired or invalid"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_403"
                }
              }
            },
            "description": "The authentication does not have permissions to access the resource\nThis usually occurs when there is a valid authentication instance (client or user) but they do not have the required permissions\n"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_404"
                }
              }
            },
            "description": "The resource was not found or is no longer available\n"
          }
        },
        "summary": "Get Funding",
        "tags": [
          "Funding"
        ]
      }
    },
    "/v1/transactions": {
      "post": {
        "description": "Create a new Transaction that can be funded",
        "operationId": "createTransactionV1",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateTransactionRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateTransactionResponse"
                }
              }
            },
            "description": "Transaction Created",
            "headers": {
              "Location": {
                "description": "Reference to created Transaction which can be queried for Balance etc",
                "schema": {
                  "example": "https://api.sandbox.velopayments.com/transactions/id/4d88e559-d057-45b1-8d8b-b9ccc06f4503",
                  "format": "uri",
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_400"
                }
              }
            },
            "description": "Invalid request. See Error message payload for details of failure"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_401"
                }
              }
            },
            "description": "Invalid access token. May be expired or invalid"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_403"
                }
              }
            },
            "description": "The authentication does not have permissions to access the resource\nThis usually occurs when there is a valid authentication instance (client or user) but they do not have the required permissions\n"
          }
        },
        "summary": "Create a Transaction",
        "tags": [
          "Transactions"
        ]
      }
    },
    "/v1/transactions/{transactionId}": {
      "get": {
        "description": "Get Transaction by Id",
        "operationId": "getTransactionByIdV1",
        "parameters": [
          {
            "in": "path",
            "name": "transactionId",
            "required": true,
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TransactionResponse"
                }
              }
            },
            "description": "Transaction response"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_400"
                }
              }
            },
            "description": "Invalid request. See Error message payload for details of failure"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_401"
                }
              }
            },
            "description": "Invalid access token. May be expired or invalid"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_403"
                }
              }
            },
            "description": "The authentication does not have permissions to access the resource\nThis usually occurs when there is a valid authentication instance (client or user) but they do not have the required permissions\n"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_404"
                }
              }
            },
            "description": "The resource was not found or is no longer available\n"
          }
        },
        "summary": "Get Transaction",
        "tags": [
          "Transactions"
        ]
      }
    },
    "/v1/paymentaudit/fundings": {
      "get": {
        "deprecated": true,
        "description": "Deprecated (use /v4/paymentaudit/fundings)",
        "operationId": "getFundingsV1",
        "parameters": [
          {
            "description": "The account owner Payor ID",
            "in": "query",
            "name": "payorId",
            "required": true,
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          },
          {
            "description": "Page number. Default is 1.",
            "in": "query",
            "name": "page",
            "required": false,
            "schema": {
              "default": 1,
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "description": "The number of results to return in a page",
            "in": "query",
            "name": "pageSize",
            "required": false,
            "schema": {
              "default": 25,
              "format": "int32",
              "maximum": 100,
              "minimum": 1,
              "type": "integer"
            }
          },
          {
            "description": "List of sort fields. Example: ```?sort=destinationCurrency:asc,destinationAmount:asc```\nDefault is no sort. The supported sort fields are: dateTime and amount.\n",
            "in": "query",
            "name": "sort",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetFundingsResponse"
                }
              }
            },
            "description": "Get Fundings normal response"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_400"
                }
              }
            },
            "description": "Invalid request. See Error message payload for details of failure"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_401"
                }
              }
            },
            "description": "Invalid access token. May be expired or invalid"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_403"
                }
              }
            },
            "description": "The authentication does not have permissions to access the resource\nThis usually occurs when there is a valid authentication instance (client or user) but they do not have the required permissions\n"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_404"
                }
              }
            },
            "description": "The resource was not found or is no longer available\n"
          }
        },
        "summary": "V1 Get Fundings for Payor",
        "tags": [
          "Payment Audit Service (Deprecated)"
        ],
        "x-code-samples": [
          {
            "lang": "shell",
            "source": "$ curl 'https://api.sandbox.velopayments.com/v1/paymentaudit/fundings?payorId=2a5d8af2-a1ed-4d7f-b9a7-ebe4b333be5a' -i -X GET \\\n    -H 'Authorization: Bearer 3667f994-7d41-4d20-990d-b79fa720e56b'\n"
          }
        ]
      }
    },
    "/v1/paymentaudit/payoutStatistics": {
      "get": {
        "deprecated": true,
        "description": "Deprecated (Use /v4/paymentaudit/payoutStatistics)",
        "operationId": "getPayoutStatsV1",
        "parameters": [
          {
            "description": "The account owner Payor ID. Required for external users.",
            "in": "query",
            "name": "payorId",
            "required": false,
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetPayoutStatistics"
                }
              }
            },
            "description": "Payout Statistics response"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_400"
                }
              }
            },
            "description": "Invalid request. See Error message payload for details of failure"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_401"
                }
              }
            },
            "description": "Invalid access token. May be expired or invalid"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_403"
                }
              }
            },
            "description": "The authentication does not have permissions to access the resource\nThis usually occurs when there is a valid authentication instance (client or user) but they do not have the required permissions\n"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_404"
                }
              }
            },
            "description": "The resource was not found or is no longer available\n"
          }
        },
        "summary": "V1 Get Payout Statistics",
        "tags": [
          "Payment Audit Service (Deprecated)"
        ],
        "x-code-samples": [
          {
            "lang": "shell",
            "source": "$ curl 'https://api.sandbox.velopayments.com/v1/paymentaudit/payoutStatistics?payorId=c61b32ac-8e50-433e-9372-b5b1c8180742' -i -X GET \\\n    -H 'Authorization: Bearer e71d3dfe-3587-4df6-9f8d-59d3135d7bf7'\n"
          }
        ]
      }
    },
    "/v1/deltas/payments": {
      "get": {
        "deprecated": true,
        "description": "Deprecated (use /v4/payments/deltas instead)",
        "operationId": "listPaymentChanges",
        "parameters": [
          {
            "description": "The Payor ID to find associated Payments",
            "in": "query",
            "name": "payorId",
            "required": true,
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          },
          {
            "description": "The updatedSince filter in the format YYYY-MM-DDThh:mm:ss+hh:mm",
            "in": "query",
            "name": "updatedSince",
            "required": true,
            "schema": {
              "format": "date-time",
              "type": "string"
            }
          },
          {
            "description": "Page number. Default is 1.",
            "in": "query",
            "name": "page",
            "required": false,
            "schema": {
              "default": 1,
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "description": "The number of results to return in a page",
            "in": "query",
            "name": "pageSize",
            "required": false,
            "schema": {
              "default": 100,
              "format": "int32",
              "maximum": 1000,
              "minimum": 1,
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaymentDeltaResponseV1"
                }
              }
            },
            "description": "Details of Payment Changes"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_400"
                }
              }
            },
            "description": "Invalid request. See Error message payload for details of failure"
          }
        },
        "summary": "V1 List Payment Changes",
        "tags": [
          "Payment Audit Service (Deprecated)"
        ],
        "x-code-samples": [
          {
            "lang": "shell",
            "source": "$ curl 'https://api.sandbox.velopayments.com/v1/deltas/payments?pageSize=2&page=8&payorId=0a818933-087d-47f2-ad83-2f986ed087eb&updatedSince=2019-01-20T09:00:00+00:00' -i -X GET \\\n    -H 'Authorization: Bearer 6dd5e976-e329-462f-bd6b-25d463cf02fd' \\\n    -H 'Content-Type: application/json'\n"
          }
        ]
      }
    },
    "/v3/paymentaudit/payouts": {
      "get": {
        "deprecated": true,
        "description": "Deprecated (use /v4/paymentaudit/payouts instead)",
        "operationId": "getPayoutsForPayorV3",
        "parameters": [
          {
            "description": "The account owner Payor ID",
            "in": "query",
            "name": "payorId",
            "required": true,
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          },
          {
            "description": "Payout Memo filter - case insensitive sub-string match",
            "in": "query",
            "name": "payoutMemo",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Payout Status",
            "in": "query",
            "name": "status",
            "required": false,
            "schema": {
              "enum": [
                "ACCEPTED",
                "REJECTED",
                "SUBMITTED",
                "QUOTED",
                "INSTRUCTED",
                "COMPLETED",
                "INCOMPLETE",
                "CONFIRMED",
                "WITHDRAWN"
              ],
              "type": "string"
            }
          },
          {
            "description": "The submitted date from range filter. Format is yyyy-MM-dd.",
            "in": "query",
            "name": "submittedDateFrom",
            "required": false,
            "schema": {
              "format": "date",
              "type": "string"
            }
          },
          {
            "description": "The submitted date to range filter. Format is yyyy-MM-dd.",
            "in": "query",
            "name": "submittedDateTo",
            "required": false,
            "schema": {
              "format": "date",
              "type": "string"
            }
          },
          {
            "description": "Page number. Default is 1.",
            "in": "query",
            "name": "page",
            "required": false,
            "schema": {
              "default": 1,
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "description": "The number of results to return in a page",
            "in": "query",
            "name": "pageSize",
            "required": false,
            "schema": {
              "default": 25,
              "format": "int32",
              "maximum": 100,
              "minimum": 1,
              "type": "integer"
            }
          },
          {
            "description": "List of sort fields (e.g. ?sort=submittedDateTime:asc,instructedDateTime:asc,status:asc)\nDefault is submittedDateTime:asc\nThe supported sort fields are: submittedDateTime, instructedDateTime, status.\n",
            "in": "query",
            "name": "sort",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetPayoutsResponseV3"
                }
              }
            },
            "description": "Payor data found"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_400"
                }
              }
            },
            "description": "Invalid request. See Error message payload for details of failure"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_401"
                }
              }
            },
            "description": "Invalid access token. May be expired or invalid"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_403"
                }
              }
            },
            "description": "The authentication does not have permissions to access the resource\nThis usually occurs when there is a valid authentication instance (client or user) but they do not have the required permissions\n"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_404"
                }
              }
            },
            "description": "The resource was not found or is no longer available\n"
          }
        },
        "summary": "V3 Get Payouts for Payor",
        "tags": [
          "Payment Audit Service (Deprecated)"
        ],
        "x-code-samples": [
          {
            "lang": "shell",
            "source": "$ curl 'https://api.sandbox.velopayments.com/v4/paymentaudit/payouts?payorId=449aa6c3-0569-47f6-a430-a470040da67c' -i -X GET \\\n    -H 'Authorization: Bearer a9d9247d-5e30-4cea-a6e1-0898534ce768'\n"
          }
        ]
      }
    },
    "/v3/paymentaudit/payouts/{payoutId}": {
      "get": {
        "deprecated": true,
        "description": "Deprecated (use /v4/paymentaudit/payouts/<payoutId> instead)",
        "operationId": "getPaymentsForPayout_PA_V3",
        "parameters": [
          {
            "description": "The id (UUID) of the payout.",
            "in": "path",
            "name": "payoutId",
            "required": true,
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          },
          {
            "description": "The remote id of the payees.",
            "in": "query",
            "name": "remoteId",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Payment Status",
            "in": "query",
            "name": "status",
            "required": false,
            "schema": {
              "enum": [
                "ACCEPTED",
                "AWAITING_FUNDS",
                "FUNDED",
                "UNFUNDED",
                "BANK_PAYMENT_REQUESTED",
                "REJECTED",
                "ACCEPTED_BY_RAILS",
                "CONFIRMED",
                "FAILED",
                "RETURNED",
                "WITHDRAWN"
              ],
              "type": "string"
            }
          },
          {
            "description": "The source amount from range filter. Filters for sourceAmount >= sourceAmountFrom",
            "in": "query",
            "name": "sourceAmountFrom",
            "required": false,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "description": "The source amount to range filter. Filters for sourceAmount ⇐ sourceAmountTo",
            "in": "query",
            "name": "sourceAmountTo",
            "required": false,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "description": "The payment amount from range filter. Filters for paymentAmount >= paymentAmountFrom",
            "in": "query",
            "name": "paymentAmountFrom",
            "required": false,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "description": "The payment amount to range filter. Filters for paymentAmount ⇐ paymentAmountTo",
            "in": "query",
            "name": "paymentAmountTo",
            "required": false,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "description": "The submitted date from range filter. Format is yyyy-MM-dd.",
            "in": "query",
            "name": "submittedDateFrom",
            "required": false,
            "schema": {
              "format": "date",
              "type": "string"
            }
          },
          {
            "description": "The submitted date to range filter. Format is yyyy-MM-dd.",
            "in": "query",
            "name": "submittedDateTo",
            "required": false,
            "schema": {
              "format": "date",
              "type": "string"
            }
          },
          {
            "description": "Page number. Default is 1.",
            "in": "query",
            "name": "page",
            "required": false,
            "schema": {
              "default": 1,
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "description": "The number of results to return in a page",
            "in": "query",
            "name": "pageSize",
            "required": false,
            "schema": {
              "default": 25,
              "format": "int32",
              "maximum": 100,
              "minimum": 1,
              "type": "integer"
            }
          },
          {
            "description": "<p>List of sort fields (e.g. ?sort=submittedDateTime:asc,status:asc). Default is sort by remoteId</p>\n<p>The supported sort fields are: sourceAmount, sourceCurrency, paymentAmount, paymentCurrency,\nroutingNumber, accountNumber, remoteId, submittedDateTime and status</p>\n",
            "in": "query",
            "name": "sort",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Optional. If omitted or set to false, any Personal Identifiable Information (PII) values are returned masked.\nIf set to true, and you have permission, the PII values will be returned as their original unmasked values.\n",
            "in": "query",
            "name": "sensitive",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetPaymentsForPayoutResponseV3"
                }
              }
            },
            "description": "200 response, data found okay"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_400"
                }
              }
            },
            "description": "Invalid request. See Error message payload for details of failure"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_401"
                }
              }
            },
            "description": "Invalid access token. May be expired or invalid"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_403"
                }
              }
            },
            "description": "The authentication does not have permissions to access the resource\nThis usually occurs when there is a valid authentication instance (client or user) but they do not have the required permissions\n"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_404"
                }
              }
            },
            "description": "The resource was not found or is no longer available\n"
          }
        },
        "summary": "V3 Get Payments for Payout",
        "tags": [
          "Payment Audit Service (Deprecated)"
        ],
        "x-code-samples": [
          {
            "lang": "shell",
            "source": "$ curl 'https://api.sandbox.velopayments.com/v3/paymentaudit/payouts/7b524212-6fd7-4699-983d-cac082022a2e' -i -X GET \\\n    -H 'Authorization: Bearer f7a9a696-e528-487b-8734-e0a22e41ef7a'\n"
          }
        ]
      }
    },
    "/v3/paymentaudit/payments": {
      "get": {
        "deprecated": true,
        "description": "Deprecated (use /v4/paymentaudit/payments instead)",
        "operationId": "listPaymentsAuditV3",
        "parameters": [
          {
            "description": "The UUID of the payee.",
            "in": "query",
            "name": "payeeId",
            "required": false,
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          },
          {
            "description": "The account owner Payor Id. Required for external users.",
            "in": "query",
            "name": "payorId",
            "required": false,
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          },
          {
            "description": "The payor’s name. This filters via a case insensitive substring match.",
            "in": "query",
            "name": "payorName",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The remote id of the payees.",
            "in": "query",
            "name": "remoteId",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Payment Status",
            "in": "query",
            "name": "status",
            "required": false,
            "schema": {
              "enum": [
                "ACCEPTED",
                "AWAITING_FUNDS",
                "FUNDED",
                "UNFUNDED",
                "BANK_PAYMENT_REQUESTED",
                "REJECTED",
                "ACCEPTED_BY_RAILS",
                "CONFIRMED",
                "FAILED",
                "RETURNED",
                "WITHDRAWN"
              ],
              "type": "string"
            }
          },
          {
            "description": "The source account name filter. This filters via a case insensitive substring match.",
            "in": "query",
            "name": "sourceAccountName",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The source amount from range filter. Filters for sourceAmount >= sourceAmountFrom",
            "in": "query",
            "name": "sourceAmountFrom",
            "required": false,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "description": "The source amount to range filter. Filters for sourceAmount ⇐ sourceAmountTo",
            "in": "query",
            "name": "sourceAmountTo",
            "required": false,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "description": "The source currency filter. Filters based on an exact match on the currency.",
            "in": "query",
            "name": "sourceCurrency",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The payment amount from range filter. Filters for paymentAmount >= paymentAmountFrom",
            "in": "query",
            "name": "paymentAmountFrom",
            "required": false,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "description": "The payment amount to range filter. Filters for paymentAmount ⇐ paymentAmountTo",
            "in": "query",
            "name": "paymentAmountTo",
            "required": false,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "description": "The payment currency filter. Filters based on an exact match on the currency.",
            "in": "query",
            "name": "paymentCurrency",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The submitted date from range filter. Format is yyyy-MM-dd.",
            "in": "query",
            "name": "submittedDateFrom",
            "required": false,
            "schema": {
              "format": "date",
              "type": "string"
            }
          },
          {
            "description": "The submitted date to range filter. Format is yyyy-MM-dd.",
            "in": "query",
            "name": "submittedDateTo",
            "required": false,
            "schema": {
              "format": "date",
              "type": "string"
            }
          },
          {
            "description": "The payment memo filter. This filters via a case insensitive substring match.",
            "in": "query",
            "name": "paymentMemo",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Page number. Default is 1.",
            "in": "query",
            "name": "page",
            "required": false,
            "schema": {
              "default": 1,
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "description": "The number of results to return in a page",
            "in": "query",
            "name": "pageSize",
            "required": false,
            "schema": {
              "default": 25,
              "format": "int32",
              "maximum": 100,
              "minimum": 1,
              "type": "integer"
            }
          },
          {
            "description": "List of sort fields (e.g. ?sort=submittedDateTime:asc,status:asc). Default is sort by remoteId\nThe supported sort fields are: sourceAmount, sourceCurrency, paymentAmount, paymentCurrency,\nroutingNumber, accountNumber, remoteId, submittedDateTime and status\n",
            "in": "query",
            "name": "sort",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Optional. If omitted or set to false, any Personal Identifiable Information (PII) values are returned masked.\nIf set to true, and you have permission, the PII values will be returned as their original unmasked values.\n",
            "in": "query",
            "name": "sensitive",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListPaymentsResponseV3"
                }
              }
            },
            "description": "Paginated list of payments"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_400"
                }
              }
            },
            "description": "Invalid request. See Error message payload for details of failure"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_401"
                }
              }
            },
            "description": "Invalid access token. May be expired or invalid"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_403"
                }
              }
            },
            "description": "The authentication does not have permissions to access the resource\nThis usually occurs when there is a valid authentication instance (client or user) but they do not have the required permissions\n"
          }
        },
        "summary": "V3 Get List of Payments",
        "tags": [
          "Payment Audit Service (Deprecated)"
        ]
      }
    },
    "/v3/paymentaudit/payments/{paymentId}": {
      "get": {
        "deprecated": true,
        "description": "Deprecated (use /v4/paymentaudit/payments/<paymentId> instead)",
        "operationId": "getPaymentDetailsV3",
        "parameters": [
          {
            "description": "Payment Id",
            "in": "path",
            "name": "paymentId",
            "required": true,
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          },
          {
            "description": "Optional. If omitted or set to false, any Personal Identifiable Information (PII) values are returned masked.\nIf set to true, and you have permission, the PII values will be returned as their original unmasked values.\n",
            "in": "query",
            "name": "sensitive",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaymentResponseV3"
                }
              }
            },
            "description": "200 response, request completed okay"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_400"
                }
              }
            },
            "description": "Invalid request. See Error message payload for details of failure"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_401"
                }
              }
            },
            "description": "Invalid access token. May be expired or invalid"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_403"
                }
              }
            },
            "description": "The authentication does not have permissions to access the resource\nThis usually occurs when there is a valid authentication instance (client or user) but they do not have the required permissions\n"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_404"
                }
              }
            },
            "description": "The resource was not found or is no longer available\n"
          }
        },
        "summary": "V3 Get Payment",
        "tags": [
          "Payment Audit Service (Deprecated)"
        ],
        "x-code-samples": [
          {
            "lang": "shell",
            "source": "$ curl 'https://api.sandbox.velopayments.com/v3/paymentaudit/payments/c3a422c2-12ac-4416-84fe-964221bd9815' -i \\\n    -H 'Authorization: Bearer 67a1b299-69b1-4fdf-a576-96b81199a2b9'\n"
          }
        ]
      }
    },
    "/v3/paymentaudit/transactions": {
      "get": {
        "deprecated": true,
        "description": "Deprecated (use /v4/paymentaudit/transactions instead)",
        "operationId": "exportTransactionsCSVV3",
        "parameters": [
          {
            "description": "The Payor ID for whom you wish to run the report.\nFor a Payor requesting the report, this could be their exact Payor, or it could be a child/descendant Payor.\n",
            "in": "query",
            "name": "payorId",
            "required": false,
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          },
          {
            "description": "Start date, inclusive. Format is YYYY-MM-DD",
            "in": "query",
            "name": "startDate",
            "required": false,
            "schema": {
              "format": "date",
              "type": "string"
            }
          },
          {
            "description": "End date, inclusive. Format is YYYY-MM-DD",
            "in": "query",
            "name": "endDate",
            "required": false,
            "schema": {
              "format": "date",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/csv": {
                "schema": {
                  "$ref": "#/components/schemas/PayorAmlTransactionV3"
                }
              }
            },
            "description": "Export Transactions response"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_400"
                }
              }
            },
            "description": "Invalid request. See Error message payload for details of failure"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_401"
                }
              }
            },
            "description": "Invalid access token. May be expired or invalid"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_403"
                }
              }
            },
            "description": "The authentication does not have permissions to access the resource\nThis usually occurs when there is a valid authentication instance (client or user) but they do not have the required permissions\n"
          }
        },
        "summary": "V3 Export Transactions",
        "tags": [
          "Payment Audit Service (Deprecated)"
        ],
        "x-code-samples": [
          {
            "lang": "shell",
            "source": "$ curl 'https://api.sandbox.velopayments.com/v4/paymentaudit/transactions?startDate=2018-05-01&endDate=2018-05-31' -i -X GET \\\n    -H 'Authorization: Bearer 76748e09-775d-4e2d-b889-f0555901d8eb'\n"
          }
        ]
      }
    },
    "/v4/paymentaudit/payouts": {
      "get": {
        "description": "Get List of payouts for payor\n",
        "operationId": "getPayoutsForPayorV4",
        "parameters": [
          {
            "description": "The id (UUID) of the payor funding the payout or the payor whose payees are being paid.",
            "in": "query",
            "name": "payorId",
            "required": false,
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          },
          {
            "description": "Payout Memo filter - case insensitive sub-string match",
            "in": "query",
            "name": "payoutMemo",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Payout Status",
            "in": "query",
            "name": "status",
            "required": false,
            "schema": {
              "enum": [
                "ACCEPTED",
                "REJECTED",
                "SUBMITTED",
                "QUOTED",
                "INSTRUCTED",
                "COMPLETED",
                "INCOMPLETE",
                "CONFIRMED",
                "WITHDRAWN"
              ],
              "type": "string"
            }
          },
          {
            "description": "The submitted date from range filter. Format is yyyy-MM-dd.",
            "in": "query",
            "name": "submittedDateFrom",
            "required": false,
            "schema": {
              "format": "date",
              "type": "string"
            }
          },
          {
            "description": "The submitted date to range filter. Format is yyyy-MM-dd.",
            "in": "query",
            "name": "submittedDateTo",
            "required": false,
            "schema": {
              "format": "date",
              "type": "string"
            }
          },
          {
            "description": "The name of the payor whose payees are being paid. This filters via a case insensitive substring match.",
            "in": "query",
            "name": "fromPayorName",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Filter payouts scheduled to run on or after the given date. Format is yyyy-MM-dd.",
            "in": "query",
            "name": "scheduledForDateFrom",
            "required": false,
            "schema": {
              "format": "date",
              "type": "string"
            }
          },
          {
            "description": "Filter payouts scheduled to run on or before the given date. Format is yyyy-MM-dd.",
            "in": "query",
            "name": "scheduledForDateTo",
            "required": false,
            "schema": {
              "format": "date",
              "type": "string"
            }
          },
          {
            "description": "Payout Schedule Status",
            "in": "query",
            "name": "scheduleStatus",
            "required": false,
            "schema": {
              "enum": [
                "ANY",
                "SCHEDULED",
                "EXECUTED",
                "FAILED"
              ],
              "type": "string"
            }
          },
          {
            "description": "Page number. Default is 1.",
            "in": "query",
            "name": "page",
            "required": false,
            "schema": {
              "default": 1,
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "description": "The number of results to return in a page",
            "in": "query",
            "name": "pageSize",
            "required": false,
            "schema": {
              "default": 25,
              "format": "int32",
              "maximum": 100,
              "minimum": 1,
              "type": "integer"
            }
          },
          {
            "description": "List of sort fields (e.g. ?sort=submittedDateTime:asc,instructedDateTime:asc,status:asc)\nDefault is submittedDateTime:asc\nThe supported sort fields are: submittedDateTime, instructedDateTime, status, totalPayments, payoutId, scheduledFor\n",
            "in": "query",
            "name": "sort",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetPayoutsResponse"
                }
              }
            },
            "description": "Payor data found"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_400"
                }
              }
            },
            "description": "Invalid request. See Error message payload for details of failure"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_401"
                }
              }
            },
            "description": "Invalid access token. May be expired or invalid"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_403"
                }
              }
            },
            "description": "The authentication does not have permissions to access the resource\nThis usually occurs when there is a valid authentication instance (client or user) but they do not have the required permissions\n"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_404"
                }
              }
            },
            "description": "The resource was not found or is no longer available\n"
          }
        },
        "summary": "Get Payouts for Payor",
        "tags": [
          "Payment Audit Service"
        ],
        "x-code-samples": [
          {
            "lang": "shell",
            "source": "$ curl 'https://api.sandbox.velopayments.com/v4/paymentaudit/payouts?payorId=449aa6c3-0569-47f6-a430-a470040da67c' -i -X GET \\\n    -H 'Authorization: Bearer a9d9247d-5e30-4cea-a6e1-0898534ce768'\n"
          }
        ]
      }
    },
    "/v4/paymentaudit/payouts/{payoutId}": {
      "get": {
        "description": "Get List of payments for Payout, allowing for RETURNED status\n",
        "operationId": "getPaymentsForPayoutV4",
        "parameters": [
          {
            "description": "Payout Rails ID filter - case insensitive match.\nAny value is allowed, but you should use one of the supported railsId values.\nTo get this list of values, you should call the 'Get Supported Rails' endpoint.\n",
            "in": "query",
            "name": "railsId",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The id (UUID) of the payout.",
            "in": "path",
            "name": "payoutId",
            "required": true,
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          },
          {
            "description": "The remote id of the payees.",
            "in": "query",
            "name": "remoteId",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The id of the remote system that is orchestrating payments",
            "in": "query",
            "name": "remoteSystemId",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Payment Status",
            "in": "query",
            "name": "status",
            "required": false,
            "schema": {
              "enum": [
                "ACCEPTED",
                "AWAITING_FUNDS",
                "FUNDED",
                "UNFUNDED",
                "BANK_PAYMENT_REQUESTED",
                "REJECTED",
                "ACCEPTED_BY_RAILS",
                "CONFIRMED",
                "FAILED",
                "RETURNED",
                "WITHDRAWN"
              ],
              "type": "string"
            }
          },
          {
            "description": "The source amount from range filter. Filters for sourceAmount >= sourceAmountFrom",
            "in": "query",
            "name": "sourceAmountFrom",
            "required": false,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "description": "The source amount to range filter. Filters for sourceAmount ⇐ sourceAmountTo",
            "in": "query",
            "name": "sourceAmountTo",
            "required": false,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "description": "The payment amount from range filter. Filters for paymentAmount >= paymentAmountFrom",
            "in": "query",
            "name": "paymentAmountFrom",
            "required": false,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "description": "The payment amount to range filter. Filters for paymentAmount ⇐ paymentAmountTo",
            "in": "query",
            "name": "paymentAmountTo",
            "required": false,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "description": "The submitted date from range filter. Format is yyyy-MM-dd.",
            "in": "query",
            "name": "submittedDateFrom",
            "required": false,
            "schema": {
              "format": "date",
              "type": "string"
            }
          },
          {
            "description": "The submitted date to range filter. Format is yyyy-MM-dd.",
            "in": "query",
            "name": "submittedDateTo",
            "required": false,
            "schema": {
              "format": "date",
              "type": "string"
            }
          },
          {
            "description": "Transmission Type\n* ACH\n* SAME_DAY_ACH\n* WIRE\n* GACHO\n",
            "in": "query",
            "name": "transmissionType",
            "required": false,
            "schema": {
              "enum": [
                "ACH",
                "SAME_DAY_ACH",
                "WIRE",
                "LOCAL",
                "GACHO"
              ],
              "type": "string"
            }
          },
          {
            "description": "Page number. Default is 1.",
            "in": "query",
            "name": "page",
            "required": false,
            "schema": {
              "default": 1,
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "description": "The number of results to return in a page",
            "in": "query",
            "name": "pageSize",
            "required": false,
            "schema": {
              "default": 25,
              "format": "int32",
              "maximum": 100,
              "minimum": 1,
              "type": "integer"
            }
          },
          {
            "description": "List of sort fields (e.g. ?sort=submittedDateTime:asc,status:asc). Default is sort by remoteId\nThe supported sort fields are: sourceAmount, sourceCurrency, paymentAmount, paymentCurrency,\nroutingNumber, accountNumber, remoteId, submittedDateTime and status\n",
            "in": "query",
            "name": "sort",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Optional. If omitted or set to false, any Personal Identifiable Information (PII) values are returned masked.\nIf set to true, and you have permission, the PII values will be returned as their original unmasked values.\n",
            "in": "query",
            "name": "sensitive",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetPaymentsForPayoutResponseV4"
                }
              }
            },
            "description": "200 response, data found okay"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_400"
                }
              }
            },
            "description": "Invalid request. See Error message payload for details of failure"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_401"
                }
              }
            },
            "description": "Invalid access token. May be expired or invalid"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_403"
                }
              }
            },
            "description": "The authentication does not have permissions to access the resource\nThis usually occurs when there is a valid authentication instance (client or user) but they do not have the required permissions\n"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_404"
                }
              }
            },
            "description": "The resource was not found or is no longer available\n"
          }
        },
        "summary": "Get Payments for Payout",
        "tags": [
          "Payment Audit Service"
        ],
        "x-code-samples": [
          {
            "lang": "shell",
            "source": "$ curl 'https://api.sandbox.velopayments.com/v4/paymentaudit/payouts/7b524212-6fd7-4699-983d-cac082022a2e' -i -X GET \\\n    -H 'Authorization: Bearer f7a9a696-e528-487b-8734-e0a22e41ef7a'\n"
          }
        ]
      }
    },
    "/v4/paymentaudit/payments": {
      "get": {
        "description": "Get payments for the given payor Id",
        "operationId": "listPaymentsAuditV4",
        "parameters": [
          {
            "description": "The UUID of the payee.",
            "in": "query",
            "name": "payeeId",
            "required": false,
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          },
          {
            "description": "The account owner Payor Id. Required for external users.",
            "in": "query",
            "name": "payorId",
            "required": false,
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          },
          {
            "description": "The payor’s name. This filters via a case insensitive substring match.",
            "in": "query",
            "name": "payorName",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The remote id of the payees.",
            "in": "query",
            "name": "remoteId",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The id of the remote system that is orchestrating payments",
            "in": "query",
            "name": "remoteSystemId",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Payment Status",
            "in": "query",
            "name": "status",
            "required": false,
            "schema": {
              "enum": [
                "ACCEPTED",
                "AWAITING_FUNDS",
                "FUNDED",
                "UNFUNDED",
                "BANK_PAYMENT_REQUESTED",
                "REJECTED",
                "ACCEPTED_BY_RAILS",
                "CONFIRMED",
                "FAILED",
                "RETURNED",
                "WITHDRAWN"
              ],
              "type": "string"
            }
          },
          {
            "description": "Transmission Type\n* ACH\n* SAME_DAY_ACH\n* WIRE\n* GACHO\n",
            "in": "query",
            "name": "transmissionType",
            "required": false,
            "schema": {
              "enum": [
                "ACH",
                "SAME_DAY_ACH",
                "WIRE",
                "LOCAL",
                "GACHO"
              ],
              "type": "string"
            }
          },
          {
            "description": "The source account name filter. This filters via a case insensitive substring match.",
            "in": "query",
            "name": "sourceAccountName",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The source amount from range filter. Filters for sourceAmount >= sourceAmountFrom",
            "in": "query",
            "name": "sourceAmountFrom",
            "required": false,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "description": "The source amount to range filter. Filters for sourceAmount ⇐ sourceAmountTo",
            "in": "query",
            "name": "sourceAmountTo",
            "required": false,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "description": "The source currency filter. Filters based on an exact match on the currency.",
            "in": "query",
            "name": "sourceCurrency",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The payment amount from range filter. Filters for paymentAmount >= paymentAmountFrom",
            "in": "query",
            "name": "paymentAmountFrom",
            "required": false,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "description": "The payment amount to range filter. Filters for paymentAmount ⇐ paymentAmountTo",
            "in": "query",
            "name": "paymentAmountTo",
            "required": false,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "description": "The payment currency filter. Filters based on an exact match on the currency.",
            "in": "query",
            "name": "paymentCurrency",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The submitted date from range filter. Format is yyyy-MM-dd.",
            "in": "query",
            "name": "submittedDateFrom",
            "required": false,
            "schema": {
              "format": "date",
              "type": "string"
            }
          },
          {
            "description": "The submitted date to range filter. Format is yyyy-MM-dd.",
            "in": "query",
            "name": "submittedDateTo",
            "required": false,
            "schema": {
              "format": "date",
              "type": "string"
            }
          },
          {
            "description": "The payment memo filter. This filters via a case insensitive substring match.",
            "in": "query",
            "name": "paymentMemo",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Payout Rails ID filter - case insensitive match.\nAny value is allowed, but you should use one of the supported railsId values.\nTo get this list of values, you should call the 'Get Supported Rails' endpoint.\n",
            "in": "query",
            "name": "railsId",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Filter payouts scheduled to run on or after the given date. Format is yyyy-MM-dd.",
            "in": "query",
            "name": "scheduledForDateFrom",
            "required": false,
            "schema": {
              "format": "date",
              "type": "string"
            }
          },
          {
            "description": "Filter payouts scheduled to run on or before the given date. Format is yyyy-MM-dd.",
            "in": "query",
            "name": "scheduledForDateTo",
            "required": false,
            "schema": {
              "format": "date",
              "type": "string"
            }
          },
          {
            "description": "Payout Schedule Status",
            "in": "query",
            "name": "scheduleStatus",
            "required": false,
            "schema": {
              "enum": [
                "ANY",
                "SCHEDULED",
                "EXECUTED",
                "FAILED"
              ],
              "type": "string"
            }
          },
          {
            "description": "The status of the post instruct FX step if one was required for the payment",
            "in": "query",
            "name": "postInstructFxStatus",
            "required": false,
            "schema": {
              "enum": [
                "ANY",
                "INITIATED",
                "CANCELLED",
                "EXECUTED",
                "COMPLETED",
                "RETURNED",
                "RESUBMITTED",
                "REFUNDED"
              ],
              "type": "string"
            }
          },
          {
            "description": "Page number. Default is 1.",
            "in": "query",
            "name": "page",
            "required": false,
            "schema": {
              "default": 1,
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "description": "The number of results to return in a page",
            "in": "query",
            "name": "pageSize",
            "required": false,
            "schema": {
              "default": 25,
              "format": "int32",
              "maximum": 100,
              "minimum": 1,
              "type": "integer"
            }
          },
          {
            "description": "List of sort fields (e.g. ?sort=submittedDateTime:asc,status:asc). Default is sort by submittedDateTime:desc,paymentId:asc\nThe supported sort fields are: sourceAmount, sourceCurrency, paymentAmount, paymentCurrency,\nroutingNumber, accountNumber, remoteId, submittedDateTime, status and paymentId\n",
            "in": "query",
            "name": "sort",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Optional. If omitted or set to false, any Personal Identifiable Information (PII) values are returned masked.\nIf set to true, and you have permission, the PII values will be returned as their original unmasked values.\n",
            "in": "query",
            "name": "sensitive",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListPaymentsResponseV4"
                }
              }
            },
            "description": "Paginated list of payments"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_400"
                }
              }
            },
            "description": "Invalid request. See Error message payload for details of failure"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_401"
                }
              }
            },
            "description": "Invalid access token. May be expired or invalid"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_403"
                }
              }
            },
            "description": "The authentication does not have permissions to access the resource\nThis usually occurs when there is a valid authentication instance (client or user) but they do not have the required permissions\n"
          }
        },
        "summary": "Get List of Payments",
        "tags": [
          "Payment Audit Service"
        ]
      }
    },
    "/v4/paymentaudit/payments/{paymentId}": {
      "get": {
        "description": "Get the payment with the given id. This contains the payment history.\n",
        "operationId": "getPaymentDetailsV4",
        "parameters": [
          {
            "description": "Payment Id",
            "in": "path",
            "name": "paymentId",
            "required": true,
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          },
          {
            "description": "Optional. If omitted or set to false, any Personal Identifiable Information (PII) values are returned masked.\nIf set to true, and you have permission, the PII values will be returned as their original unmasked values.\n",
            "in": "query",
            "name": "sensitive",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaymentResponseV4"
                }
              }
            },
            "description": "200 response, request completed okay"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_400"
                }
              }
            },
            "description": "Invalid request. See Error message payload for details of failure"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_401"
                }
              }
            },
            "description": "Invalid access token. May be expired or invalid"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_403"
                }
              }
            },
            "description": "The authentication does not have permissions to access the resource\nThis usually occurs when there is a valid authentication instance (client or user) but they do not have the required permissions\n"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_404"
                }
              }
            },
            "description": "The resource was not found or is no longer available\n"
          }
        },
        "summary": "Get Payment",
        "tags": [
          "Payment Audit Service"
        ],
        "x-code-samples": [
          {
            "lang": "shell",
            "source": "$ curl 'https://api.sandbox.velopayments.com/v4/paymentaudit/payments/c3a422c2-12ac-4416-84fe-964221bd9815' -i \\\n    -H 'Authorization: Bearer 67a1b299-69b1-4fdf-a576-96b81199a2b9'\n"
          }
        ]
      }
    },
    "/v4/paymentaudit/fundings": {
      "get": {
        "description": "<p>Get a list of Fundings for a payor.</p>\n",
        "operationId": "getFundingsV4",
        "parameters": [
          {
            "description": "The account owner Payor ID",
            "in": "query",
            "name": "payorId",
            "required": true,
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          },
          {
            "description": "The source account name",
            "in": "query",
            "name": "sourceAccountName",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Page number. Default is 1.",
            "in": "query",
            "name": "page",
            "required": false,
            "schema": {
              "default": 1,
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "description": "The number of results to return in a page",
            "in": "query",
            "name": "pageSize",
            "required": false,
            "schema": {
              "default": 25,
              "format": "int32",
              "maximum": 100,
              "minimum": 1,
              "type": "integer"
            }
          },
          {
            "description": "List of sort fields. Example: ```?sort=destinationCurrency:asc,destinationAmount:asc```\nDefault is no sort. The supported sort fields are: dateTime and amount.\n",
            "in": "query",
            "name": "sort",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetFundingsResponse"
                }
              }
            },
            "description": "Get Fundings normal response"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_400"
                }
              }
            },
            "description": "Invalid request. See Error message payload for details of failure"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_401"
                }
              }
            },
            "description": "Invalid access token. May be expired or invalid"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_403"
                }
              }
            },
            "description": "The authentication does not have permissions to access the resource\nThis usually occurs when there is a valid authentication instance (client or user) but they do not have the required permissions\n"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_404"
                }
              }
            },
            "description": "The resource was not found or is no longer available\n"
          }
        },
        "summary": "Get Fundings for Payor",
        "tags": [
          "Payment Audit Service"
        ],
        "x-code-samples": [
          {
            "lang": "shell",
            "source": "$ curl 'https://api.sandbox.velopayments.com/v4/paymentaudit/fundings?payorId=2a5d8af2-a1ed-4d7f-b9a7-ebe4b333be5a' -i -X GET \\\n    -H 'Authorization: Bearer 3667f994-7d41-4d20-990d-b79fa720e56b'\n"
          }
        ]
      }
    },
    "/v4/paymentaudit/payoutStatistics": {
      "get": {
        "description": "<p>Get payout statistics for a payor.</p>\n",
        "operationId": "getPayoutStatsV4",
        "parameters": [
          {
            "description": "The account owner Payor ID. Required for external users.",
            "in": "query",
            "name": "payorId",
            "required": false,
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetPayoutStatistics"
                }
              }
            },
            "description": "Payout Statistics response"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_400"
                }
              }
            },
            "description": "Invalid request. See Error message payload for details of failure"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_401"
                }
              }
            },
            "description": "Invalid access token. May be expired or invalid"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_403"
                }
              }
            },
            "description": "The authentication does not have permissions to access the resource\nThis usually occurs when there is a valid authentication instance (client or user) but they do not have the required permissions\n"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_404"
                }
              }
            },
            "description": "The resource was not found or is no longer available\n"
          }
        },
        "summary": "Get Payout Statistics",
        "tags": [
          "Payment Audit Service"
        ],
        "x-code-samples": [
          {
            "lang": "shell",
            "source": "$ curl 'https://api.sandbox.velopayments.com/v4/paymentaudit/payoutStatistics?payorId=c61b32ac-8e50-433e-9372-b5b1c8180742' -i -X GET \\\n    -H 'Authorization: Bearer e71d3dfe-3587-4df6-9f8d-59d3135d7bf7'\n"
          }
        ]
      }
    },
    "/v4/payments/deltas": {
      "get": {
        "description": "Get a paginated response listing payment changes.",
        "operationId": "listPaymentChangesV4",
        "parameters": [
          {
            "description": "The Payor ID to find associated Payments",
            "in": "query",
            "name": "payorId",
            "required": true,
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          },
          {
            "description": "The updatedSince filter in the format YYYY-MM-DDThh:mm:ss+hh:mm",
            "in": "query",
            "name": "updatedSince",
            "required": true,
            "schema": {
              "format": "date-time",
              "type": "string"
            }
          },
          {
            "description": "Page number. Default is 1.",
            "in": "query",
            "name": "page",
            "required": false,
            "schema": {
              "default": 1,
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "description": "The number of results to return in a page",
            "in": "query",
            "name": "pageSize",
            "required": false,
            "schema": {
              "default": 100,
              "format": "int32",
              "maximum": 1000,
              "minimum": 1,
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaymentDeltaResponse"
                }
              }
            },
            "description": "Details of Payment Changes"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_400"
                }
              }
            },
            "description": "Invalid request. See Error message payload for details of failure"
          }
        },
        "summary": "List Payment Changes",
        "tags": [
          "Payment Audit Service"
        ],
        "x-code-samples": [
          {
            "lang": "shell",
            "source": "$ curl 'https://api.sandbox.velopayments.com/v4/payments/deltas?pageSize=2&page=8&payorId=0a818933-087d-47f2-ad83-2f986ed087eb&updatedSince=2019-01-20T09:00:00+00:00' -i -X GET \\\n    -H 'Authorization: Bearer 6dd5e976-e329-462f-bd6b-25d463cf02fd' \\\n    -H 'Content-Type: application/json'\n"
          }
        ]
      }
    },
    "/v4/paymentaudit/transactions": {
      "get": {
        "description": "Download a CSV file containing payments in a date range. Uses Transfer-Encoding - chunked to stream to the client. Date range is inclusive of both the start and end dates.",
        "operationId": "exportTransactionsCSVV4",
        "parameters": [
          {
            "description": "<p>The Payor ID for whom you wish to run the report.</p>\n<p>For a Payor requesting the report, this could be their exact Payor, or it could be a child/descendant Payor.</p>\n",
            "in": "query",
            "name": "payorId",
            "required": false,
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          },
          {
            "description": "Start date, inclusive. Format is YYYY-MM-DD",
            "in": "query",
            "name": "startDate",
            "required": false,
            "schema": {
              "format": "date",
              "type": "string"
            }
          },
          {
            "description": "End date, inclusive. Format is YYYY-MM-DD",
            "in": "query",
            "name": "endDate",
            "required": false,
            "schema": {
              "format": "date",
              "type": "string"
            }
          },
          {
            "description": "<p>Mode to determine whether to include other Payor's data in the results.</p>\n<p>May only be used if payorId is specified.</p>\n<p>Can be omitted or set to 'payorOnly' or 'payorAndDescendants'.</p>\n<p>payorOnly: Only include results for the specified Payor. This is the default if 'include' is omitted.</p>\n<p>payorAndDescendants: Aggregate results for all descendant Payors of the specified Payor. Should only be used if the Payor with the specified payorId has at least one child Payor.</p>\n<p>Note when a Payor requests the report and include=payorAndDescendants is used, the following additional columns are included in the CSV: Payor Name, Payor Id</p>\n",
            "in": "query",
            "name": "include",
            "required": false,
            "schema": {
              "enum": [
                "payorOnly",
                "payorAndDescendants"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/csv": {
                "schema": {
                  "$ref": "#/components/schemas/PayorAmlTransaction"
                }
              }
            },
            "description": "Export Transactions response"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_400"
                }
              }
            },
            "description": "Invalid request. See Error message payload for details of failure"
          },
          "401": {
            "description": "Not Authorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "summary": "Export Transactions",
        "tags": [
          "Payment Audit Service"
        ],
        "x-code-samples": [
          {
            "lang": "shell",
            "source": "$ curl 'https://api.sandbox.velopayments.com/v4/paymentaudit/transactions?startDate=2018-05-01&endDate=2018-05-31' -i -X GET \\\n    -H 'Authorization: Bearer 76748e09-775d-4e2d-b889-f0555901d8eb'\n"
          }
        ]
      }
    },
    "/v3/payouts": {
      "post": {
        "description": "<p>Create a new payout and return a location header with a link to the payout</p>\n<p>Basic validation of the payout is performed before returning but more comprehensive validation is done asynchronously</p>\n<p>The results can be obtained by issuing a HTTP GET to the URL returned in the location header</p>\n<p>**NOTE:** amount values in payments must be in 'minor units' format. E.g. cents for USD, pence for GBP etc with no decimal places</p>\n",
        "operationId": "submitPayoutV3",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreatePayoutRequestV3"
              }
            },
            "multipart/form-data": {
              "example": "remoteId,currency,amount,paymentMemo,sourceAccountName,payorPaymentId\nremoteId1,USD,12345,ref1,myAccountUSD,1234567abc\nremoteId2,USD,23456,ref2,myAccountUSD,1234567def\n",
              "schema": {
                "properties": {
                  "payorId": {
                    "deprecated": true,
                    "description": "Deprecated in v2.16. Any value supplied here will be ignored.",
                    "format": "uuid",
                    "type": "string"
                  },
                  "payoutFromPayorId": {
                    "description": "The id of the payor whose source account(s) will be debited. payoutFromPayorId and payoutToPayorId must be both supplied or both omitted.",
                    "format": "uuid",
                    "type": "string"
                  },
                  "payoutToPayorId": {
                    "description": "The id of the payor whose payees will be paid. payoutFromPayorId and payoutToPayorId must be both supplied or both omitted.",
                    "format": "uuid",
                    "type": "string"
                  },
                  "file": {
                    "description": "Create a new payout from a CSV source file and return a location header with a link to get the payout",
                    "items": {
                      "$ref": "#/components/schemas/PaymentInstructionV3"
                    },
                    "type": "array"
                  }
                },
                "type": "object"
              }
            }
          },
          "description": "Post amount to transfer using stored funding account details.",
          "required": true
        },
        "responses": {
          "202": {
            "description": "Successful submission of the payout",
            "headers": {
              "Location": {
                "description": "Reference to created payout",
                "example": "<p>HTTP/1.1 202 Accepted</p>\n<p>Location: https://api.sandbox.velopayments.com/v3/payouts/04a3299d-afcf-42fb-a8b2-76097daf2b1b</p>\n",
                "schema": {
                  "format": "uri",
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_400"
                }
              }
            },
            "description": "Invalid request. See Error message payload for details of failure"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_401"
                }
              }
            },
            "description": "Invalid access token. May be expired or invalid"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_403"
                }
              }
            },
            "description": "The authentication does not have permissions to access the resource\nThis usually occurs when there is a valid authentication instance (client or user) but they do not have the required permissions\n"
          }
        },
        "summary": "Submit Payout",
        "tags": [
          "Payouts"
        ],
        "x-code-samples": [
          {
            "lang": "shell",
            "source": "$ curl 'https://api.sandbox.velopayments.com/v3/payouts' -i -X POST \\\n-H 'Authorization: Bearer 63e4d691-847b-46b5-893d-fd15c54dd4bf' \\\n-H 'Content-Type: application/json' \\\n-d '{\"payments\":[{\"remoteId\":\"myRemoteId01\",\"currency\":\"USD\",\"amount\":12345,\"sourceAccountName\":\"PAYOR_SRC_ACCT\",\"payorPaymentId\":\"1111\"},{\"remoteId\":\"myRemoteId02\",\"currency\":\"USD\",\"amount\":23456,\"sourceAccountName\":\"PAYOR_SRC_ACCT\",\"payorPaymentId\":\"2222\"},{\"remoteId\":\"myRemoteId01\",\"currency\":\"USD\",\"amount\":1020,\"sourceAccountName\":\"PAYOR_SRC_ACCT\",\"payorPaymentId\":\"3333\"},{\"remoteId\":\"myRemoteId03\",\"currency\":\"USD\",\"amount\":3456,\"sourceAccountName\":\"PAYOR_SRC_ACCT\",\"payorPaymentId\":\"4444\"},{\"remoteId\":\"myRemoteId04\",\"currency\":\"USD\",\"amount\":8765,\"sourceAccountName\":\"PAYOR_SRC_ACCT\",\"payorPaymentId\":\"5555\"}]}'\n"
          }
        ]
      }
    },
    "/v3/payouts/{payoutId}": {
      "delete": {
        "description": "Withdraw Payout will remove the payout details from the rails but the payout will still be accessible in payout service in WITHDRAWN status.",
        "operationId": "withdrawPayoutV3",
        "parameters": [
          {
            "description": "Id of the payout",
            "in": "path",
            "name": "payoutId",
            "required": true,
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "HTTP 202 Accepted"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_400"
                }
              }
            },
            "description": "Invalid request. See Error message payload for details of failure"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_401"
                }
              }
            },
            "description": "Invalid access token. May be expired or invalid"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_403"
                }
              }
            },
            "description": "The authentication does not have permissions to access the resource\nThis usually occurs when there is a valid authentication instance (client or user) but they do not have the required permissions\n"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_404"
                }
              }
            },
            "description": "The resource was not found or is no longer available\n"
          }
        },
        "summary": "Withdraw Payout",
        "tags": [
          "Payouts"
        ],
        "x-code-samples": [
          {
            "lang": "shell",
            "source": "$ curl 'https://api.sandbox.velopayments.com/v3/payouts/240c2341-8ddb-4764-9768-f1e0a498158c' -i -X DELETE \\\n    -H 'Authorization: Bearer 1681d963-f971-4b82-8376-b3e86834de78' \\\n    -H 'Content-Type: application/json'\n"
          }
        ]
      },
      "get": {
        "description": "Get payout summary - returns the current state of the payout.",
        "operationId": "getPayoutSummaryV3",
        "parameters": [
          {
            "description": "Id of the payout",
            "in": "path",
            "name": "payoutId",
            "required": true,
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PayoutSummaryResponseV3"
                }
              }
            },
            "description": "Details of Payout"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_401"
                }
              }
            },
            "description": "Invalid access token. May be expired or invalid"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_403"
                }
              }
            },
            "description": "The authentication does not have permissions to access the resource\nThis usually occurs when there is a valid authentication instance (client or user) but they do not have the required permissions\n"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_404"
                }
              }
            },
            "description": "The resource was not found or is no longer available\n"
          }
        },
        "summary": "Get Payout Summary",
        "tags": [
          "Payouts"
        ],
        "x-code-samples": [
          {
            "lang": "shell",
            "source": "$ curl 'https://api.sandbox.velopayments.com/v3/payouts/cc2e1a8d-39ae-461c-bde3-ce78525f89ac' -i -X POST \\\n    -H 'Authorization: Bearer f081303c-7fcc-4204-8530-02e8ec2ef73f' \\\n    -H 'Content-Type: application/json'\n"
          }
        ]
      },
      "post": {
        "description": "Instruct a payout to be made for the specified payoutId.",
        "operationId": "instructPayoutV3",
        "parameters": [
          {
            "description": "Id of the payout",
            "in": "path",
            "name": "payoutId",
            "required": true,
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/InstructPayoutRequestV3"
              }
            }
          },
          "description": "Additional instruct payout parameters",
          "required": false
        },
        "responses": {
          "202": {
            "description": "HTTP 202 Accepted"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_400"
                }
              }
            },
            "description": "Invalid request. See Error message payload for details of failure"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_401"
                }
              }
            },
            "description": "Invalid access token. May be expired or invalid"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_403"
                }
              }
            },
            "description": "The authentication does not have permissions to access the resource\nThis usually occurs when there is a valid authentication instance (client or user) but they do not have the required permissions\n"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_404"
                }
              }
            },
            "description": "The resource was not found or is no longer available\n"
          },
          "409": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_409"
                }
              }
            },
            "description": "The request contained data that would result in a duplicate value\n"
          }
        },
        "summary": "Instruct Payout",
        "tags": [
          "Payouts"
        ],
        "x-code-samples": [
          {
            "lang": "shell",
            "source": "$ curl 'https://api.sandbox.velopayments.com/v3/payouts/0627380c-2330-4fcd-a2a2-02b12152e62e' -i -X POST \\\n    -H 'Content-Type: application/json' \\\n    -H 'Authorization: Bearer d1963608-6612-4aa0-bf7d-cf18ce540cdc'\n"
          }
        ]
      }
    },
    "/v3/payouts/{payoutId}/quote": {
      "post": {
        "description": "Create quote for a payout",
        "operationId": "createQuoteForPayoutV3",
        "parameters": [
          {
            "description": "Id of the payout",
            "in": "path",
            "name": "payoutId",
            "required": true,
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/QuoteResponseV3"
                }
              }
            },
            "description": "Quote for payout"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_404"
                }
              }
            },
            "description": "The resource was not found or is no longer available\n"
          },
          "409": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_409"
                }
              }
            },
            "description": "The request contained data that would result in a duplicate value\n"
          }
        },
        "summary": "Create a quote for the payout",
        "tags": [
          "Payouts"
        ],
        "x-code-samples": [
          {
            "lang": "shell",
            "source": "$ curl 'https://api.sandbox.velopayments.com/v3/payouts/cc2e1a8d-39ae-461c-bde3-ce78525f89ac/quote' -i -X POST \\\n    -H 'Authorization: Bearer f081303c-7fcc-4204-8530-02e8ec2ef73f' \\\n    -H 'Content-Type: application/json'\n"
          }
        ]
      }
    },
    "/v3/payouts/{payoutId}/payments": {
      "get": {
        "description": "Retrieve payments for a payout",
        "operationId": "getPaymentsForPayoutV3",
        "parameters": [
          {
            "description": "Id of the payout",
            "in": "path",
            "name": "payoutId",
            "required": true,
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          },
          {
            "description": "Payment Status\n* ACCEPTED: any payment which was accepted at submission time (status may have changed since)\n* REJECTED: any payment rejected by initial submission processing\n* WITHDRAWN: any payment which has been withdrawn\n* WITHDRAWABLE: any payment eligible for withdrawal\n",
            "in": "query",
            "name": "status",
            "required": false,
            "schema": {
              "enum": [
                "ACCEPTED",
                "REJECTED",
                "WITHDRAWN",
                "WITHDRAWABLE"
              ],
              "type": "string"
            }
          },
          {
            "description": "The remote id of the payees.",
            "in": "query",
            "name": "remoteId",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Payor's Id of the Payment",
            "in": "query",
            "name": "payorPaymentId",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Physical Account Name",
            "in": "query",
            "name": "sourceAccountName",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Transmission Type\n* ACH\n* SAME_DAY_ACH\n* WIRE\n",
            "in": "query",
            "name": "transmissionType",
            "required": false,
            "schema": {
              "enum": [
                "ACH",
                "SAME_DAY_ACH",
                "WIRE"
              ],
              "type": "string"
            }
          },
          {
            "description": "Payment Memo of the Payment",
            "in": "query",
            "name": "paymentMemo",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The number of results to return in a page",
            "in": "query",
            "name": "pageSize",
            "required": false,
            "schema": {
              "default": 25,
              "format": "int32",
              "maximum": 100,
              "minimum": 1,
              "type": "integer"
            }
          },
          {
            "description": "Page number. Default is 1.",
            "in": "query",
            "name": "page",
            "required": false,
            "schema": {
              "default": 1,
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PagedPaymentsResponseV3"
                }
              }
            },
            "description": "Payments for payout"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_404"
                }
              }
            },
            "description": "The resource was not found or is no longer available\n"
          }
        },
        "summary": "Retrieve payments for a payout",
        "tags": [
          "Payouts"
        ],
        "x-code-samples": [
          {
            "lang": "shell",
            "source": "$ curl 'https://api.sandbox.velopayments.com/v3/payouts/cc2e1a8d-39ae-461c-bde3-ce78525f89ac/payments?payoutId=fb2c5dd0-3573-11eb-a2c2-f2189898ab4d' -i -X GET \\\n    -H 'Authorization: Bearer f081303c-7fcc-4204-8530-02e8ec2ef73f' \\\n    -H 'Content-Type: application/json'\n"
          }
        ]
      }
    },
    "/v3/payouts/{payoutId}/schedule": {
      "delete": {
        "description": "Remove the schedule for a scheduled payout",
        "operationId": "deschedulePayout",
        "parameters": [
          {
            "description": "Id of the payout",
            "in": "path",
            "name": "payoutId",
            "required": true,
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Descheduled payout successfully"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_401"
                }
              }
            },
            "description": "Invalid access token. May be expired or invalid"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_403"
                }
              }
            },
            "description": "The authentication does not have permissions to access the resource\nThis usually occurs when there is a valid authentication instance (client or user) but they do not have the required permissions\n"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_404"
                }
              }
            },
            "description": "The resource was not found or is no longer available\n"
          },
          "409": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_409"
                }
              }
            },
            "description": "The request contained data that would result in a duplicate value\n"
          }
        },
        "summary": "Deschedule a payout",
        "tags": [
          "Payouts"
        ],
        "x-code-samples": [
          {
            "lang": "shell",
            "source": "$ curl 'https://api.sandbox.velopayments.com/v3/payouts/cc2e1a8d-39ae-461c-bde3-ce78525f89ac/schedule' -i -X DELETE \\\n    -H 'Authorization: Bearer f081303c-7fcc-4204-8530-02e8ec2ef73f'\n"
          }
        ]
      },
      "post": {
        "description": "<p>Schedule a payout for auto-instruction in the future\nor update existing payout schedule if the payout has been scheduled before.</p>\n",
        "operationId": "scheduleForPayout",
        "parameters": [
          {
            "description": "Id of the payout",
            "in": "path",
            "name": "payoutId",
            "required": true,
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SchedulePayoutRequestV3"
              }
            }
          },
          "description": "schedule payout parameters"
        },
        "responses": {
          "204": {
            "description": "Payout is scheduled successfully"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_400"
                }
              }
            },
            "description": "Invalid request. See Error message payload for details of failure"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_401"
                }
              }
            },
            "description": "Invalid access token. May be expired or invalid"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_403"
                }
              }
            },
            "description": "The authentication does not have permissions to access the resource\nThis usually occurs when there is a valid authentication instance (client or user) but they do not have the required permissions\n"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_404"
                }
              }
            },
            "description": "The resource was not found or is no longer available\n"
          },
          "409": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_409"
                }
              }
            },
            "description": "The request contained data that would result in a duplicate value\n"
          }
        },
        "summary": "Schedule a payout",
        "tags": [
          "Payouts"
        ],
        "x-code-samples": [
          {
            "lang": "shell",
            "source": "$ curl 'https://api.sandbox.velopayments.com/v3/payouts/cc2e1a8d-39ae-461c-bde3-ce78525f89ac/schedule' -i -X POST \\\n    -H 'Authorization: Bearer f081303c-7fcc-4204-8530-02e8ec2ef73f' \\\n    -H 'Content-Type: application/json'\n    -d '{\"scheduledFor\": \"2025-01-01T12:00:00Z\", \"notificationsEnabled\": \"true\"}'\n"
          }
        ]
      }
    },
    "/v1/paymentChannelRules": {
      "get": {
        "deprecated": true,
        "description": "List the country specific payment channel rules.",
        "operationId": "listPaymentChannelRulesV1",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaymentChannelRulesResponse"
                }
              }
            },
            "description": "List Payment Channel Country Rules"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_401"
                }
              }
            },
            "description": "Invalid access token. May be expired or invalid"
          }
        },
        "summary": "List Payment Channel Country Rules",
        "tags": [
          "Countries"
        ],
        "x-code-samples": [
          {
            "lang": "shell",
            "source": "$ curl 'https://api.sandbox.velopayments.com/v1/paymentChannelRules' -i -X GET \\\n    -H 'Authorization: Bearer 63fa49a0-1eeb-4756-b4fb-7cdd94ae80c1'\n"
          }
        ]
      }
    },
    "/v1/payments/{paymentId}/withdraw": {
      "post": {
        "description": "<p>withdraw a payment </p>\n<p>There are a variety of reasons why this can fail</p>\n<ul>\n    <li>the payment must be in a state of 'accepted' or 'unfunded'</li>\n    <li>the payout must not be in a state of 'instructed'</li>\n</ul>\n",
        "operationId": "withdrawPayment",
        "parameters": [
          {
            "description": "Id of the Payment",
            "in": "path",
            "name": "paymentId",
            "required": true,
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WithdrawPaymentRequest"
              }
            }
          },
          "description": "details for withdrawal",
          "required": true
        },
        "responses": {
          "204": {
            "description": "The payment was withdrawn"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_400"
                }
              }
            },
            "description": "Invalid request. See Error message payload for details of failure"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_401"
                }
              }
            },
            "description": "Invalid access token. May be expired or invalid"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_403"
                }
              }
            },
            "description": "The authentication does not have permissions to access the resource\nThis usually occurs when there is a valid authentication instance (client or user) but they do not have the required permissions\n"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_404"
                }
              }
            },
            "description": "The resource was not found or is no longer available\n"
          }
        },
        "summary": "Withdraw a Payment",
        "tags": [
          "Payouts"
        ],
        "x-code-samples": [
          {
            "lang": "shell",
            "source": "$ curl 'https://api.sandbox.velopayments.com/v1/payments/b39264fc-560e-4fa6-b6c3-b12d42e14596/withdraw' -i -X POST \\\n-H 'Authorization: Bearer 63e4d691-847b-46b5-893d-fd15c54dd4bf' \\\n-H 'Content-Type: application/json' \\\n-d '{\"reason\": \"payment submitted in error\"}'\n"
          }
        ]
      }
    },
    "/v1/supportedCountries": {
      "get": {
        "deprecated": true,
        "description": "<p>List the supported countries.</p>\n<p>This version will be retired in March 2020. Use /v2/supportedCountries</p>\n",
        "operationId": "listSupportedCountriesV1",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SupportedCountriesResponse"
                }
              }
            },
            "description": "List of Supported Countries"
          }
        },
        "security": [],
        "summary": "List Supported Countries",
        "tags": [
          "Countries"
        ],
        "x-code-samples": [
          {
            "lang": "shell",
            "source": "$ curl 'https://api.sandbox.velopayments.com/v1/supportedCountries' -i -X GET \\\n    -H 'Authorization: Bearer 9a7c9010-547f-410e-ac3c-fd6f6701c745'\n"
          }
        ]
      }
    },
    "/v2/supportedCountries": {
      "get": {
        "deprecated": true,
        "description": "List the supported countries.",
        "operationId": "listSupportedCountriesV2",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SupportedCountriesResponseV2"
                }
              }
            },
            "description": "List of Supported Countries"
          }
        },
        "security": [],
        "summary": "List Supported Countries",
        "tags": [
          "Countries"
        ],
        "x-code-samples": [
          {
            "lang": "shell",
            "source": "$ curl 'https://api.sandbox.velopayments.com/v2/supportedCountries' -i -X GET\n"
          }
        ]
      }
    },
    "/v2/currencies": {
      "get": {
        "description": "List the supported currencies.",
        "operationId": "listSupportedCurrenciesV2",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SupportedCurrencyResponseV2"
                }
              }
            },
            "description": "List Supported Currencies"
          }
        },
        "security": [],
        "summary": "List Supported Currencies",
        "tags": [
          "Currencies"
        ],
        "x-code-samples": [
          {
            "lang": "shell",
            "source": "$ curl 'https://api.sandbox.velopayments.com/v2/currencies' -i -X GET\n"
          }
        ]
      }
    },
    "/v1/webhooks": {
      "description": "List the details about the webhooks for the given payor.",
      "get": {
        "description": "List the details about the webhooks for the given payor.",
        "operationId": "listWebhooksV1",
        "parameters": [
          {
            "description": "Page number. Default is 1.",
            "in": "query",
            "name": "page",
            "required": false,
            "schema": {
              "default": 1,
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "description": "The number of results to return in a page",
            "in": "query",
            "name": "pageSize",
            "required": false,
            "schema": {
              "default": 25,
              "format": "int32",
              "maximum": 100,
              "minimum": 1,
              "type": "integer"
            }
          },
          {
            "description": "The Payor ID",
            "in": "query",
            "name": "payorId",
            "required": true,
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebhooksResponse"
                }
              }
            },
            "description": "Webhook response"
          },
          "400": {
            "description": "Invalid Request Parameters"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_401"
                }
              }
            },
            "description": "Invalid access token. May be expired or invalid"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_403"
                }
              }
            },
            "description": "The authentication does not have permissions to access the resource\nThis usually occurs when there is a valid authentication instance (client or user) but they do not have the required permissions\n"
          }
        },
        "summary": "List the details about the webhooks for the given payor.",
        "tags": [
          "Webhooks"
        ],
        "x-code-samples": [
          {
            "lang": "shell",
            "source": "$ curl 'https://api.sandbox.velopayments.com/v1/webhooks?payorId=a2967711-df07-41e5-b5ea-f563088911c6' -i -X GET \\\n    -H 'Authorization: Bearer 757a7dbf-2afb-45ec-877c-2aa3857c8e08'\n"
          }
        ]
      },
      "post": {
        "description": "Create Webhook",
        "operationId": "createWebhookV1",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateWebhookRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Webhook Created",
            "headers": {
              "Location": {
                "description": "Reference to Webhook object",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_400"
                }
              }
            },
            "description": "Invalid request. See Error message payload for details of failure"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_401"
                }
              }
            },
            "description": "Invalid access token. May be expired or invalid"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_403"
                }
              }
            },
            "description": "The authentication does not have permissions to access the resource\nThis usually occurs when there is a valid authentication instance (client or user) but they do not have the required permissions\n"
          }
        },
        "summary": "Create Webhook",
        "tags": [
          "Webhooks"
        ]
      },
      "summary": "List Webhooks"
    },
    "/v1/webhooks/{webhookId}": {
      "description": "Get details about the given webhook.",
      "get": {
        "description": "Get details about the given webhook.",
        "operationId": "getWebhookV1",
        "parameters": [
          {
            "description": "Webhook id",
            "in": "path",
            "name": "webhookId",
            "required": true,
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebhookResponse"
                }
              }
            },
            "description": "Webhook response"
          },
          "400": {
            "description": "Bad Request, Invalid path parameter"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_401"
                }
              }
            },
            "description": "Invalid access token. May be expired or invalid"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_403"
                }
              }
            },
            "description": "The authentication does not have permissions to access the resource\nThis usually occurs when there is a valid authentication instance (client or user) but they do not have the required permissions\n"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_404"
                }
              }
            },
            "description": "The resource was not found or is no longer available\n"
          }
        },
        "summary": "Get details about the given webhook.",
        "tags": [
          "Webhooks"
        ],
        "x-code-samples": [
          {
            "lang": "shell",
            "source": "$ curl 'https://api.sandbox.velopayments.com/v1/webhooks/126895a8-ba3d-44e8-9b34-84ee579cee7a' -i -X GET \\\n    -H 'Authorization: Bearer a016f840-dafc-4b10-95f5-70ecc75a02d1'\n"
          }
        ]
      },
      "post": {
        "description": "Update Webhook",
        "operationId": "updateWebhookV1",
        "parameters": [
          {
            "description": "Webhook id",
            "in": "path",
            "name": "webhookId",
            "required": true,
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateWebhookRequest"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Webhook Updated"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_400"
                }
              }
            },
            "description": "Invalid request. See Error message payload for details of failure"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_401"
                }
              }
            },
            "description": "Invalid access token. May be expired or invalid"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_403"
                }
              }
            },
            "description": "The authentication does not have permissions to access the resource\nThis usually occurs when there is a valid authentication instance (client or user) but they do not have the required permissions\n"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_404"
                }
              }
            },
            "description": "The resource was not found or is no longer available\n"
          }
        },
        "summary": "Update Webhook",
        "tags": [
          "Webhooks"
        ]
      },
      "summary": "Get Webhook"
    },
    "/v1/webhooks/{webhookId}/ping": {
      "description": "Trigger an immediate ping notification to the webhook",
      "post": {
        "operationId": "pingWebhookV1",
        "parameters": [
          {
            "description": "Webhook id",
            "in": "path",
            "name": "webhookId",
            "required": true,
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          }
        ],
        "responses": {
          "202": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PingResponse"
                }
              }
            },
            "description": "Send ping"
          },
          "400": {
            "description": "Bad Request, Invalid path parameter"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_401"
                }
              }
            },
            "description": "Invalid access token. May be expired or invalid"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_403"
                }
              }
            },
            "description": "The authentication does not have permissions to access the resource\nThis usually occurs when there is a valid authentication instance (client or user) but they do not have the required permissions\n"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_404"
                }
              }
            },
            "description": "The resource was not found or is no longer available\n"
          }
        },
        "tags": [
          "Webhooks"
        ]
      },
      "summary": "Ping Webhook"
    }
  },
  "components": {
    "schemas": {
      "Notification": {
        "properties": {
          "apiVersion": {
            "description": "The API version of the notification schema",
            "example": "1",
            "type": "string"
          },
          "sequenceNumber": {
            "description": "This is a payor specific sequence number starting at 1 for the first notification sent",
            "example": 1234,
            "format": "int64",
            "type": "integer"
          },
          "category": {
            "description": "The category that the notification relates to. One of \"payment\", \"payee\", \"debit\" or \"system\"",
            "example": "payment",
            "type": "string"
          },
          "eventName": {
            "description": "The name of event that led to this notification",
            "example": "payment.accepted",
            "type": "string"
          },
          "source": {
            "description": "One of the available set of source event payloads",
            "discriminator": {
              "mapping": {
                "ping": "#/components/schemas/Ping",
                "payment_status_changed": "#/components/schemas/PaymentStatusChanged",
                "payment_rejected_or_returned": "#/components/schemas/PaymentRejectedOrReturned",
                "onboarding_status_changed": "#/components/schemas/OnboardingStatusChanged",
                "payable_status_changed": "#/components/schemas/PayableStatusChanged",
                "payee_details_changed": "#/components/schemas/PayeeDetailsChanged",
                "debit_status_changed": "#/components/schemas/DebitStatusChanged",
                "payor_funding_detected": "#/components/schemas/PayorFundingDetected"
              },
              "propertyName": "sourceType"
            },
            "example": {
              "type": "payment_status_changed",
              "eventId": "270ab907-27ec-4b83-8028-0ff432bbdec4",
              "createdAt": "2020-06-18T15:09:42.000Z",
              "paymentId": "cbd9280f-8fde-4190-b014-979d88f3ec54",
              "payoutPayorIds": {
                "submittingPayorId": "ac207f97-663c-4429-9d57-ba5b35d6672d",
                "payoutFromPayorId": "ac207f97-663c-4429-9d57-ba5b35d6672d",
                "payoutToPayorId": "ac207f97-663c-4429-9d57-ba5b35d6672d"
              },
              "payorPaymentId": "ourpayment-id12345",
              "status": "ACCEPTED"
            },
            "oneOf": [
              {
                "$ref": "#/components/schemas/Ping"
              },
              {
                "$ref": "#/components/schemas/PaymentStatusChanged"
              },
              {
                "$ref": "#/components/schemas/PaymentRejectedOrReturned"
              },
              {
                "$ref": "#/components/schemas/OnboardingStatusChanged"
              },
              {
                "$ref": "#/components/schemas/PayableStatusChanged"
              },
              {
                "$ref": "#/components/schemas/PayeeDetailsChanged"
              },
              {
                "$ref": "#/components/schemas/DebitStatusChanged"
              },
              {
                "$ref": "#/components/schemas/PayorFundingDetected"
              }
            ]
          }
        },
        "required": [
          "apiVersion",
          "category",
          "eventName",
          "sequenceNumber"
        ],
        "type": "object"
      },
      "SourceEvent": {
        "description": "Base type for each source event payload",
        "properties": {
          "sourceType": {
            "description": "OA3 Schema type name for the source info which is used as the discriminator value to ensure that data binding works correctly",
            "example": "payment_status_changed",
            "type": "string"
          },
          "eventId": {
            "description": "UUID id of the source event in the Velo platform",
            "example": "270ab907-27ec-4b83-8028-0ff432bbdec4",
            "format": "uuid",
            "type": "string"
          },
          "createdAt": {
            "description": "ISO8601 timestamp indicating when the source event was created",
            "example": "2020-06-18T15:09:42.000Z",
            "format": "date-time",
            "type": "string"
          }
        },
        "required": [
          "createdAt",
          "eventId",
          "sourceType"
        ],
        "type": "object"
      },
      "Ping": {
        "allOf": [
          {
            "$ref": "#/components/schemas/SourceEvent"
          }
        ],
        "description": "Ping event for testing the webhook integration. Can be initiated via the Web UI."
      },
      "PaymentEvent": {
        "allOf": [
          {
            "$ref": "#/components/schemas/SourceEvent"
          },
          {
            "$ref": "#/components/schemas/PaymentEvent_allOf"
          }
        ],
        "description": "Base type for all Payment Events"
      },
      "PaymentStatusChanged": {
        "allOf": [
          {
            "$ref": "#/components/schemas/PaymentEvent"
          },
          {
            "$ref": "#/components/schemas/PaymentStatusChanged_allOf"
          }
        ],
        "description": "Base type for all payment status changed events"
      },
      "PaymentRejectedOrReturned": {
        "allOf": [
          {
            "$ref": "#/components/schemas/PaymentStatusChanged"
          },
          {
            "$ref": "#/components/schemas/PaymentRejectedOrReturned_allOf"
          }
        ],
        "description": "Base type for all rejection or return payment events"
      },
      "PayoutPayorIds": {
        "description": "Holder for all payor ids associated with a Payout",
        "properties": {
          "submittingPayorId": {
            "description": "The ID of the Payor that is submitting the payout",
            "example": "ac207f97-663c-4429-9d57-ba5b35d6672d",
            "format": "uuid",
            "type": "string"
          },
          "payoutFromPayorId": {
            "description": "The ID of the Payor providing the source account for the payout",
            "example": "35198f08-1c7b-4a91-8921-cd760ed92bca",
            "format": "uuid",
            "type": "string"
          },
          "payoutToPayorId": {
            "description": "The ID of the Payor that owns the Payee (on behalf of)",
            "example": "3eb99144-6ebf-4b02-9483-ad86b2ff1bca",
            "format": "uuid",
            "type": "string"
          }
        },
        "required": [
          "payoutFromPayorId",
          "payoutToPayorId",
          "submittingPayorId"
        ],
        "type": "object"
      },
      "PayeeEvent": {
        "allOf": [
          {
            "$ref": "#/components/schemas/SourceEvent"
          },
          {
            "$ref": "#/components/schemas/PayeeEvent_allOf"
          }
        ],
        "description": "Base type for all Payee Events"
      },
      "OnboardingStatusChanged": {
        "allOf": [
          {
            "$ref": "#/components/schemas/PayeeEvent"
          },
          {
            "type": "object"
          }
        ],
        "description": "Base type for all onboarding status changed events"
      },
      "PayableStatusChanged": {
        "allOf": [
          {
            "$ref": "#/components/schemas/PayeeEvent"
          },
          {
            "type": "object"
          }
        ],
        "description": "Base type for all payable status changed events"
      },
      "PayeeDetailsChanged": {
        "allOf": [
          {
            "$ref": "#/components/schemas/PayeeEvent"
          },
          {
            "type": "object"
          }
        ],
        "description": "Base type for all payee details changed events"
      },
      "DebitEvent": {
        "allOf": [
          {
            "$ref": "#/components/schemas/SourceEvent"
          },
          {
            "$ref": "#/components/schemas/DebitEvent_allOf"
          }
        ],
        "description": "Base type for all Debit Events"
      },
      "DebitStatusChanged": {
        "allOf": [
          {
            "$ref": "#/components/schemas/DebitEvent"
          },
          {
            "$ref": "#/components/schemas/DebitStatusChanged_allOf"
          }
        ],
        "description": "Base type for all debit status changed events"
      },
      "FundingEvent": {
        "allOf": [
          {
            "$ref": "#/components/schemas/SourceEvent"
          },
          {
            "type": "object"
          }
        ],
        "description": "Base type for all Funding Events"
      },
      "PayorFundingDetected": {
        "allOf": [
          {
            "$ref": "#/components/schemas/FundingEvent"
          },
          {
            "$ref": "#/components/schemas/PayorFundingDetected_allOf"
          }
        ],
        "description": "Notification of funding received on behalf of payor."
      },
      "AuthResponse": {
        "example": {
          "access_token": "IwOGYzYTlmM2YxOTQ5MGE3YmNmMDFkNTVk",
          "refresh_token": "IwOGYzYTlmM2YxOTQ5MGE3YmNmMDFkNTVk",
          "scope": "example_scope",
          "token_type": "bearer",
          "expires_in": 1799,
          "entityIds": [
            "entityIds",
            "entityIds"
          ]
        },
        "properties": {
          "access_token": {
            "example": "IwOGYzYTlmM2YxOTQ5MGE3YmNmMDFkNTVk",
            "type": "string"
          },
          "token_type": {
            "example": "bearer",
            "type": "string"
          },
          "expires_in": {
            "example": 1799,
            "type": "number"
          },
          "refresh_token": {
            "example": "IwOGYzYTlmM2YxOTQ5MGE3YmNmMDFkNTVk",
            "type": "string"
          },
          "scope": {
            "example": "example_scope",
            "type": "string"
          },
          "entityIds": {
            "items": {
              "type": "string"
            },
            "type": "array"
          }
        },
        "required": [
          "access_token",
          "token_type"
        ],
        "type": "object"
      },
      "Error": {
        "properties": {
          "errorMessage": {
            "description": "English language message indicating the nature of the error",
            "example": "size must be between 0 and 10",
            "type": "string"
          },
          "errorCode": {
            "description": "Unique numeric code that can be used for switching client behavior or to drive translated or customised error messages",
            "example": "20110003",
            "type": "string"
          },
          "localisationDetails": {
            "$ref": "#/components/schemas/LocalisationDetails"
          },
          "location": {
            "description": "the property or object that caused the error",
            "example": "firstName",
            "type": "string"
          },
          "locationType": {
            "deprecated": true,
            "description": "the location type in the request that was the cause of the error\n",
            "enum": [
              "requestBody",
              "queryParam",
              "requestParam",
              "header",
              "pathParam"
            ],
            "example": "requestBody",
            "type": "string"
          },
          "reasonCode": {
            "deprecated": true,
            "description": "a camel-cased string that can be used by clients to localise client error messages (deprecated)",
            "example": "validationError",
            "type": "string"
          },
          "errorData": {
            "$ref": "#/components/schemas/ErrorData"
          }
        },
        "type": "object"
      },
      "ResetPasswordRequest": {
        "example": {
          "email": "foo@example.com"
        },
        "properties": {
          "email": {
            "description": "the email address of the user requesting the reset password",
            "example": "foo@example.com",
            "format": "email",
            "type": "string"
          }
        },
        "required": [
          "email"
        ],
        "type": "object"
      },
      "AccessTokenValidationRequest": {
        "example": {
          "otp": "123456"
        },
        "properties": {
          "otp": {
            "description": "an OTP either sent via sms or generated by a registered MFA device",
            "example": "123456",
            "maxLength": 64,
            "minLength": 6,
            "type": "string"
          }
        },
        "required": [
          "otp"
        ],
        "type": "object"
      },
      "AccessTokenResponse": {
        "example": {
          "access_token": "9b58410b-e1b7-4f90-bebb-7e09c5427020",
          "refresh_token": "c3d0f771-0997-4814-84e3-09690208545a",
          "user_info": {
            "mfa_details": {
              "mfa_type": "TOTP",
              "verified": true
            },
            "user_id": "39976ee5-dc4c-4b21-a966-a04fa71ef9e1",
            "userType": "PAYOR"
          },
          "scope": "https://api.velopayments.com/scopes/auth/users",
          "token_type": "bearer",
          "expires_in": 1800,
          "entityIds": [
            "ed89eaa0-4450-4916-a4ff-62a328d60bd6"
          ]
        },
        "properties": {
          "access_token": {
            "description": "Bearer token used in headers to access secure endpoints\n",
            "example": "9b58410b-e1b7-4f90-bebb-7e09c5427020",
            "type": "string"
          },
          "token_type": {
            "default": "bearer",
            "description": "the type of the token",
            "example": "bearer",
            "type": "string"
          },
          "refresh_token": {
            "description": "can be used to obtain a new access token",
            "example": "c3d0f771-0997-4814-84e3-09690208545a",
            "type": "string"
          },
          "expires_in": {
            "description": "The lifetime in seconds of the access token",
            "example": 1800,
            "type": "integer"
          },
          "scope": {
            "description": "the scope of the access token",
            "example": "https://api.velopayments.com/scopes/auth/users",
            "type": "string"
          },
          "user_info": {
            "$ref": "#/components/schemas/UserInfo"
          },
          "entityIds": {
            "description": "If the user is a payee then the payeeId<P>\nIf the user is a payor then the payorId\n",
            "example": [
              "ed89eaa0-4450-4916-a4ff-62a328d60bd6"
            ],
            "items": {
              "type": "string"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "UserType": {
        "enum": [
          "BACKOFFICE",
          "PAYOR",
          "PAYEE"
        ],
        "example": "PAYOR",
        "type": "string"
      },
      "UserStatus": {
        "description": "The status of the user\nwhen the user has been invited but not yet enrolled they will have a PENDING status\n",
        "enum": [
          "ENABLED",
          "DISABLED",
          "PENDING"
        ],
        "example": "ENABLED",
        "type": "string"
      },
      "PayeeType": {
        "enum": [
          "COMPANY",
          "INDIVIDUAL"
        ],
        "example": "COMPANY",
        "type": "string"
      },
      "PagedUserResponse": {
        "description": "List Users Response Object",
        "example": {
          "links": [
            {
              "rel": "first",
              "href": "https://api.sandbox.velopayments.com/v2/users??type=PAYOR&page=1&pageSize=10"
            },
            {
              "rel": "first",
              "href": "https://api.sandbox.velopayments.com/v2/users??type=PAYOR&page=1&pageSize=10"
            }
          ],
          "page": {
            "numberOfElements": 12,
            "totalPages": 2,
            "pageSize": 25,
            "page": 1,
            "totalElements": 33
          },
          "content": [
            {
              "lastName": "Doe",
              "companyName": "Acme Corp",
              "roles": [
                "payor.admin"
              ],
              "lockedOutTimestamp": "2000-01-23T04:56:07.000Z",
              "smsNumber": "11235555555",
              "entityId": "7fffa261-ac68-49e6-b605-d24a444d9206",
              "mfaStatus": "REGISTERED",
              "firstName": "John",
              "primaryContactNumber": "11235555555",
              "mfaType": "TOTP",
              "lockedOut": true,
              "id": "8bbf301c-948f-4445-b411-357eec53e441",
              "userType": "PAYOR",
              "email": "foo@example.com",
              "secondaryContactNumber": "11235555550",
              "status": "ENABLED"
            },
            {
              "lastName": "Doe",
              "companyName": "Acme Corp",
              "roles": [
                "payor.admin"
              ],
              "lockedOutTimestamp": "2000-01-23T04:56:07.000Z",
              "smsNumber": "11235555555",
              "entityId": "7fffa261-ac68-49e6-b605-d24a444d9206",
              "mfaStatus": "REGISTERED",
              "firstName": "John",
              "primaryContactNumber": "11235555555",
              "mfaType": "TOTP",
              "lockedOut": true,
              "id": "8bbf301c-948f-4445-b411-357eec53e441",
              "userType": "PAYOR",
              "email": "foo@example.com",
              "secondaryContactNumber": "11235555550",
              "status": "ENABLED"
            }
          ]
        },
        "properties": {
          "page": {
            "$ref": "#/components/schemas/PagedUserResponse_page"
          },
          "links": {
            "items": {
              "$ref": "#/components/schemas/PagedUserResponse_links"
            },
            "type": "array"
          },
          "content": {
            "items": {
              "$ref": "#/components/schemas/UserResponse"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "UserResponse": {
        "example": {
          "lastName": "Doe",
          "companyName": "Acme Corp",
          "roles": [
            "payor.admin"
          ],
          "lockedOutTimestamp": "2000-01-23T04:56:07.000Z",
          "smsNumber": "11235555555",
          "entityId": "7fffa261-ac68-49e6-b605-d24a444d9206",
          "mfaStatus": "REGISTERED",
          "firstName": "John",
          "primaryContactNumber": "11235555555",
          "mfaType": "TOTP",
          "lockedOut": true,
          "id": "8bbf301c-948f-4445-b411-357eec53e441",
          "userType": "PAYOR",
          "email": "foo@example.com",
          "secondaryContactNumber": "11235555550",
          "status": "ENABLED"
        },
        "properties": {
          "id": {
            "description": "The id of the user",
            "example": "8bbf301c-948f-4445-b411-357eec53e441",
            "format": "uuid",
            "type": "string"
          },
          "status": {
            "description": "The status of the user\nwhen the user has been invited but not yet enrolled they will have a PENDING status\n",
            "enum": [
              "ENABLED",
              "DISABLED",
              "PENDING"
            ],
            "example": "ENABLED",
            "type": "string"
          },
          "email": {
            "description": "the email address of the user",
            "example": "foo@example.com",
            "format": "email",
            "type": "string"
          },
          "smsNumber": {
            "description": "The phone number of a device that the user can receive sms messages on\n",
            "example": "11235555555",
            "pattern": "^\\+[1-9]\\d{1,14}$",
            "type": "string"
          },
          "primaryContactNumber": {
            "description": "The main contact number for the user\n",
            "example": "11235555555",
            "pattern": "^\\+[1-9]\\d{1,14}$",
            "type": "string"
          },
          "secondaryContactNumber": {
            "description": "The secondary contact number for the user\n",
            "example": "11235555550",
            "pattern": "^\\+[1-9]\\d{1,14}$",
            "type": "string"
          },
          "firstName": {
            "example": "John",
            "maxLength": 128,
            "minLength": 1,
            "type": "string"
          },
          "lastName": {
            "example": "Doe",
            "maxLength": 128,
            "minLength": 1,
            "type": "string"
          },
          "entityId": {
            "description": "The payorId or payeeId or null if the user is not a payor or payee user\n",
            "example": "7fffa261-ac68-49e6-b605-d24a444d9206",
            "format": "uuid",
            "type": "string"
          },
          "companyName": {
            "description": "The payor or payee company name or null if the user is not a payor or payee user\n",
            "example": "Acme Corp",
            "maxLength": 128,
            "minLength": 1,
            "type": "string"
          },
          "roles": {
            "description": "The role(s) for the user\n",
            "example": [
              "payor.admin"
            ],
            "items": {
              "$ref": "#/components/schemas/Role"
            },
            "minItems": 1,
            "type": "array"
          },
          "userType": {
            "description": "Indicates the type of user. Could be BACKOFFICE, PAYOR or PAYEE.",
            "enum": [
              "BACKOFFICE",
              "PAYOR",
              "PAYEE"
            ],
            "example": "PAYOR",
            "type": "string"
          },
          "mfaType": {
            "description": "The type of the MFA device",
            "enum": [
              "SMS",
              "YUBIKEY",
              "TOTP"
            ],
            "example": "TOTP",
            "type": "string"
          },
          "mfaStatus": {
            "description": "The status of the MFA device",
            "enum": [
              "REGISTERED",
              "UNREGISTERED"
            ],
            "example": "REGISTERED",
            "type": "string"
          },
          "lockedOut": {
            "description": "If true the user is currently locked out and unable to log in",
            "example": true,
            "type": "boolean"
          },
          "lockedOutTimestamp": {
            "description": "A timestamp showing when the user was locked out\nIf null then the user is not currently locked out\n",
            "format": "date-time",
            "nullable": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "InviteUserRequest": {
        "example": {
          "firstName": "John",
          "lastName": "Doe",
          "primaryContactNumber": "11235555555",
          "mfaType": "TOTP",
          "roles": [
            "velo.payor.admin"
          ],
          "smsNumber": "11235555555",
          "entityId": "7fffa261-ac68-49e6-b605-d24a444d9206",
          "userType": "PAYEE",
          "email": "foo@example.com",
          "secondaryContactNumber": "11235555550",
          "verificationCode": "123456"
        },
        "properties": {
          "email": {
            "description": "the email address of the invited user",
            "example": "foo@example.com",
            "format": "email",
            "type": "string"
          },
          "mfaType": {
            "description": "<p>The MFA type that the user will use</p>\n<p>The type may be conditional on the role(s) the user has</p>\n",
            "enum": [
              "SMS",
              "YUBIKEY",
              "TOTP"
            ],
            "example": "TOTP",
            "type": "string"
          },
          "smsNumber": {
            "description": "The phone number of a device that the user can receive sms messages on\n",
            "example": "11235555555",
            "pattern": "^\\+[1-9]\\d{1,14}$",
            "type": "string"
          },
          "primaryContactNumber": {
            "description": "The main contact number for the user\n",
            "example": "11235555555",
            "pattern": "^\\+[1-9]\\d{1,14}$",
            "type": "string"
          },
          "secondaryContactNumber": {
            "description": "The secondary contact number for the user\n",
            "example": "11235555550",
            "nullable": true,
            "pattern": "^\\+[1-9]\\d{1,14}$",
            "type": "string"
          },
          "roles": {
            "description": "The role(s) for the user\nThe role must exist\nThe role can be a custom role or a system role but the invoker must have the permissions to assign the role\nSystem roles are: velo.backoffice.admin, velo.payor.master_admin, velo.payor.admin, velo.payor.support, velo.payee.admin, velo.payee.support\n",
            "example": [
              "velo.payor.admin"
            ],
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "firstName": {
            "example": "John",
            "maxLength": 128,
            "minLength": 1,
            "type": "string"
          },
          "lastName": {
            "example": "Doe",
            "maxLength": 128,
            "minLength": 1,
            "type": "string"
          },
          "entityId": {
            "description": "The payorId or payeeId or null if the user is a backoffice admin\n",
            "example": "7fffa261-ac68-49e6-b605-d24a444d9206",
            "format": "uuid",
            "nullable": true,
            "type": "string"
          },
          "userType": {
            "description": "Will default to PAYOR if not provided but entityId is provided",
            "enum": [
              "BACKOFFICE",
              "PAYOR",
              "PAYEE"
            ],
            "example": "PAYEE",
            "type": "string"
          },
          "verificationCode": {
            "description": "Optional property that MUST be suppied when manually verifying a user\nThe user's smsNumber is registered via a separate endpoint and an OTP sent to them\n",
            "example": "123456",
            "maxLength": 6,
            "minLength": 6,
            "nullable": true,
            "type": "string"
          }
        },
        "required": [
          "email",
          "mfaType",
          "primaryContactNumber",
          "roles",
          "smsNumber"
        ],
        "type": "object"
      },
      "RoleUpdateRequest": {
        "example": {
          "roles": [
            "payor.admin"
          ],
          "verificationCode": "123456"
        },
        "properties": {
          "roles": {
            "description": "<p>The role(s) for the user</p>\n<p>The role must exist</p>\n<p>The role can be a custom role or a system role but the invoker must have the permissions to assign the role</p>\n<p>System roles are: backoffice.admin, payor.master_admin, payor.admin, payor.support</p>\n",
            "example": [
              "payor.admin"
            ],
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "verificationCode": {
            "description": "<p>Optional property that MUST be suppied when manually verifying a user</p>\n<p>The user's smsNumber is registered via a separate endpoint and an OTP sent to them</p>\n",
            "example": "123456",
            "maxLength": 6,
            "minLength": 6,
            "nullable": true,
            "type": "string"
          }
        },
        "required": [
          "roles"
        ],
        "type": "object"
      },
      "UnregisterMFARequest": {
        "example": {
          "mfaType": "TOTP",
          "verificationCode": "123456"
        },
        "properties": {
          "mfaType": {
            "description": "The type of the MFA device",
            "enum": [
              "YUBIKEY",
              "TOTP"
            ],
            "example": "TOTP",
            "type": "string"
          },
          "verificationCode": {
            "description": "<p>Optional property that MUST be suppied when manually verifying a user</p>\n<p>The user's smsNumber is registered via a separate endpoint and an OTP sent to them</p>\n",
            "example": "123456",
            "maxLength": 6,
            "minLength": 6,
            "nullable": true,
            "type": "string"
          }
        },
        "required": [
          "mfaType"
        ],
        "type": "object"
      },
      "ResendTokenRequest": {
        "example": {
          "tokenType": "INVITE_MFA_USER",
          "verificationCode": "123456"
        },
        "properties": {
          "tokenType": {
            "description": "The type of the token to resend",
            "enum": [
              "INVITE_MFA_USER",
              "MFA_REGISTRATION"
            ],
            "example": "INVITE_MFA_USER",
            "type": "string"
          },
          "verificationCode": {
            "description": "<p>Optional property that MUST be suppied when manually verifying a user</p>\n<p>The user's smsNumber is registered via a separate endpoint and an OTP sent to them</p>\n",
            "example": "123456",
            "maxLength": 6,
            "minLength": 6,
            "nullable": true,
            "type": "string"
          }
        },
        "required": [
          "tokenType"
        ],
        "type": "object"
      },
      "UserDetailsUpdateRequest": {
        "description": "<p>All properties are optional</p>\n<p>Only provided properties will be updated</p>\n<p>Use null to null out a property that is allowed to be nullable</p>\n",
        "example": {
          "firstName": "John",
          "lastName": "Doe",
          "primaryContactNumber": "11235555555",
          "mfaType": "TOTP",
          "smsNumber": "11235555555",
          "secondaryContactNumber": "11235555550",
          "email": "foo@example.com",
          "verificationCode": "123456"
        },
        "properties": {
          "primaryContactNumber": {
            "description": "The main contact number for the user\n",
            "example": "11235555555",
            "nullable": true,
            "pattern": "^\\+[1-9]\\d{1,14}$",
            "type": "string"
          },
          "secondaryContactNumber": {
            "description": "The secondary contact number for the user\n",
            "example": "11235555550",
            "nullable": true,
            "pattern": "^\\+[1-9]\\d{1,14}$",
            "type": "string"
          },
          "firstName": {
            "example": "John",
            "maxLength": 128,
            "minLength": 1,
            "nullable": true,
            "type": "string"
          },
          "lastName": {
            "example": "Doe",
            "maxLength": 128,
            "minLength": 1,
            "nullable": true,
            "type": "string"
          },
          "email": {
            "description": "the email address of the user",
            "example": "foo@example.com",
            "format": "email",
            "nullable": true,
            "type": "string"
          },
          "smsNumber": {
            "description": "The phone number of a device that the user can receive sms messages on\n",
            "example": "11235555555",
            "nullable": true,
            "pattern": "^\\+[1-9]\\d{1,14}$",
            "type": "string"
          },
          "mfaType": {
            "$ref": "#/components/schemas/MFAType"
          },
          "verificationCode": {
            "description": "<p>Optional property that MUST be suppied when manually verifying a user</p>\n<p>The user's smsNumber is registered via a separate endpoint and an OTP sent to them</p>\n",
            "example": "123456",
            "maxLength": 6,
            "minLength": 6,
            "nullable": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "RegisterSmsRequest": {
        "example": {
          "smsNumber": "11235555555"
        },
        "properties": {
          "smsNumber": {
            "description": "The phone number of a device that the user can receive sms messages on\n",
            "example": "11235555555",
            "pattern": "^\\+[1-9]\\d{1,14}$",
            "type": "string"
          }
        },
        "required": [
          "smsNumber"
        ],
        "type": "object"
      },
      "PayeeUserSelfUpdateRequest": {
        "description": "<p>All properties are optional</p>\n<p>Only provided properties will be updated</p>\n<p>Use null to null out a property that is allowed to be nullable</p>\n",
        "example": {
          "firstName": "John",
          "lastName": "Doe",
          "primaryContactNumber": "11235555555",
          "smsNumber": "11235555555",
          "secondaryContactNumber": "11235555550",
          "email": "foo@example.com"
        },
        "properties": {
          "primaryContactNumber": {
            "description": "The main contact number for the user\n",
            "example": "11235555555",
            "nullable": true,
            "pattern": "^\\+[1-9]\\d{1,14}$",
            "type": "string"
          },
          "secondaryContactNumber": {
            "description": "The secondary contact number for the user\n",
            "example": "11235555550",
            "nullable": true,
            "pattern": "^\\+[1-9]\\d{1,14}$",
            "type": "string"
          },
          "firstName": {
            "example": "John",
            "maxLength": 128,
            "minLength": 1,
            "nullable": true,
            "type": "string"
          },
          "lastName": {
            "example": "Doe",
            "maxLength": 128,
            "minLength": 1,
            "nullable": true,
            "type": "string"
          },
          "email": {
            "description": "the email address of the user",
            "example": "foo@example.com",
            "format": "email",
            "nullable": true,
            "type": "string"
          },
          "smsNumber": {
            "description": "The phone number of a device that the user can receive sms messages on\n",
            "example": "11235555555",
            "nullable": true,
            "pattern": "^\\+[1-9]\\d{1,14}$",
            "type": "string"
          }
        },
        "type": "object"
      },
      "SelfMFATypeUnregisterRequest": {
        "example": {
          "mfaType": "TOTP"
        },
        "properties": {
          "mfaType": {
            "description": "The type of the MFA device",
            "enum": [
              "SMS",
              "YUBIKEY",
              "TOTP"
            ],
            "example": "TOTP",
            "type": "string"
          }
        },
        "required": [
          "mfaType"
        ],
        "type": "object"
      },
      "SelfUpdatePasswordRequest": {
        "example": {
          "oldPassword": "My_current_password",
          "newPassword": "My_new_password"
        },
        "properties": {
          "oldPassword": {
            "description": "The user's current password",
            "example": "My_current_password",
            "maxLength": 128,
            "minLength": 8,
            "type": "string"
          },
          "newPassword": {
            "description": "The new password",
            "example": "My_new_password",
            "maxLength": 128,
            "minLength": 8,
            "type": "string"
          }
        },
        "required": [
          "newPassword",
          "oldPassword"
        ],
        "type": "object"
      },
      "PasswordRequest": {
        "example": {
          "password": "My_strong_password"
        },
        "properties": {
          "password": {
            "description": "a password that passes validation",
            "example": "My_strong_password",
            "maxLength": 128,
            "minLength": 8,
            "type": "string"
          }
        },
        "required": [
          "password"
        ],
        "type": "object"
      },
      "ValidatePasswordResponse": {
        "example": {
          "valid": true,
          "score": 2,
          "warning": "Historic Password",
          "suggestions": [
            "[password has been used before]",
            "[password has been used before]"
          ]
        },
        "properties": {
          "score": {
            "description": "More secure passwords are given a higher score. <P>\nFor a password to be acceptable for use in Velo, it must score at least 3\n",
            "example": 2,
            "format": "int32",
            "maximum": 4,
            "minimum": 0,
            "type": "integer"
          },
          "valid": {
            "description": "if true then the password can be accepted",
            "type": "boolean"
          },
          "warning": {
            "description": "Any warning message as a reason for the given score.",
            "example": "Historic Password",
            "type": "string"
          },
          "suggestions": {
            "items": {
              "description": "Any suggested changes to password text which would make the password more secure\n",
              "example": "[password has been used before]",
              "type": "string"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "PayorV2": {
        "example": {
          "primaryContactName": "Joe Buck",
          "payeeGracePeriodProcessingEnabled": true,
          "supportContact": "support@example.com",
          "payorXid": "ABC_201234",
          "includesReports": true,
          "managingPayees": true,
          "allowsLanguageChoice": true,
          "language": "EN",
          "provider": "provider",
          "maxMasterPayorAdmins": 6,
          "transmissionTypes": {
            "ACH": true,
            "SAME_DAY_ACH": true,
            "WIRE": true
          },
          "manualLockout": true,
          "paymentRails": "paymentRails",
          "payorId": "046b6c7f-0b8a-43b9-b35d-6489e6daee91",
          "primaryContactEmail": "joe.buck@example.com",
          "usdTxnValueReportingThreshold": 1000000,
          "payorName": "Example, Corp",
          "address": {
            "country": "US",
            "countyOrProvince": "FL",
            "line4": "line4",
            "city": "Key West",
            "line3": "line3",
            "line2": "line2",
            "line1": "500 Duval St",
            "zipOrPostcode": "33945"
          },
          "openBankingEnabled": true,
          "dbaName": "Some Biz",
          "primaryContactPhone": "123-123-1234",
          "payeeGracePeriodDays": 0,
          "reminderEmailsOptOut": true,
          "collectiveAlias": "Payee",
          "kycState": "PASSED_KYC",
          "wuCustomerId": "wuCustomerId",
          "remoteSystemIds": [
            "REMOTE_SYSTEM_ID",
            "REMOTE_SYSTEM_ID"
          ]
        },
        "properties": {
          "payorId": {
            "format": "uuid",
            "readOnly": true,
            "type": "string"
          },
          "payorName": {
            "description": "The name of the payor.",
            "example": "Example, Corp",
            "type": "string"
          },
          "payorXid": {
            "description": "A unique identifier that an external system uses to reference the payor in their system",
            "example": "ABC_201234",
            "type": "string"
          },
          "provider": {
            "description": "The source of the payorXid, default is null which means Velo",
            "type": "string"
          },
          "address": {
            "$ref": "#/components/schemas/PayorAddressV2"
          },
          "primaryContactName": {
            "description": "Name of primary contact for the payor.",
            "example": "Joe Buck",
            "type": "string"
          },
          "primaryContactPhone": {
            "description": "Primary contact phone number for the payor.",
            "example": "123-123-1234",
            "type": "string"
          },
          "primaryContactEmail": {
            "description": "Primary contact email for the payor.",
            "example": "joe.buck@example.com",
            "format": "email",
            "type": "string"
          },
          "kycState": {
            "description": "The kyc state of the payor. One of the following values: FAILED_KYC, PASSED_KYC, REQUIRES_KYC",
            "example": "PASSED_KYC",
            "readOnly": true,
            "type": "string"
          },
          "manualLockout": {
            "description": "Whether or not the payor has been manually locked by the backoffice.",
            "type": "boolean"
          },
          "openBankingEnabled": {
            "description": "Is Open Banking supported for this payor",
            "type": "boolean"
          },
          "payeeGracePeriodProcessingEnabled": {
            "description": "Whether grace period processing is enabled.",
            "readOnly": true,
            "type": "boolean"
          },
          "payeeGracePeriodDays": {
            "description": "The grace period for paying payees in days.",
            "readOnly": true,
            "type": "integer"
          },
          "collectiveAlias": {
            "description": "How the payor has chosen to refer to payees.",
            "example": "Payee",
            "type": "string"
          },
          "supportContact": {
            "description": "The payor’s support contact email address.",
            "example": "support@example.com",
            "type": "string"
          },
          "dbaName": {
            "description": "The payor’s 'Doing Business As' name.",
            "example": "Some Biz",
            "type": "string"
          },
          "allowsLanguageChoice": {
            "description": "Whether or not the payor allows language choice in the UI.",
            "type": "boolean"
          },
          "reminderEmailsOptOut": {
            "description": "Whether or not the payor has opted-out of reminder emails being sent.",
            "readOnly": true,
            "type": "boolean"
          },
          "language": {
            "description": "The payor’s language preference. Must be one of [EN, FR]",
            "example": "EN",
            "type": "string"
          },
          "includesReports": {
            "type": "boolean"
          },
          "wuCustomerId": {
            "type": "string"
          },
          "maxMasterPayorAdmins": {
            "type": "integer"
          },
          "paymentRails": {
            "description": "The id of the payment rails",
            "type": "string"
          },
          "transmissionTypes": {
            "$ref": "#/components/schemas/TransmissionTypes"
          },
          "remoteSystemIds": {
            "description": "The payor’s supported remote systems by id",
            "items": {
              "example": "REMOTE_SYSTEM_ID",
              "type": "string"
            },
            "type": "array"
          },
          "usdTxnValueReportingThreshold": {
            "description": "USD in minor units",
            "example": 1000000,
            "type": "integer"
          },
          "managingPayees": {
            "type": "boolean"
          }
        },
        "required": [
          "payorId",
          "payorName"
        ],
        "type": "object"
      },
      "ErrorResponse": {
        "description": "Error response returned by all error conditions in Velo Services",
        "properties": {
          "errors": {
            "description": "one or more errors",
            "items": {
              "$ref": "#/components/schemas/Error"
            },
            "minItems": 1,
            "type": "array"
          },
          "correlationId": {
            "description": "a unique identifier to track a request or related sequence of requests",
            "example": "ee53e01d-c078-43fd-abd4-47e92f4a06cf",
            "format": "uuid",
            "type": "string"
          },
          "httpStatusCode": {
            "description": "this will mirror the Status-Code part of the Status-Line http response header and is included for extra clarity",
            "example": 400,
            "type": "integer"
          }
        },
        "type": "object"
      },
      "PayorCreateApplicationRequest": {
        "example": {
          "name": "SAP",
          "description": "SAP Application integration"
        },
        "properties": {
          "name": {
            "description": "The name of the application.",
            "example": "SAP",
            "maxLength": 100,
            "minLength": 2,
            "type": "string"
          },
          "description": {
            "description": "Description of the application.",
            "example": "SAP Application integration",
            "maxLength": 1024,
            "minLength": 2,
            "nullable": true,
            "type": "string"
          }
        },
        "required": [
          "name"
        ],
        "type": "object"
      },
      "PayorCreateApiKeyRequest": {
        "example": {
          "roles": [
            "velo.payor.admin"
          ],
          "name": "iOS Key",
          "description": "Key for iOS mobile application"
        },
        "properties": {
          "name": {
            "description": "A name for the key.",
            "example": "iOS Key",
            "maxLength": 100,
            "minLength": 2,
            "type": "string"
          },
          "description": {
            "description": "Description of the key.",
            "example": "Key for iOS mobile application",
            "maxLength": 1024,
            "minLength": 2,
            "nullable": true,
            "type": "string"
          },
          "roles": {
            "description": "<p>A role to assign to the key.</p>\n<p>If you want your API key to have write access then assign the role velo.payor.admin</p>\n<p>A later version will change this property from a list to string</p>\n",
            "example": [
              "velo.payor.admin"
            ],
            "items": {
              "description": "Name of role",
              "enum": [
                "velo.payor.admin",
                "velo.payor.support"
              ],
              "type": "string"
            },
            "maxItems": 1,
            "minItems": 1,
            "type": "array"
          }
        },
        "required": [
          "name",
          "roles"
        ],
        "type": "object"
      },
      "PayorCreateApiKeyResponse": {
        "example": {
          "apiKey": "385d4506-e7dd-446e-a092-5f30b98e7b26",
          "apiSecret": "f25767d9-342a-48ac-a788-0a7a38ae6fb3"
        },
        "properties": {
          "apiKey": {
            "description": "API Key",
            "example": "385d4506-e7dd-446e-a092-5f30b98e7b26",
            "format": "uuid",
            "type": "string"
          },
          "apiSecret": {
            "description": "API Secret",
            "example": "f25767d9-342a-48ac-a788-0a7a38ae6fb3",
            "format": "uuid",
            "type": "string"
          }
        },
        "type": "object"
      },
      "PayorEmailOptOutRequest": {
        "example": {
          "reminderEmailsOptOut": true
        },
        "properties": {
          "reminderEmailsOptOut": {
            "type": "boolean"
          }
        },
        "required": [
          "reminderEmailsOptOut"
        ],
        "type": "object"
      },
      "PayorLogoRequest": {
        "properties": {
          "logo": {
            "format": "binary",
            "type": "string"
          }
        },
        "type": "object"
      },
      "PayorBrandingResponse": {
        "example": {
          "supportContact": "support@example.com",
          "collectiveAlias": "Contractors",
          "dbaName": "Key West Imports",
          "logoUrl": "https://images.example.com/450ecb66-df18-4d0c-b557-f718782775df/logo.png",
          "payorName": "Key West Imports, Inc"
        },
        "properties": {
          "payorName": {
            "description": "The name of the payor",
            "example": "Key West Imports, Inc",
            "type": "string"
          },
          "logoUrl": {
            "description": "<p>The URL to use for this payor’s logo</p>\n<p>This will be an immutable system-generated URL</p>\n",
            "example": "https://images.example.com/450ecb66-df18-4d0c-b557-f718782775df/logo.png",
            "format": "uri",
            "type": "string"
          },
          "collectiveAlias": {
            "description": "How the payor has chosen to refer to payees",
            "example": "Contractors",
            "nullable": true,
            "type": "string"
          },
          "supportContact": {
            "description": "The payor’s support contact address",
            "example": "support@example.com",
            "nullable": true,
            "type": "string"
          },
          "dbaName": {
            "description": "The payor’s 'Doing Business As' name",
            "example": "Key West Imports",
            "nullable": true,
            "type": "string"
          }
        },
        "required": [
          "logoUrl",
          "payorName"
        ],
        "type": "object"
      },
      "PayorLinksResponse": {
        "description": "List Payor Links Response Object",
        "example": {
          "payors": [
            {
              "payorId": "046b6c7f-0b8a-43b9-b35d-6489e6daee91",
              "kycState": "kycState",
              "primaryContactEmail": "primaryContactEmail",
              "payorName": "payorName"
            },
            {
              "payorId": "046b6c7f-0b8a-43b9-b35d-6489e6daee91",
              "kycState": "kycState",
              "primaryContactEmail": "primaryContactEmail",
              "payorName": "payorName"
            }
          ],
          "links": [
            {
              "toPayorId": "046b6c7f-0b8a-43b9-b35d-6489e6daee91",
              "linkId": "046b6c7f-0b8a-43b9-b35d-6489e6daee91",
              "fromPayorId": "046b6c7f-0b8a-43b9-b35d-6489e6daee91",
              "linkType": "linkType"
            },
            {
              "toPayorId": "046b6c7f-0b8a-43b9-b35d-6489e6daee91",
              "linkId": "046b6c7f-0b8a-43b9-b35d-6489e6daee91",
              "fromPayorId": "046b6c7f-0b8a-43b9-b35d-6489e6daee91",
              "linkType": "linkType"
            }
          ]
        },
        "properties": {
          "links": {
            "items": {
              "$ref": "#/components/schemas/PayorLinksResponse_links"
            },
            "type": "array"
          },
          "payors": {
            "items": {
              "$ref": "#/components/schemas/PayorLinksResponse_payors"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "CreatePayorLinkRequest": {
        "example": {
          "toPayorId": "046b6c7f-0b8a-43b9-b35d-6489e6daee91",
          "fromPayorId": "046b6c7f-0b8a-43b9-b35d-6489e6daee91",
          "linkType": "PARENT_OF"
        },
        "properties": {
          "fromPayorId": {
            "format": "uuid",
            "type": "string"
          },
          "linkType": {
            "enum": [
              "PARENT_OF"
            ],
            "type": "string"
          },
          "toPayorId": {
            "format": "uuid",
            "type": "string"
          }
        },
        "required": [
          "fromPayorId",
          "linkType",
          "toPayorId"
        ],
        "type": "object"
      },
      "PayeeDetailResponseV3": {
        "example": {
          "payorRefs": [
            {
              "payorId": "ba08877f-9d96-41e4-9c26-44a872d856ae",
              "invitationStatusTimestamp": "2019-01-20T09:00:00.000Z",
              "payableStatus": true,
              "invitationStatus": "invitationStatus",
              "payableIssues": [
                {
                  "code": "3",
                  "message": "payee-disabled"
                },
                {
                  "code": "3",
                  "message": "payee-disabled"
                }
              ],
              "remoteId": "uniqueIdForRemoteEntity",
              "paymentChannelId": "70faaff7-2c32-4b44-b27f-f0b6c484e6f3"
            },
            {
              "payorId": "ba08877f-9d96-41e4-9c26-44a872d856ae",
              "invitationStatusTimestamp": "2019-01-20T09:00:00.000Z",
              "payableStatus": true,
              "invitationStatus": "invitationStatus",
              "payableIssues": [
                {
                  "code": "3",
                  "message": "payee-disabled"
                },
                {
                  "code": "3",
                  "message": "payee-disabled"
                }
              ],
              "remoteId": "uniqueIdForRemoteEntity",
              "paymentChannelId": "70faaff7-2c32-4b44-b27f-f0b6c484e6f3"
            }
          ],
          "watchlistOverrideComment": "watchlist override comment",
          "country": "US",
          "cellphoneNumber": "1234567890",
          "watchlistStatus": "watchlistStatus",
          "displayName": "Bob",
          "payeeType": "payeeType",
          "kycCompletedTimestamp": "2019-01-20T09:00:00.000Z",
          "marketingOptInTimestamp": "2019-01-20T09:00:00.000Z",
          "language": "en-US",
          "watchlistOverrideExpiresAtTimestamp": "2019-01-20T09:00:00.000Z",
          "disabled": true,
          "company": {
            "taxId": "123123123",
            "name": "ABC Group Plc",
            "operatingName": "ABC Co"
          },
          "payeeId": "2aa5d7e0-2ecb-403f-8494-1865ed0454e9",
          "pausePaymentTimestamp": "2019-01-20T09:00:00.000Z",
          "email": "bob@example.com",
          "acceptTermsAndConditionsTimestamp": "2019-01-20T09:00:00.000Z",
          "disabledUpdatedTimestamp": "2019-01-20T09:00:00.000Z",
          "address": {
            "country": "US",
            "countyOrProvince": "FL",
            "line4": "line4",
            "city": "Key West",
            "line3": "line3",
            "line2": "line2",
            "line1": "500 Duval St",
            "zipOrPostcode": "33945"
          },
          "individual": {
            "name": {
              "firstName": "Bob",
              "lastName": "Smith",
              "otherNames": "A",
              "title": "Mr"
            },
            "nationalIdentification": "AB123456C",
            "dateOfBirth": "1985-01-01T00:00:00.000Z"
          },
          "created": "2019-01-20T09:00:00.000Z",
          "enhancedKycCompleted": true,
          "pausePayment": true,
          "gracePeriodEndDate": "2019-01-20T00:00:00.000+0000",
          "marketingOptInDecision": true,
          "onboardedStatus": "onboardedStatus",
          "watchlistStatusUpdatedTimestamp": "2019-01-20T09:00:00.000Z",
          "disabledComment": "reason for disabled",
          "challenge": {
            "description": "challenge description",
            "value": "challenge test"
          }
        },
        "properties": {
          "payeeId": {
            "example": "2aa5d7e0-2ecb-403f-8494-1865ed0454e9",
            "format": "uuid",
            "readOnly": true,
            "type": "string"
          },
          "payorRefs": {
            "items": {
              "$ref": "#/components/schemas/PayeePayorRefV3"
            },
            "nullable": true,
            "readOnly": true,
            "type": "array"
          },
          "email": {
            "example": "bob@example.com",
            "format": "email",
            "nullable": true,
            "type": "string"
          },
          "onboardedStatus": {
            "description": "Onboarded status. One of the following values: CREATED, INVITED, REGISTERED, ONBOARDED",
            "type": "string"
          },
          "watchlistStatus": {
            "description": "Current watchlist status. One of the following values: NONE, PENDING, REVIEW, PASSED, FAILED",
            "type": "string"
          },
          "watchlistOverrideExpiresAtTimestamp": {
            "example": "2019-01-20T09:00:00.000Z",
            "format": "date-time",
            "nullable": true,
            "type": "string"
          },
          "watchlistOverrideComment": {
            "example": "watchlist override comment",
            "type": "string"
          },
          "language": {
            "description": "An IETF BCP 47 language code which has been configured for use within this Velo environment.<BR>\nSee the /v1/supportedLanguages endpoint to list the available codes for an environment.\n",
            "example": "en-US",
            "type": "string"
          },
          "created": {
            "example": "2019-01-20T09:00:00.000Z",
            "format": "date-time",
            "type": "string"
          },
          "country": {
            "description": "Valid ISO 3166 2 character country code. See the <a href=\"https://www.iso.org/iso-3166-country-codes.html\" target=\"_blank\" a>ISO specification</a> for details.",
            "example": "US",
            "maxLength": 2,
            "minLength": 2,
            "pattern": "^[A-Z]{2}$",
            "title": "ISO 3166 2 Character Country Code",
            "type": "string"
          },
          "displayName": {
            "example": "Bob",
            "type": "string"
          },
          "payeeType": {
            "description": "Type of Payee. One of the following values: Individual, Company",
            "type": "string"
          },
          "disabled": {
            "type": "boolean"
          },
          "disabledComment": {
            "example": "reason for disabled",
            "type": "string"
          },
          "disabledUpdatedTimestamp": {
            "example": "2019-01-20T09:00:00.000Z",
            "format": "date-time",
            "type": "string"
          },
          "address": {
            "$ref": "#/components/schemas/PayeeAddressV3"
          },
          "individual": {
            "$ref": "#/components/schemas/IndividualV3"
          },
          "company": {
            "$ref": "#/components/schemas/CompanyV3"
          },
          "cellphoneNumber": {
            "example": "1234567890",
            "type": "string"
          },
          "watchlistStatusUpdatedTimestamp": {
            "example": "2019-01-20T09:00:00.000Z",
            "format": "date_time",
            "nullable": true,
            "readOnly": true,
            "type": "string"
          },
          "gracePeriodEndDate": {
            "example": "2019-01-20T00:00:00.000Z",
            "format": "date",
            "nullable": true,
            "readOnly": true,
            "type": "string"
          },
          "enhancedKycCompleted": {
            "type": "boolean"
          },
          "kycCompletedTimestamp": {
            "example": "2019-01-20T09:00:00.000Z",
            "format": "date_time",
            "nullable": true,
            "type": "string"
          },
          "pausePayment": {
            "type": "boolean"
          },
          "pausePaymentTimestamp": {
            "example": "2019-01-20T09:00:00.000Z",
            "format": "date_time",
            "nullable": true,
            "type": "string"
          },
          "marketingOptInDecision": {
            "type": "boolean"
          },
          "marketingOptInTimestamp": {
            "example": "2019-01-20T09:00:00.000Z",
            "format": "date_time",
            "nullable": true,
            "type": "string"
          },
          "acceptTermsAndConditionsTimestamp": {
            "description": "The timestamp when the payee last accepted T&Cs",
            "example": "2019-01-20T09:00:00.000Z",
            "format": "date-time",
            "nullable": true,
            "readOnly": true,
            "type": "string"
          },
          "challenge": {
            "$ref": "#/components/schemas/ChallengeV3"
          }
        },
        "type": "object"
      },
      "WatchlistStatusV3": {
        "description": "Current watchlist status. One of the following values: NONE, PENDING, REVIEW, PASSED, FAILED",
        "type": "string"
      },
      "OnboardedStatusV4": {
        "description": "Payee onboarded status. One of the following values: CREATED, INVITED, REGISTERED, ONBOARDED",
        "type": "string"
      },
      "PayeeType_2": {
        "description": "Type of Payee. One of the following values: Individual, Company",
        "type": "string"
      },
      "PagedPayeeResponseV3": {
        "description": "List Payees Response Object",
        "example": {
          "summary": {
            "totalOnboardedCount": 10,
            "totalRegisteredCount": 10,
            "totalPayeesCount": 10,
            "totalInvitedCount": 10,
            "totalWatchlistFailedCount": 0
          },
          "links": [
            {
              "rel": "rel",
              "href": "href"
            },
            {
              "rel": "rel",
              "href": "href"
            }
          ],
          "page": {
            "numberOfElements": 10,
            "totalPages": 10,
            "pageSize": 10,
            "page": 10,
            "totalElements": 10
          },
          "content": [
            {
              "payorRefs": [
                {
                  "payorId": "ba08877f-9d96-41e4-9c26-44a872d856ae",
                  "invitationStatusTimestamp": "2019-01-20T09:00:00.000Z",
                  "payableStatus": true,
                  "invitationStatus": "invitationStatus",
                  "payableIssues": [
                    {
                      "code": "3",
                      "message": "payee-disabled"
                    },
                    {
                      "code": "3",
                      "message": "payee-disabled"
                    }
                  ],
                  "remoteId": "uniqueIdForRemoteEntity",
                  "paymentChannelId": "70faaff7-2c32-4b44-b27f-f0b6c484e6f3"
                },
                {
                  "payorId": "ba08877f-9d96-41e4-9c26-44a872d856ae",
                  "invitationStatusTimestamp": "2019-01-20T09:00:00.000Z",
                  "payableStatus": true,
                  "invitationStatus": "invitationStatus",
                  "payableIssues": [
                    {
                      "code": "3",
                      "message": "payee-disabled"
                    },
                    {
                      "code": "3",
                      "message": "payee-disabled"
                    }
                  ],
                  "remoteId": "uniqueIdForRemoteEntity",
                  "paymentChannelId": "70faaff7-2c32-4b44-b27f-f0b6c484e6f3"
                }
              ],
              "watchlistOverrideComment": "Example reason for the watchlist status being overridden",
              "country": "US",
              "watchlistStatus": "watchlistStatus",
              "disabledUpdatedTimestamp": "2019-01-20T09:00:00.000Z",
              "individual": {
                "name": {
                  "firstName": "Bob",
                  "lastName": "Smith",
                  "otherNames": "H",
                  "title": "Mr"
                }
              },
              "created": "2019-01-20T09:00:00.000Z",
              "displayName": "ABC",
              "payeeType": "payeeType",
              "language": "en-US",
              "onboardedStatus": "onboardedStatus",
              "watchlistStatusUpdatedTimestamp": "2019-01-20T09:00:00.000Z",
              "disabledComment": "reason for disabled",
              "disabled": true,
              "company": {
                "name": "ABC Group Plc",
                "operatingName": "ABC Co"
              },
              "payeeId": "2aa5d7e0-2ecb-403f-8494-1865ed0454e9",
              "email": "bob@example.com"
            },
            {
              "payorRefs": [
                {
                  "payorId": "ba08877f-9d96-41e4-9c26-44a872d856ae",
                  "invitationStatusTimestamp": "2019-01-20T09:00:00.000Z",
                  "payableStatus": true,
                  "invitationStatus": "invitationStatus",
                  "payableIssues": [
                    {
                      "code": "3",
                      "message": "payee-disabled"
                    },
                    {
                      "code": "3",
                      "message": "payee-disabled"
                    }
                  ],
                  "remoteId": "uniqueIdForRemoteEntity",
                  "paymentChannelId": "70faaff7-2c32-4b44-b27f-f0b6c484e6f3"
                },
                {
                  "payorId": "ba08877f-9d96-41e4-9c26-44a872d856ae",
                  "invitationStatusTimestamp": "2019-01-20T09:00:00.000Z",
                  "payableStatus": true,
                  "invitationStatus": "invitationStatus",
                  "payableIssues": [
                    {
                      "code": "3",
                      "message": "payee-disabled"
                    },
                    {
                      "code": "3",
                      "message": "payee-disabled"
                    }
                  ],
                  "remoteId": "uniqueIdForRemoteEntity",
                  "paymentChannelId": "70faaff7-2c32-4b44-b27f-f0b6c484e6f3"
                }
              ],
              "watchlistOverrideComment": "Example reason for the watchlist status being overridden",
              "country": "US",
              "watchlistStatus": "watchlistStatus",
              "disabledUpdatedTimestamp": "2019-01-20T09:00:00.000Z",
              "individual": {
                "name": {
                  "firstName": "Bob",
                  "lastName": "Smith",
                  "otherNames": "H",
                  "title": "Mr"
                }
              },
              "created": "2019-01-20T09:00:00.000Z",
              "displayName": "ABC",
              "payeeType": "payeeType",
              "language": "en-US",
              "onboardedStatus": "onboardedStatus",
              "watchlistStatusUpdatedTimestamp": "2019-01-20T09:00:00.000Z",
              "disabledComment": "reason for disabled",
              "disabled": true,
              "company": {
                "name": "ABC Group Plc",
                "operatingName": "ABC Co"
              },
              "payeeId": "2aa5d7e0-2ecb-403f-8494-1865ed0454e9",
              "email": "bob@example.com"
            }
          ]
        },
        "properties": {
          "summary": {
            "$ref": "#/components/schemas/PagedPayeeResponseV3_summary"
          },
          "page": {
            "$ref": "#/components/schemas/PagedPayeeResponseV3_page"
          },
          "links": {
            "items": {
              "$ref": "#/components/schemas/PagedPayeeResponseV3_links"
            },
            "type": "array"
          },
          "content": {
            "items": {
              "$ref": "#/components/schemas/GetPayeeListResponseV3"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "CreatePayeesRequestV3": {
        "example": {
          "payees": [
            {
              "payorRefs": [
                {
                  "payorId": "ba08877f-9d96-41e4-9c26-44a872d856ae",
                  "invitationStatusTimestamp": "2019-01-20T09:00:00.000Z",
                  "payableStatus": true,
                  "invitationStatus": "invitationStatus",
                  "payableIssues": [
                    {
                      "code": "3",
                      "message": "payee-disabled"
                    },
                    {
                      "code": "3",
                      "message": "payee-disabled"
                    }
                  ],
                  "remoteId": "uniqueIdForRemoteEntity",
                  "paymentChannelId": "70faaff7-2c32-4b44-b27f-f0b6c484e6f3"
                },
                {
                  "payorId": "ba08877f-9d96-41e4-9c26-44a872d856ae",
                  "invitationStatusTimestamp": "2019-01-20T09:00:00.000Z",
                  "payableStatus": true,
                  "invitationStatus": "invitationStatus",
                  "payableIssues": [
                    {
                      "code": "3",
                      "message": "payee-disabled"
                    },
                    {
                      "code": "3",
                      "message": "payee-disabled"
                    }
                  ],
                  "remoteId": "uniqueIdForRemoteEntity",
                  "paymentChannelId": "70faaff7-2c32-4b44-b27f-f0b6c484e6f3"
                }
              ],
              "address": {
                "country": "US",
                "countyOrProvince": "FL",
                "line4": "line4",
                "city": "Key West",
                "line3": "line3",
                "line2": "line2",
                "line1": "500 Duval St",
                "zipOrPostcode": "33945"
              },
              "individual": {
                "name": {
                  "firstName": "Bob",
                  "lastName": "Smith",
                  "otherNames": "H",
                  "title": "Mr"
                },
                "nationalIdentification": "SA211123K",
                "dateOfBirth": "1970-05-20T00:00:00.000+0000"
              },
              "challenge": {
                "description": "challenge description",
                "value": "challenge test"
              },
              "language": "en-US",
              "company": {
                "taxId": "123123123",
                "name": "ABC Group Plc",
                "operatingName": "ABC Co"
              },
              "payeeId": "2aa5d7e0-2ecb-403f-8494-1865ed0454e9",
              "type": "type",
              "email": "bob@example.com",
              "remoteId": "Remote ID",
              "paymentChannel": {
                "paymentChannelName": "My Payment Channel",
                "routingNumber": "XXXXX6789",
                "accountName": "My account",
                "countryCode": "US",
                "iban": "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXX1234",
                "currency": "USD",
                "accountNumber": "XXXXXX5678"
              }
            },
            {
              "payorRefs": [
                {
                  "payorId": "ba08877f-9d96-41e4-9c26-44a872d856ae",
                  "invitationStatusTimestamp": "2019-01-20T09:00:00.000Z",
                  "payableStatus": true,
                  "invitationStatus": "invitationStatus",
                  "payableIssues": [
                    {
                      "code": "3",
                      "message": "payee-disabled"
                    },
                    {
                      "code": "3",
                      "message": "payee-disabled"
                    }
                  ],
                  "remoteId": "uniqueIdForRemoteEntity",
                  "paymentChannelId": "70faaff7-2c32-4b44-b27f-f0b6c484e6f3"
                },
                {
                  "payorId": "ba08877f-9d96-41e4-9c26-44a872d856ae",
                  "invitationStatusTimestamp": "2019-01-20T09:00:00.000Z",
                  "payableStatus": true,
                  "invitationStatus": "invitationStatus",
                  "payableIssues": [
                    {
                      "code": "3",
                      "message": "payee-disabled"
                    },
                    {
                      "code": "3",
                      "message": "payee-disabled"
                    }
                  ],
                  "remoteId": "uniqueIdForRemoteEntity",
                  "paymentChannelId": "70faaff7-2c32-4b44-b27f-f0b6c484e6f3"
                }
              ],
              "address": {
                "country": "US",
                "countyOrProvince": "FL",
                "line4": "line4",
                "city": "Key West",
                "line3": "line3",
                "line2": "line2",
                "line1": "500 Duval St",
                "zipOrPostcode": "33945"
              },
              "individual": {
                "name": {
                  "firstName": "Bob",
                  "lastName": "Smith",
                  "otherNames": "H",
                  "title": "Mr"
                },
                "nationalIdentification": "SA211123K",
                "dateOfBirth": "1970-05-20T00:00:00.000+0000"
              },
              "challenge": {
                "description": "challenge description",
                "value": "challenge test"
              },
              "language": "en-US",
              "company": {
                "taxId": "123123123",
                "name": "ABC Group Plc",
                "operatingName": "ABC Co"
              },
              "payeeId": "2aa5d7e0-2ecb-403f-8494-1865ed0454e9",
              "type": "type",
              "email": "bob@example.com",
              "remoteId": "Remote ID",
              "paymentChannel": {
                "paymentChannelName": "My Payment Channel",
                "routingNumber": "XXXXX6789",
                "accountName": "My account",
                "countryCode": "US",
                "iban": "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXX1234",
                "currency": "USD",
                "accountNumber": "XXXXXX5678"
              }
            }
          ],
          "payorId": "9ac75325-5dcd-42d5-b992-175d7e0a035e"
        },
        "properties": {
          "payorId": {
            "example": "9ac75325-5dcd-42d5-b992-175d7e0a035e",
            "type": "string"
          },
          "payees": {
            "items": {
              "$ref": "#/components/schemas/CreatePayeeV3"
            },
            "type": "array"
          }
        },
        "required": [
          "payees",
          "payorId"
        ],
        "type": "object"
      },
      "CreatePayeesCSVRequestV3": {
        "properties": {
          "type": {
            "$ref": "#/components/schemas/PayeeTypeEnum"
          },
          "remoteId": {
            "example": "remoteId123",
            "maxLength": 100,
            "minLength": 1,
            "type": "string"
          },
          "email": {
            "example": "bob@example.com",
            "format": "email",
            "maxLength": 255,
            "minLength": 3,
            "type": "string"
          },
          "addressLine1": {
            "example": "500 Duval St",
            "maxLength": 100,
            "minLength": 2,
            "type": "string"
          },
          "addressLine2": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string"
          },
          "addressLine3": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string"
          },
          "addressLine4": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string"
          },
          "addressCity": {
            "example": "Key West",
            "maxLength": 50,
            "minLength": 2,
            "type": "string"
          },
          "addressCountyOrProvince": {
            "example": "FL",
            "maxLength": 50,
            "minLength": 1,
            "type": "string"
          },
          "addressZipOrPostcode": {
            "example": "33945",
            "maxLength": 60,
            "minLength": 1,
            "type": "string"
          },
          "addressCountry": {
            "description": "Valid ISO 3166 2 character country code. See the <a href=\"https://www.iso.org/iso-3166-country-codes.html\" target=\"_blank\" a>ISO specification</a> for details.",
            "example": "US",
            "maxLength": 2,
            "minLength": 2,
            "pattern": "^[A-Z]{2}$",
            "title": "ISO 3166 2 Character Country Code",
            "type": "string"
          },
          "individualNationalIdentification": {
            "example": "AB123456C",
            "maxLength": 30,
            "minLength": 6,
            "type": "string"
          },
          "individualDateOfBirth": {
            "description": "Must not be date in future. Example - 1970-05-20",
            "example": "1985-01-01T00:00:00.000Z",
            "format": "date",
            "type": "string"
          },
          "individualTitle": {
            "example": "Mr",
            "maxLength": 40,
            "minLength": 1,
            "type": "string"
          },
          "individualFirstName": {
            "maxLength": 40,
            "minLength": 1,
            "type": "string"
          },
          "individualOtherNames": {
            "example": "Bob",
            "maxLength": 40,
            "minLength": 1,
            "type": "string"
          },
          "individualLastName": {
            "example": "Smith",
            "maxLength": 40,
            "minLength": 1,
            "type": "string"
          },
          "companyName": {
            "example": "ABC Ltd",
            "maxLength": 40,
            "minLength": 1,
            "type": "string"
          },
          "companyEIN": {
            "example": "123456789",
            "maxLength": 30,
            "minLength": 6,
            "type": "string"
          },
          "companyOperatingName": {
            "example": "ABC",
            "maxLength": 100,
            "minLength": 1,
            "type": "string"
          },
          "paymentChannelAccountNumber": {
            "description": "Either routing number and account number or only iban must be set",
            "example": "XXXXXX5678",
            "maxLength": 17,
            "minLength": 6,
            "type": "string"
          },
          "paymentChannelRoutingNumber": {
            "description": "Either routing number and account number or only iban must be set",
            "example": "XXXXX6789",
            "maxLength": 9,
            "minLength": 9,
            "type": "string"
          },
          "paymentChannelAccountName": {
            "example": "My Account",
            "type": "string"
          },
          "paymentChannelIban": {
            "description": "Must match the regular expression ```^[A-Za-z0-9]+$```.",
            "example": "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXX1234",
            "maxLength": 34,
            "minLength": 15,
            "pattern": "^[A-Za-z0-9]+$",
            "title": "IBAN - International Bank Account Number",
            "type": "string"
          },
          "paymentChannelCountryCode": {
            "description": "Valid ISO 3166 2 character country code. See the <a href=\"https://www.iso.org/iso-3166-country-codes.html\" target=\"_blank\" a>ISO specification</a> for details.",
            "example": "US",
            "maxLength": 2,
            "minLength": 2,
            "pattern": "^[A-Z]{2}$",
            "title": "ISO 3166 2 Character Country Code",
            "type": "string"
          },
          "paymentChannelCurrency": {
            "example": "USD",
            "maxLength": 3,
            "minLength": 3,
            "type": "string"
          },
          "challengeDescription": {
            "example": "challenge description",
            "maxLength": 255,
            "minLength": 1,
            "type": "string"
          },
          "challengeValue": {
            "example": "challenge value",
            "maxLength": 20,
            "minLength": 3,
            "type": "string"
          },
          "payeeLanguage": {
            "description": "An IETF BCP 47 language code which has been configured for use within this Velo environment.<BR>\nSee the /v1/supportedLanguages endpoint to list the available codes for an environment.\n",
            "example": "en-US",
            "type": "string"
          }
        },
        "required": [
          "addressCity",
          "addressCountry",
          "addressLine1",
          "addressZipOrPostcode",
          "email",
          "remoteId",
          "type"
        ],
        "type": "object"
      },
      "CreatePayeesCSVResponseV3": {
        "example": {
          "batchId": "cb6ff8c6-85e9-45a6-b7d9-d05305db67f3",
          "rejectedCsvRows": [
            {
              "rejectedContent": "unable,to,process,csv,line",
              "lineNumber": 3,
              "message": "rejected message 1"
            },
            {
              "rejectedContent": "unable,to,process,csv,line",
              "lineNumber": 3,
              "message": "rejected message 1"
            }
          ]
        },
        "properties": {
          "batchId": {
            "example": "cb6ff8c6-85e9-45a6-b7d9-d05305db67f3",
            "format": "uuid",
            "type": "string"
          },
          "rejectedCsvRows": {
            "items": {
              "$ref": "#/components/schemas/CreatePayeesCSVResponseV3_rejectedCsvRows"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "QueryBatchResponseV3": {
        "example": {
          "failures": [
            {
              "failedSubmission": {
                "payorRefs": [
                  {
                    "payorId": "ba08877f-9d96-41e4-9c26-44a872d856ae",
                    "invitationStatusTimestamp": "2019-01-20T09:00:00.000Z",
                    "payableStatus": true,
                    "invitationStatus": "invitationStatus",
                    "payableIssues": [
                      {
                        "code": "3",
                        "message": "payee-disabled"
                      },
                      {
                        "code": "3",
                        "message": "payee-disabled"
                      }
                    ],
                    "remoteId": "uniqueIdForRemoteEntity",
                    "paymentChannelId": "70faaff7-2c32-4b44-b27f-f0b6c484e6f3"
                  },
                  {
                    "payorId": "ba08877f-9d96-41e4-9c26-44a872d856ae",
                    "invitationStatusTimestamp": "2019-01-20T09:00:00.000Z",
                    "payableStatus": true,
                    "invitationStatus": "invitationStatus",
                    "payableIssues": [
                      {
                        "code": "3",
                        "message": "payee-disabled"
                      },
                      {
                        "code": "3",
                        "message": "payee-disabled"
                      }
                    ],
                    "remoteId": "uniqueIdForRemoteEntity",
                    "paymentChannelId": "70faaff7-2c32-4b44-b27f-f0b6c484e6f3"
                  }
                ],
                "address": {
                  "country": "US",
                  "countyOrProvince": "FL",
                  "line4": "line4",
                  "city": "Key West",
                  "line3": "line3",
                  "line2": "line2",
                  "line1": "500 Duval St",
                  "zipOrPostcode": "33945"
                },
                "individual": {
                  "name": {
                    "firstName": "Bob",
                    "lastName": "Smith",
                    "otherNames": "H",
                    "title": "Mr"
                  },
                  "nationalIdentification": "SA211123K",
                  "dateOfBirth": "1970-05-20T00:00:00.000+0000"
                },
                "challenge": {
                  "description": "challenge description",
                  "value": "challenge test"
                },
                "language": "en-US",
                "company": {
                  "taxId": "123123123",
                  "name": "ABC Group Plc",
                  "operatingName": "ABC Co"
                },
                "payeeId": "2aa5d7e0-2ecb-403f-8494-1865ed0454e9",
                "type": "type",
                "email": "bob@example.com",
                "remoteId": "Remote ID",
                "paymentChannel": {
                  "paymentChannelName": "My Payment Channel",
                  "routingNumber": "XXXXX6789",
                  "accountName": "My account",
                  "countryCode": "US",
                  "iban": "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXX1234",
                  "currency": "USD",
                  "accountNumber": "XXXXXX5678"
                }
              },
              "failureMessage": "failure reason"
            },
            {
              "failedSubmission": {
                "payorRefs": [
                  {
                    "payorId": "ba08877f-9d96-41e4-9c26-44a872d856ae",
                    "invitationStatusTimestamp": "2019-01-20T09:00:00.000Z",
                    "payableStatus": true,
                    "invitationStatus": "invitationStatus",
                    "payableIssues": [
                      {
                        "code": "3",
                        "message": "payee-disabled"
                      },
                      {
                        "code": "3",
                        "message": "payee-disabled"
                      }
                    ],
                    "remoteId": "uniqueIdForRemoteEntity",
                    "paymentChannelId": "70faaff7-2c32-4b44-b27f-f0b6c484e6f3"
                  },
                  {
                    "payorId": "ba08877f-9d96-41e4-9c26-44a872d856ae",
                    "invitationStatusTimestamp": "2019-01-20T09:00:00.000Z",
                    "payableStatus": true,
                    "invitationStatus": "invitationStatus",
                    "payableIssues": [
                      {
                        "code": "3",
                        "message": "payee-disabled"
                      },
                      {
                        "code": "3",
                        "message": "payee-disabled"
                      }
                    ],
                    "remoteId": "uniqueIdForRemoteEntity",
                    "paymentChannelId": "70faaff7-2c32-4b44-b27f-f0b6c484e6f3"
                  }
                ],
                "address": {
                  "country": "US",
                  "countyOrProvince": "FL",
                  "line4": "line4",
                  "city": "Key West",
                  "line3": "line3",
                  "line2": "line2",
                  "line1": "500 Duval St",
                  "zipOrPostcode": "33945"
                },
                "individual": {
                  "name": {
                    "firstName": "Bob",
                    "lastName": "Smith",
                    "otherNames": "H",
                    "title": "Mr"
                  },
                  "nationalIdentification": "SA211123K",
                  "dateOfBirth": "1970-05-20T00:00:00.000+0000"
                },
                "challenge": {
                  "description": "challenge description",
                  "value": "challenge test"
                },
                "language": "en-US",
                "company": {
                  "taxId": "123123123",
                  "name": "ABC Group Plc",
                  "operatingName": "ABC Co"
                },
                "payeeId": "2aa5d7e0-2ecb-403f-8494-1865ed0454e9",
                "type": "type",
                "email": "bob@example.com",
                "remoteId": "Remote ID",
                "paymentChannel": {
                  "paymentChannelName": "My Payment Channel",
                  "routingNumber": "XXXXX6789",
                  "accountName": "My account",
                  "countryCode": "US",
                  "iban": "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXX1234",
                  "currency": "USD",
                  "accountNumber": "XXXXXX5678"
                }
              },
              "failureMessage": "failure reason"
            }
          ],
          "pendingCount": 2,
          "failureCount": 2,
          "status": "status"
        },
        "properties": {
          "status": {
            "description": "Batch Status. One of the following values: SUBMITTED, ACCEPTED",
            "type": "string"
          },
          "failureCount": {
            "example": 2,
            "format": "int64",
            "type": "integer"
          },
          "pendingCount": {
            "example": 2,
            "format": "int64",
            "type": "integer"
          },
          "failures": {
            "items": {
              "$ref": "#/components/schemas/FailedSubmissionV3"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "InvitePayeeRequestV3": {
        "example": {
          "payorId": "9ac75325-5dcd-42d5-b992-175d7e0a035e"
        },
        "properties": {
          "payorId": {
            "example": "9ac75325-5dcd-42d5-b992-175d7e0a035e",
            "format": "uuid",
            "type": "string"
          }
        },
        "required": [
          "payorId"
        ],
        "type": "object"
      },
      "InvitationStatusV4": {
        "type": "string"
      },
      "PagedPayeeInvitationStatusResponseV3": {
        "description": "List Payees Invitation Status Object",
        "example": {
          "links": [
            {
              "rel": "rel",
              "href": "href"
            },
            {
              "rel": "rel",
              "href": "href"
            }
          ],
          "page": {
            "numberOfElements": 0,
            "totalPages": 1,
            "pageSize": 5,
            "page": 5,
            "totalElements": 6
          },
          "content": [
            {
              "payeeId": "2aa5d7e0-2ecb-403f-8494-1865ed0454e9",
              "gracePeriodEndDate": "2019-01-20T00:00:00.000+0000",
              "invitationStatus": "invitationStatus"
            },
            {
              "payeeId": "2aa5d7e0-2ecb-403f-8494-1865ed0454e9",
              "gracePeriodEndDate": "2019-01-20T00:00:00.000+0000",
              "invitationStatus": "invitationStatus"
            }
          ]
        },
        "properties": {
          "page": {
            "$ref": "#/components/schemas/PagedPayeeInvitationStatusResponseV3_page"
          },
          "links": {
            "items": {
              "$ref": "#/components/schemas/PagedPayeeResponseV3_links"
            },
            "type": "array"
          },
          "content": {
            "items": {
              "$ref": "#/components/schemas/PayeeInvitationStatusResponseV3"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "PayeeDeltaResponseV3": {
        "description": "List Payee Changes Response Object",
        "example": {
          "links": [
            {
              "rel": "first",
              "href": "http://api.sandbox.velopayments.com/v3/payees/deltas?payorId=0a818933-087d-47f2-ad83-2f986ed087eb&updatedSince=2019-01-20T09:00:00+00:00&page=1&pageSize=1000"
            },
            {
              "rel": "first",
              "href": "http://api.sandbox.velopayments.com/v3/payees/deltas?payorId=0a818933-087d-47f2-ad83-2f986ed087eb&updatedSince=2019-01-20T09:00:00+00:00&page=1&pageSize=1000"
            }
          ],
          "page": {
            "numberOfElements": 2,
            "totalPages": 1,
            "pageSize": 25,
            "page": 1,
            "totalElements": 2
          },
          "content": [
            {
              "payeeCountry": "US",
              "displayName": "Payee1",
              "onboardedStatus": "onboardedStatus",
              "payeeId": "046b6c7f-0b8a-43b9-b35d-6489e6daee91",
              "dbaName": "Payee DBA Name",
              "email": "payee1@example.com",
              "remoteId": "payee_1"
            },
            {
              "payeeCountry": "US",
              "displayName": "Payee1",
              "onboardedStatus": "onboardedStatus",
              "payeeId": "046b6c7f-0b8a-43b9-b35d-6489e6daee91",
              "dbaName": "Payee DBA Name",
              "email": "payee1@example.com",
              "remoteId": "payee_1"
            }
          ]
        },
        "properties": {
          "page": {
            "$ref": "#/components/schemas/PayeeDeltaResponseV3_page"
          },
          "links": {
            "items": {
              "$ref": "#/components/schemas/PayeeDeltaResponseV3_links"
            },
            "type": "array"
          },
          "content": {
            "items": {
              "$ref": "#/components/schemas/PayeeDeltaV3"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "UpdateRemoteIdRequestV3": {
        "example": {
          "payorId": "9ac75325-5dcd-42d5-b992-175d7e0a035e",
          "remoteId": "remoteId123"
        },
        "properties": {
          "payorId": {
            "example": "9ac75325-5dcd-42d5-b992-175d7e0a035e",
            "format": "uuid",
            "nullable": false,
            "type": "string"
          },
          "remoteId": {
            "example": "remoteId123",
            "maxLength": 100,
            "minLength": 1,
            "nullable": false,
            "type": "string"
          }
        },
        "required": [
          "payorId",
          "remoteId"
        ],
        "type": "object"
      },
      "UpdatePayeeDetailsRequestV3": {
        "example": {
          "address": {
            "country": "US",
            "countyOrProvince": "FL",
            "line4": "line4",
            "city": "Key West",
            "line3": "line3",
            "line2": "line2",
            "line1": "500 Duval St",
            "zipOrPostcode": "33945"
          },
          "individual": {
            "name": {
              "firstName": "Bob",
              "lastName": "Smith",
              "otherNames": "A",
              "title": "Mr"
            },
            "nationalIdentification": "AB123456C",
            "dateOfBirth": "1985-01-01T00:00:00.000Z"
          },
          "challenge": {
            "description": "challenge description",
            "value": "challenge test"
          },
          "company": {
            "taxId": "123123123",
            "name": "ABC Group Plc",
            "operatingName": "ABC Co"
          },
          "language": "en-US",
          "contactSmsNumber": "11235555555",
          "email": "bob@example.com"
        },
        "properties": {
          "address": {
            "$ref": "#/components/schemas/PayeeAddressV3"
          },
          "individual": {
            "$ref": "#/components/schemas/IndividualV3"
          },
          "company": {
            "$ref": "#/components/schemas/CompanyV3"
          },
          "language": {
            "description": "An IETF BCP 47 language code which has been configured for use within this Velo environment.<BR>\nSee the /v1/supportedLanguages endpoint to list the available codes for an environment.\n",
            "example": "en-US",
            "type": "string"
          },
          "payeeType": {
            "$ref": "#/components/schemas/PayeeTypeEnum"
          },
          "challenge": {
            "$ref": "#/components/schemas/ChallengeV3"
          },
          "email": {
            "example": "bob@example.com",
            "format": "email",
            "nullable": true,
            "type": "string"
          },
          "contactSmsNumber": {
            "description": "The phone number of a device that the payee wishes to receive sms messages on\n",
            "example": "11235555555",
            "pattern": "^\\+[1-9]\\d{1,14}$",
            "type": "string"
          }
        },
        "type": "object"
      },
      "PayeeDetailResponseV4": {
        "example": {
          "payorRefs": [
            {
              "payorId": "ba08877f-9d96-41e4-9c26-44a872d856ae",
              "invitationStatusTimestamp": "2019-01-20T09:00:00.000Z",
              "payableStatus": true,
              "invitationStatus": "invitationStatus",
              "payableIssues": [
                {
                  "code": "3",
                  "message": "payee-disabled"
                },
                {
                  "code": "3",
                  "message": "payee-disabled"
                }
              ],
              "remoteId": "uniqueIdForRemoteEntity",
              "paymentChannelId": "70faaff7-2c32-4b44-b27f-f0b6c484e6f3"
            },
            {
              "payorId": "ba08877f-9d96-41e4-9c26-44a872d856ae",
              "invitationStatusTimestamp": "2019-01-20T09:00:00.000Z",
              "payableStatus": true,
              "invitationStatus": "invitationStatus",
              "payableIssues": [
                {
                  "code": "3",
                  "message": "payee-disabled"
                },
                {
                  "code": "3",
                  "message": "payee-disabled"
                }
              ],
              "remoteId": "uniqueIdForRemoteEntity",
              "paymentChannelId": "70faaff7-2c32-4b44-b27f-f0b6c484e6f3"
            }
          ],
          "watchlistOverrideComment": "watchlist override comment",
          "country": "US",
          "cellphoneNumber": "1234567890",
          "watchlistStatus": "watchlistStatus",
          "displayName": "Bob",
          "payeeType": "payeeType",
          "kycCompletedTimestamp": "2019-01-20T09:00:00.000Z",
          "marketingOptInTimestamp": "2019-01-20T09:00:00.000Z",
          "language": "en-US",
          "paymentChannels": [
            {
              "disabledReason": "User request",
              "disabledReasonCode": "VR100",
              "countryCode": "US",
              "name": "Bank of America USD",
              "currency": "USD",
              "enabled": false,
              "paymentChannelId": "70faaff7-2c32-4b44-b27f-f0b6c484e6f3",
              "last4Digits": "1234"
            },
            {
              "disabledReason": "User request",
              "disabledReasonCode": "VR100",
              "countryCode": "US",
              "name": "Bank of America USD",
              "currency": "USD",
              "enabled": false,
              "paymentChannelId": "70faaff7-2c32-4b44-b27f-f0b6c484e6f3",
              "last4Digits": "1234"
            }
          ],
          "watchlistOverrideExpiresAtTimestamp": "2019-01-20T09:00:00.000Z",
          "disabled": true,
          "company": {
            "taxId": "123123123",
            "name": "ABC Group Plc",
            "operatingName": "ABC Co"
          },
          "payeeId": "2aa5d7e0-2ecb-403f-8494-1865ed0454e9",
          "pausePaymentTimestamp": "2019-01-20T09:00:00.000Z",
          "email": "bob@example.com",
          "acceptTermsAndConditionsTimestamp": "2019-01-20T09:00:00.000Z",
          "disabledUpdatedTimestamp": "2019-01-20T09:00:00.000Z",
          "address": {
            "country": "US",
            "countyOrProvince": "FL",
            "line4": "line4",
            "city": "Key West",
            "line3": "line3",
            "line2": "line2",
            "line1": "500 Duval St",
            "zipOrPostcode": "33945"
          },
          "individual": {
            "name": {
              "firstName": "Bob",
              "lastName": "Smith",
              "otherNames": "A",
              "title": "Mr"
            },
            "nationalIdentification": "AB123456C",
            "dateOfBirth": "1985-01-01T00:00:00.000Z"
          },
          "created": "2019-01-20T09:00:00.000Z",
          "enhancedKycCompleted": true,
          "pausePayment": true,
          "gracePeriodEndDate": "2019-01-20T00:00:00.000+0000",
          "marketingOptInDecision": true,
          "onboardedStatus": "onboardedStatus",
          "watchlistStatusUpdatedTimestamp": "2019-01-20T09:00:00.000Z",
          "disabledComment": "reason for disabled",
          "challenge": {
            "description": "challenge description",
            "value": "11984567"
          }
        },
        "properties": {
          "payeeId": {
            "example": "2aa5d7e0-2ecb-403f-8494-1865ed0454e9",
            "format": "uuid",
            "readOnly": true,
            "type": "string"
          },
          "payorRefs": {
            "items": {
              "$ref": "#/components/schemas/PayeePayorRefV4"
            },
            "nullable": true,
            "readOnly": true,
            "type": "array"
          },
          "paymentChannels": {
            "description": "A list of the Payee's payment channels in their preferred order",
            "items": {
              "$ref": "#/components/schemas/PaymentChannelSummaryV4"
            },
            "nullable": true,
            "readOnly": true,
            "type": "array"
          },
          "email": {
            "example": "bob@example.com",
            "format": "email",
            "nullable": true,
            "type": "string"
          },
          "onboardedStatus": {
            "description": "Payee onboarded status. One of the following values: CREATED, INVITED, REGISTERED, ONBOARDED",
            "type": "string"
          },
          "watchlistStatus": {
            "description": "Current watchlist status. One of the following values: NONE, PENDING, REVIEW, PASSED, FAILED",
            "type": "string"
          },
          "watchlistOverrideExpiresAtTimestamp": {
            "example": "2019-01-20T09:00:00.000Z",
            "format": "date-time",
            "nullable": true,
            "type": "string"
          },
          "watchlistOverrideComment": {
            "example": "watchlist override comment",
            "type": "string"
          },
          "language": {
            "description": "An IETF BCP 47 language code which has been configured for use within this Velo environment.<BR>\nSee the /v1/supportedLanguages endpoint to list the available codes for an environment.\n",
            "example": "en-US",
            "type": "string"
          },
          "created": {
            "example": "2019-01-20T09:00:00.000Z",
            "format": "date-time",
            "type": "string"
          },
          "country": {
            "example": "US",
            "type": "string"
          },
          "displayName": {
            "example": "Bob",
            "type": "string"
          },
          "payeeType": {
            "description": "Type of Payee. One of the following values: Individual, Company",
            "type": "string"
          },
          "disabled": {
            "type": "boolean"
          },
          "disabledComment": {
            "example": "reason for disabled",
            "type": "string"
          },
          "disabledUpdatedTimestamp": {
            "example": "2019-01-20T09:00:00.000Z",
            "format": "date-time",
            "type": "string"
          },
          "address": {
            "$ref": "#/components/schemas/PayeeAddressV4"
          },
          "individual": {
            "$ref": "#/components/schemas/IndividualV4"
          },
          "company": {
            "$ref": "#/components/schemas/CompanyV4"
          },
          "cellphoneNumber": {
            "example": "1234567890",
            "type": "string"
          },
          "watchlistStatusUpdatedTimestamp": {
            "example": "2019-01-20T09:00:00.000Z",
            "format": "date_time",
            "nullable": true,
            "readOnly": true,
            "type": "string"
          },
          "gracePeriodEndDate": {
            "example": "2019-01-20T00:00:00.000Z",
            "format": "date",
            "nullable": true,
            "readOnly": true,
            "type": "string"
          },
          "enhancedKycCompleted": {
            "type": "boolean"
          },
          "kycCompletedTimestamp": {
            "example": "2019-01-20T09:00:00.000Z",
            "format": "date_time",
            "nullable": true,
            "type": "string"
          },
          "pausePayment": {
            "type": "boolean"
          },
          "pausePaymentTimestamp": {
            "example": "2019-01-20T09:00:00.000Z",
            "format": "date_time",
            "nullable": true,
            "type": "string"
          },
          "marketingOptInDecision": {
            "type": "boolean"
          },
          "marketingOptInTimestamp": {
            "example": "2019-01-20T09:00:00.000Z",
            "format": "date_time",
            "nullable": true,
            "type": "string"
          },
          "acceptTermsAndConditionsTimestamp": {
            "description": "The timestamp when the payee last accepted T&Cs",
            "example": "2019-01-20T09:00:00.000Z",
            "format": "date-time",
            "nullable": true,
            "readOnly": true,
            "type": "string"
          },
          "challenge": {
            "$ref": "#/components/schemas/ChallengeV4"
          }
        },
        "type": "object"
      },
      "UpdatePayeeDetailsRequestV4": {
        "example": {
          "address": {
            "country": "US",
            "countyOrProvince": "FL",
            "line4": "line4",
            "city": "Key West",
            "line3": "line3",
            "line2": "line2",
            "line1": "500 Duval St",
            "zipOrPostcode": "33945"
          },
          "individual": {
            "name": {
              "firstName": "Bob",
              "lastName": "Smith",
              "otherNames": "A",
              "title": "Mr"
            },
            "nationalIdentification": "AB123456C",
            "dateOfBirth": "1985-01-01T00:00:00.000Z"
          },
          "challenge": {
            "description": "challenge description",
            "value": "11984567"
          },
          "company": {
            "taxId": "123123123",
            "name": "ABC Group Plc",
            "operatingName": "ABC Co"
          },
          "language": "en-US",
          "contactSmsNumber": "11235555555",
          "email": "bob@example.com"
        },
        "properties": {
          "address": {
            "$ref": "#/components/schemas/PayeeAddressV4"
          },
          "individual": {
            "$ref": "#/components/schemas/IndividualV4"
          },
          "company": {
            "$ref": "#/components/schemas/CompanyV4"
          },
          "language": {
            "description": "An IETF BCP 47 language code which has been configured for use within this Velo environment.<BR>\nSee the /v1/supportedLanguages endpoint to list the available codes for an environment.\n",
            "example": "en-US",
            "type": "string"
          },
          "payeeType": {
            "$ref": "#/components/schemas/PayeeTypeEnum"
          },
          "challenge": {
            "$ref": "#/components/schemas/ChallengeV4"
          },
          "email": {
            "example": "bob@example.com",
            "format": "email",
            "nullable": true,
            "type": "string"
          },
          "contactSmsNumber": {
            "description": "The phone number of a device that the payee wishes to receive sms messages on\n",
            "example": "11235555555",
            "pattern": "^\\+[1-9]\\d{1,14}$",
            "type": "string"
          }
        },
        "type": "object"
      },
      "UpdateRemoteIdRequestV4": {
        "example": {
          "payorId": "9ac75325-5dcd-42d5-b992-175d7e0a035e",
          "remoteId": "remoteId123"
        },
        "properties": {
          "payorId": {
            "example": "9ac75325-5dcd-42d5-b992-175d7e0a035e",
            "format": "uuid",
            "nullable": false,
            "type": "string"
          },
          "remoteId": {
            "example": "remoteId123",
            "maxLength": 100,
            "minLength": 1,
            "nullable": false,
            "type": "string"
          }
        },
        "required": [
          "payorId",
          "remoteId"
        ],
        "type": "object"
      },
      "OfacStatusV4": {
        "description": "OFAC status. One of the following values: PENDING, PASSED, FAILED",
        "type": "string"
      },
      "PagedPayeeResponseV4": {
        "description": "List Payees Response Object",
        "example": {
          "summary": {
            "totalOnboardedCount": 10,
            "totalRegisteredCount": 10,
            "totalPayeesCount": 10,
            "totalInvitedCount": 10,
            "totalWatchlistFailedCount": 0
          },
          "links": [
            {
              "rel": "rel",
              "href": "href"
            },
            {
              "rel": "rel",
              "href": "href"
            }
          ],
          "page": {
            "numberOfElements": 10,
            "totalPages": 10,
            "pageSize": 10,
            "page": 10,
            "totalElements": 10
          },
          "content": [
            {
              "payorRefs": [
                {
                  "payorId": "ba08877f-9d96-41e4-9c26-44a872d856ae",
                  "invitationStatusTimestamp": "2019-01-20T09:00:00.000Z",
                  "payableStatus": true,
                  "invitationStatus": "invitationStatus",
                  "payableIssues": [
                    {
                      "code": "3",
                      "message": "payee-disabled"
                    },
                    {
                      "code": "3",
                      "message": "payee-disabled"
                    }
                  ],
                  "remoteId": "uniqueIdForRemoteEntity",
                  "paymentChannelId": "70faaff7-2c32-4b44-b27f-f0b6c484e6f3"
                },
                {
                  "payorId": "ba08877f-9d96-41e4-9c26-44a872d856ae",
                  "invitationStatusTimestamp": "2019-01-20T09:00:00.000Z",
                  "payableStatus": true,
                  "invitationStatus": "invitationStatus",
                  "payableIssues": [
                    {
                      "code": "3",
                      "message": "payee-disabled"
                    },
                    {
                      "code": "3",
                      "message": "payee-disabled"
                    }
                  ],
                  "remoteId": "uniqueIdForRemoteEntity",
                  "paymentChannelId": "70faaff7-2c32-4b44-b27f-f0b6c484e6f3"
                }
              ],
              "watchlistOverrideComment": "Example reason for the watchlist status being overridden",
              "country": "US",
              "watchlistStatus": "watchlistStatus",
              "disabledUpdatedTimestamp": "2019-01-20T09:00:00.000Z",
              "individual": {
                "name": {
                  "firstName": "Bob",
                  "lastName": "Smith",
                  "otherNames": "H",
                  "title": "Mr"
                }
              },
              "created": "2019-01-20T09:00:00.000Z",
              "displayName": "ABC",
              "payeeType": "payeeType",
              "language": "en-US",
              "onboardedStatus": "onboardedStatus",
              "watchlistStatusUpdatedTimestamp": "2019-01-20T09:00:00.000Z",
              "disabledComment": "reason for disabled",
              "disabled": true,
              "company": {
                "name": "ABC Group Plc",
                "operatingName": "ABC Co"
              },
              "payeeId": "2aa5d7e0-2ecb-403f-8494-1865ed0454e9",
              "email": "bob@example.com"
            },
            {
              "payorRefs": [
                {
                  "payorId": "ba08877f-9d96-41e4-9c26-44a872d856ae",
                  "invitationStatusTimestamp": "2019-01-20T09:00:00.000Z",
                  "payableStatus": true,
                  "invitationStatus": "invitationStatus",
                  "payableIssues": [
                    {
                      "code": "3",
                      "message": "payee-disabled"
                    },
                    {
                      "code": "3",
                      "message": "payee-disabled"
                    }
                  ],
                  "remoteId": "uniqueIdForRemoteEntity",
                  "paymentChannelId": "70faaff7-2c32-4b44-b27f-f0b6c484e6f3"
                },
                {
                  "payorId": "ba08877f-9d96-41e4-9c26-44a872d856ae",
                  "invitationStatusTimestamp": "2019-01-20T09:00:00.000Z",
                  "payableStatus": true,
                  "invitationStatus": "invitationStatus",
                  "payableIssues": [
                    {
                      "code": "3",
                      "message": "payee-disabled"
                    },
                    {
                      "code": "3",
                      "message": "payee-disabled"
                    }
                  ],
                  "remoteId": "uniqueIdForRemoteEntity",
                  "paymentChannelId": "70faaff7-2c32-4b44-b27f-f0b6c484e6f3"
                }
              ],
              "watchlistOverrideComment": "Example reason for the watchlist status being overridden",
              "country": "US",
              "watchlistStatus": "watchlistStatus",
              "disabledUpdatedTimestamp": "2019-01-20T09:00:00.000Z",
              "individual": {
                "name": {
                  "firstName": "Bob",
                  "lastName": "Smith",
                  "otherNames": "H",
                  "title": "Mr"
                }
              },
              "created": "2019-01-20T09:00:00.000Z",
              "displayName": "ABC",
              "payeeType": "payeeType",
              "language": "en-US",
              "onboardedStatus": "onboardedStatus",
              "watchlistStatusUpdatedTimestamp": "2019-01-20T09:00:00.000Z",
              "disabledComment": "reason for disabled",
              "disabled": true,
              "company": {
                "name": "ABC Group Plc",
                "operatingName": "ABC Co"
              },
              "payeeId": "2aa5d7e0-2ecb-403f-8494-1865ed0454e9",
              "email": "bob@example.com"
            }
          ]
        },
        "properties": {
          "summary": {
            "$ref": "#/components/schemas/PagedPayeeResponseV3_summary"
          },
          "page": {
            "$ref": "#/components/schemas/PagedPayeeResponseV3_page"
          },
          "links": {
            "items": {
              "$ref": "#/components/schemas/PagedPayeeResponseV3_links"
            },
            "type": "array"
          },
          "content": {
            "items": {
              "$ref": "#/components/schemas/GetPayeeListResponseV4"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "CreatePayeesRequestV4": {
        "example": {
          "payees": [
            {
              "address": {
                "country": "US",
                "countyOrProvince": "FL",
                "line4": "line4",
                "city": "Key West",
                "line3": "line3",
                "line2": "line2",
                "line1": "500 Duval St",
                "zipOrPostcode": "33945"
              },
              "individual": {
                "name": {
                  "firstName": "Bob",
                  "lastName": "Smith",
                  "otherNames": "H",
                  "title": "Mr"
                },
                "nationalIdentification": "SA211123K",
                "dateOfBirth": "1970-05-20T00:00:00.000+0000"
              },
              "challenge": {
                "description": "challenge description",
                "value": "11984567"
              },
              "language": "en-US",
              "company": {
                "taxId": "123123123",
                "name": "ABC Group Plc",
                "operatingName": "ABC Co"
              },
              "email": "bob@example.com",
              "remoteId": "Remote ID",
              "paymentChannel": {
                "paymentChannelName": "My Payment Channel",
                "routingNumber": "XXXXX6789",
                "accountName": "My account",
                "countryCode": "US",
                "iban": "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXX1234",
                "currency": "USD",
                "accountNumber": "XXXXXX5678"
              }
            },
            {
              "address": {
                "country": "US",
                "countyOrProvince": "FL",
                "line4": "line4",
                "city": "Key West",
                "line3": "line3",
                "line2": "line2",
                "line1": "500 Duval St",
                "zipOrPostcode": "33945"
              },
              "individual": {
                "name": {
                  "firstName": "Bob",
                  "lastName": "Smith",
                  "otherNames": "H",
                  "title": "Mr"
                },
                "nationalIdentification": "SA211123K",
                "dateOfBirth": "1970-05-20T00:00:00.000+0000"
              },
              "challenge": {
                "description": "challenge description",
                "value": "11984567"
              },
              "language": "en-US",
              "company": {
                "taxId": "123123123",
                "name": "ABC Group Plc",
                "operatingName": "ABC Co"
              },
              "email": "bob@example.com",
              "remoteId": "Remote ID",
              "paymentChannel": {
                "paymentChannelName": "My Payment Channel",
                "routingNumber": "XXXXX6789",
                "accountName": "My account",
                "countryCode": "US",
                "iban": "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXX1234",
                "currency": "USD",
                "accountNumber": "XXXXXX5678"
              }
            }
          ],
          "payorId": "9ac75325-5dcd-42d5-b992-175d7e0a035e"
        },
        "properties": {
          "payorId": {
            "example": "9ac75325-5dcd-42d5-b992-175d7e0a035e",
            "type": "string"
          },
          "payees": {
            "items": {
              "$ref": "#/components/schemas/CreatePayeeV4"
            },
            "type": "array"
          }
        },
        "required": [
          "payees",
          "payorId"
        ],
        "type": "object"
      },
      "CreatePayeesCSVRequestV4": {
        "properties": {
          "type": {
            "$ref": "#/components/schemas/PayeeTypeEnum"
          },
          "remoteId": {
            "example": "remoteId123",
            "maxLength": 100,
            "minLength": 1,
            "type": "string"
          },
          "email": {
            "example": "bob@example.com",
            "format": "email",
            "maxLength": 255,
            "minLength": 3,
            "type": "string"
          },
          "addressLine1": {
            "example": "500 Duval St",
            "maxLength": 100,
            "minLength": 2,
            "type": "string"
          },
          "addressLine2": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string"
          },
          "addressLine3": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string"
          },
          "addressLine4": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string"
          },
          "addressCity": {
            "example": "Key West",
            "maxLength": 50,
            "minLength": 2,
            "type": "string"
          },
          "addressCountyOrProvince": {
            "example": "FL",
            "maxLength": 50,
            "minLength": 1,
            "type": "string"
          },
          "addressZipOrPostcode": {
            "example": "33945",
            "maxLength": 60,
            "minLength": 1,
            "type": "string"
          },
          "addressCountry": {
            "description": "Valid ISO 3166 2 character country code. See the <a href=\"https://www.iso.org/iso-3166-country-codes.html\" target=\"_blank\" a>ISO specification</a> for details.",
            "example": "US",
            "maxLength": 2,
            "minLength": 2,
            "pattern": "^[A-Z]{2}$",
            "title": "ISO 3166 2 Character Country Code",
            "type": "string"
          },
          "individualNationalIdentification": {
            "example": "AB123456C",
            "maxLength": 30,
            "minLength": 6,
            "type": "string"
          },
          "individualDateOfBirth": {
            "description": "Must not be date in future. Example - 1970-05-20",
            "example": "1985-01-01T00:00:00.000Z",
            "format": "date",
            "type": "string"
          },
          "individualTitle": {
            "example": "Mr",
            "maxLength": 40,
            "minLength": 1,
            "type": "string"
          },
          "individualFirstName": {
            "maxLength": 40,
            "minLength": 1,
            "type": "string"
          },
          "individualOtherNames": {
            "example": "Bob",
            "maxLength": 40,
            "minLength": 1,
            "type": "string"
          },
          "individualLastName": {
            "example": "Smith",
            "maxLength": 40,
            "minLength": 1,
            "type": "string"
          },
          "companyName": {
            "example": "ABC Ltd",
            "maxLength": 40,
            "minLength": 1,
            "type": "string"
          },
          "companyEIN": {
            "example": "123456789",
            "maxLength": 30,
            "minLength": 6,
            "type": "string"
          },
          "companyOperatingName": {
            "example": "ABC",
            "maxLength": 100,
            "minLength": 1,
            "type": "string"
          },
          "paymentChannelAccountNumber": {
            "description": "Either routing number and account number or only iban must be set",
            "example": "XXXXXX5678",
            "maxLength": 17,
            "minLength": 6,
            "type": "string"
          },
          "paymentChannelRoutingNumber": {
            "description": "Either routing number and account number or only iban must be set",
            "example": "XXXXX6789",
            "maxLength": 9,
            "minLength": 9,
            "type": "string"
          },
          "paymentChannelAccountName": {
            "example": "My Account",
            "type": "string"
          },
          "paymentChannelIban": {
            "description": "Must match the regular expression ```^[A-Za-z0-9]+$```.",
            "example": "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXX1234",
            "maxLength": 34,
            "minLength": 15,
            "pattern": "^[A-Za-z0-9]+$",
            "title": "IBAN - International Bank Account Number",
            "type": "string"
          },
          "paymentChannelCountryCode": {
            "description": "Valid ISO 3166 2 character country code. See the <a href=\"https://www.iso.org/iso-3166-country-codes.html\" target=\"_blank\" a>ISO specification</a> for details.",
            "example": "US",
            "maxLength": 2,
            "minLength": 2,
            "pattern": "^[A-Z]{2}$",
            "title": "ISO 3166 2 Character Country Code",
            "type": "string"
          },
          "paymentChannelCurrency": {
            "example": "USD",
            "maxLength": 3,
            "minLength": 3,
            "type": "string"
          },
          "challengeDescription": {
            "example": "challenge description",
            "maxLength": 255,
            "minLength": 1,
            "type": "string"
          },
          "challengeValue": {
            "example": "challenge value",
            "maxLength": 20,
            "minLength": 3,
            "type": "string"
          },
          "payeeLanguage": {
            "description": "An IETF BCP 47 language code which has been configured for use within this Velo environment.<BR>\nSee the /v1/supportedLanguages endpoint to list the available codes for an environment.\n",
            "example": "en-US",
            "type": "string"
          }
        },
        "required": [
          "addressCity",
          "addressCountry",
          "addressLine1",
          "addressZipOrPostcode",
          "email",
          "remoteId",
          "type"
        ],
        "type": "object"
      },
      "CreatePayeesCSVResponseV4": {
        "example": {
          "batchId": "cb6ff8c6-85e9-45a6-b7d9-d05305db67f3",
          "rejectedCsvRows": [
            {
              "rejectedContent": "unable,to,process,csv,line",
              "lineNumber": 3,
              "message": "rejected message 1"
            },
            {
              "rejectedContent": "unable,to,process,csv,line",
              "lineNumber": 3,
              "message": "rejected message 1"
            }
          ]
        },
        "properties": {
          "batchId": {
            "example": "cb6ff8c6-85e9-45a6-b7d9-d05305db67f3",
            "format": "uuid",
            "type": "string"
          },
          "rejectedCsvRows": {
            "items": {
              "$ref": "#/components/schemas/CreatePayeesCSVResponseV3_rejectedCsvRows"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "QueryBatchResponseV4": {
        "example": {
          "failures": [
            {
              "failedSubmission": {
                "payorRefs": [
                  {
                    "payorId": "ba08877f-9d96-41e4-9c26-44a872d856ae",
                    "invitationStatusTimestamp": "2019-01-20T09:00:00.000Z",
                    "payableStatus": true,
                    "invitationStatus": "invitationStatus",
                    "payableIssues": [
                      {
                        "code": "3",
                        "message": "payee-disabled"
                      },
                      {
                        "code": "3",
                        "message": "payee-disabled"
                      }
                    ],
                    "remoteId": "uniqueIdForRemoteEntity",
                    "paymentChannelId": "70faaff7-2c32-4b44-b27f-f0b6c484e6f3"
                  },
                  {
                    "payorId": "ba08877f-9d96-41e4-9c26-44a872d856ae",
                    "invitationStatusTimestamp": "2019-01-20T09:00:00.000Z",
                    "payableStatus": true,
                    "invitationStatus": "invitationStatus",
                    "payableIssues": [
                      {
                        "code": "3",
                        "message": "payee-disabled"
                      },
                      {
                        "code": "3",
                        "message": "payee-disabled"
                      }
                    ],
                    "remoteId": "uniqueIdForRemoteEntity",
                    "paymentChannelId": "70faaff7-2c32-4b44-b27f-f0b6c484e6f3"
                  }
                ],
                "address": {
                  "country": "US",
                  "countyOrProvince": "FL",
                  "line4": "line4",
                  "city": "Key West",
                  "line3": "line3",
                  "line2": "line2",
                  "line1": "500 Duval St",
                  "zipOrPostcode": "33945"
                },
                "individual": {
                  "name": {
                    "firstName": "Bob",
                    "lastName": "Smith",
                    "otherNames": "H",
                    "title": "Mr"
                  },
                  "nationalIdentification": "SA211123K",
                  "dateOfBirth": "1970-05-20T00:00:00.000+0000"
                },
                "challenge": {
                  "description": "challenge description",
                  "value": "11984567"
                },
                "language": "en-US",
                "company": {
                  "taxId": "123123123",
                  "name": "ABC Group Plc",
                  "operatingName": "ABC Co"
                },
                "payeeId": "2aa5d7e0-2ecb-403f-8494-1865ed0454e9",
                "type": "type",
                "email": "bob@example.com",
                "remoteId": "Remote ID",
                "paymentChannel": {
                  "paymentChannelName": "My Payment Channel",
                  "routingNumber": "XXXXX6789",
                  "accountName": "My account",
                  "countryCode": "US",
                  "iban": "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXX1234",
                  "currency": "USD",
                  "accountNumber": "XXXXXX5678"
                }
              },
              "failureMessage": "failure reason"
            },
            {
              "failedSubmission": {
                "payorRefs": [
                  {
                    "payorId": "ba08877f-9d96-41e4-9c26-44a872d856ae",
                    "invitationStatusTimestamp": "2019-01-20T09:00:00.000Z",
                    "payableStatus": true,
                    "invitationStatus": "invitationStatus",
                    "payableIssues": [
                      {
                        "code": "3",
                        "message": "payee-disabled"
                      },
                      {
                        "code": "3",
                        "message": "payee-disabled"
                      }
                    ],
                    "remoteId": "uniqueIdForRemoteEntity",
                    "paymentChannelId": "70faaff7-2c32-4b44-b27f-f0b6c484e6f3"
                  },
                  {
                    "payorId": "ba08877f-9d96-41e4-9c26-44a872d856ae",
                    "invitationStatusTimestamp": "2019-01-20T09:00:00.000Z",
                    "payableStatus": true,
                    "invitationStatus": "invitationStatus",
                    "payableIssues": [
                      {
                        "code": "3",
                        "message": "payee-disabled"
                      },
                      {
                        "code": "3",
                        "message": "payee-disabled"
                      }
                    ],
                    "remoteId": "uniqueIdForRemoteEntity",
                    "paymentChannelId": "70faaff7-2c32-4b44-b27f-f0b6c484e6f3"
                  }
                ],
                "address": {
                  "country": "US",
                  "countyOrProvince": "FL",
                  "line4": "line4",
                  "city": "Key West",
                  "line3": "line3",
                  "line2": "line2",
                  "line1": "500 Duval St",
                  "zipOrPostcode": "33945"
                },
                "individual": {
                  "name": {
                    "firstName": "Bob",
                    "lastName": "Smith",
                    "otherNames": "H",
                    "title": "Mr"
                  },
                  "nationalIdentification": "SA211123K",
                  "dateOfBirth": "1970-05-20T00:00:00.000+0000"
                },
                "challenge": {
                  "description": "challenge description",
                  "value": "11984567"
                },
                "language": "en-US",
                "company": {
                  "taxId": "123123123",
                  "name": "ABC Group Plc",
                  "operatingName": "ABC Co"
                },
                "payeeId": "2aa5d7e0-2ecb-403f-8494-1865ed0454e9",
                "type": "type",
                "email": "bob@example.com",
                "remoteId": "Remote ID",
                "paymentChannel": {
                  "paymentChannelName": "My Payment Channel",
                  "routingNumber": "XXXXX6789",
                  "accountName": "My account",
                  "countryCode": "US",
                  "iban": "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXX1234",
                  "currency": "USD",
                  "accountNumber": "XXXXXX5678"
                }
              },
              "failureMessage": "failure reason"
            }
          ],
          "pendingCount": 2,
          "failureCount": 2,
          "status": "status"
        },
        "properties": {
          "status": {
            "description": "Batch Status. One of the following values: SUBMITTED, ACCEPTED",
            "type": "string"
          },
          "failureCount": {
            "example": 2,
            "format": "int64",
            "type": "integer"
          },
          "pendingCount": {
            "example": 2,
            "format": "int64",
            "type": "integer"
          },
          "failures": {
            "items": {
              "$ref": "#/components/schemas/FailedSubmissionV4"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "InvitePayeeRequestV4": {
        "example": {
          "payorId": "9ac75325-5dcd-42d5-b992-175d7e0a035e"
        },
        "properties": {
          "payorId": {
            "example": "9ac75325-5dcd-42d5-b992-175d7e0a035e",
            "format": "uuid",
            "type": "string"
          }
        },
        "required": [
          "payorId"
        ],
        "type": "object"
      },
      "PagedPayeeInvitationStatusResponseV4": {
        "description": "List Payees Invitation Status Object",
        "example": {
          "links": [
            {
              "rel": "rel",
              "href": "href"
            },
            {
              "rel": "rel",
              "href": "href"
            }
          ],
          "page": {
            "numberOfElements": 0,
            "totalPages": 1,
            "pageSize": 5,
            "page": 5,
            "totalElements": 6
          },
          "content": [
            {
              "payeeId": "2aa5d7e0-2ecb-403f-8494-1865ed0454e9",
              "gracePeriodEndDate": "2019-01-20T00:00:00.000+0000",
              "invitationStatus": "invitationStatus"
            },
            {
              "payeeId": "2aa5d7e0-2ecb-403f-8494-1865ed0454e9",
              "gracePeriodEndDate": "2019-01-20T00:00:00.000+0000",
              "invitationStatus": "invitationStatus"
            }
          ]
        },
        "properties": {
          "page": {
            "$ref": "#/components/schemas/PagedPayeeInvitationStatusResponseV3_page"
          },
          "links": {
            "items": {
              "$ref": "#/components/schemas/PagedPayeeResponseV3_links"
            },
            "type": "array"
          },
          "content": {
            "items": {
              "$ref": "#/components/schemas/PayeeInvitationStatusResponseV4"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "PayeeDeltaResponseV4": {
        "description": "List Payee Changes Response Object",
        "example": {
          "links": [
            {
              "rel": "first",
              "href": "http://api.sandbox.velopayments.com/v4/payees/deltas?payorId=0a818933-087d-47f2-ad83-2f986ed087eb&updatedSince=2019-01-20T09:00:00+00:00&page=1&pageSize=1000"
            },
            {
              "rel": "first",
              "href": "http://api.sandbox.velopayments.com/v4/payees/deltas?payorId=0a818933-087d-47f2-ad83-2f986ed087eb&updatedSince=2019-01-20T09:00:00+00:00&page=1&pageSize=1000"
            }
          ],
          "page": {
            "numberOfElements": 2,
            "totalPages": 1,
            "pageSize": 25,
            "page": 1,
            "totalElements": 2
          },
          "content": [
            {
              "payeeCountry": "US",
              "displayName": "Payee1",
              "onboardedStatus": "onboardedStatus",
              "payeeId": "046b6c7f-0b8a-43b9-b35d-6489e6daee91",
              "dbaName": "Payee DBA Name",
              "email": "payee1@example.com",
              "remoteId": "payee_1"
            },
            {
              "payeeCountry": "US",
              "displayName": "Payee1",
              "onboardedStatus": "onboardedStatus",
              "payeeId": "046b6c7f-0b8a-43b9-b35d-6489e6daee91",
              "dbaName": "Payee DBA Name",
              "email": "payee1@example.com",
              "remoteId": "payee_1"
            }
          ]
        },
        "properties": {
          "page": {
            "$ref": "#/components/schemas/PayeeDeltaResponseV3_page"
          },
          "links": {
            "items": {
              "$ref": "#/components/schemas/PayeeDeltaResponseV4_links"
            },
            "type": "array"
          },
          "content": {
            "items": {
              "$ref": "#/components/schemas/PayeeDeltaV4"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "SetNotificationsRequest": {
        "example": {
          "minimumBalance": 800828190
        },
        "properties": {
          "minimumBalance": {
            "description": "Amount to set as minimum balance in minor units",
            "format": "int64",
            "maximum": 9999999999,
            "minimum": 0,
            "type": "integer"
          }
        },
        "required": [
          "minimumBalance"
        ],
        "type": "object"
      },
      "FundingRequestV2": {
        "example": {
          "amount": 800828191
        },
        "properties": {
          "amount": {
            "description": "Amount to fund, decimal implied",
            "format": "int64",
            "maximum": 9999999999,
            "minimum": 1,
            "type": "integer"
          }
        },
        "required": [
          "amount"
        ],
        "type": "object"
      },
      "ListSourceAccountResponseV2": {
        "description": "List Source Accounts Response Object",
        "example": {
          "links": [
            {
              "rel": "first",
              "href": "https://api.sandbox.velopayments.com/v2/sourceAccounts?payorId=a2967711-df07-41e5-b5ea-f563088911c6&page=1&pageSize=0&sort=fundingRef:asc"
            },
            {
              "rel": "first",
              "href": "https://api.sandbox.velopayments.com/v2/sourceAccounts?payorId=a2967711-df07-41e5-b5ea-f563088911c6&page=1&pageSize=0&sort=fundingRef:asc"
            }
          ],
          "page": {
            "numberOfElements": 12,
            "totalPages": 2,
            "pageSize": 25,
            "page": 1,
            "totalElements": 33
          },
          "content": [
            {
              "physicalAccountName": "VELO_FBO_MYBANKA_USD",
              "accountType": "FBO",
              "fundingAccountId": "046b6c7f-0b8a-43b9-b35d-6489e6daee91",
              "fundingRef": "a1b2c3d4",
              "balance": 1203489,
              "pooled": true,
              "name": "MyAccountName",
              "customerId": "Joe Customer",
              "physicalAccountId": "046b6c7f-0b8a-43b9-b35d-6489e6daee91",
              "autoTopUpConfig": {
                "targetBalance": 300000,
                "minBalance": 10000,
                "enabled": true
              },
              "currency": "USD",
              "railsId": "BOA_RAIL",
              "balanceVisible": true,
              "id": "046b6c7f-0b8a-43b9-b35d-6489e6daee91",
              "payorId": "046b6c7f-0b8a-43b9-b35d-6489e6daee91",
              "notifications": {
                "minimumBalance": 120000
              }
            },
            {
              "physicalAccountName": "VELO_FBO_MYBANKA_USD",
              "accountType": "FBO",
              "fundingAccountId": "046b6c7f-0b8a-43b9-b35d-6489e6daee91",
              "fundingRef": "a1b2c3d4",
              "balance": 1203489,
              "pooled": true,
              "name": "MyAccountName",
              "customerId": "Joe Customer",
              "physicalAccountId": "046b6c7f-0b8a-43b9-b35d-6489e6daee91",
              "autoTopUpConfig": {
                "targetBalance": 300000,
                "minBalance": 10000,
                "enabled": true
              },
              "currency": "USD",
              "railsId": "BOA_RAIL",
              "balanceVisible": true,
              "id": "046b6c7f-0b8a-43b9-b35d-6489e6daee91",
              "payorId": "046b6c7f-0b8a-43b9-b35d-6489e6daee91",
              "notifications": {
                "minimumBalance": 120000
              }
            }
          ]
        },
        "properties": {
          "page": {
            "$ref": "#/components/schemas/PagedUserResponse_page"
          },
          "links": {
            "items": {
              "$ref": "#/components/schemas/ListSourceAccountResponseV2_links"
            },
            "type": "array"
          },
          "content": {
            "items": {
              "$ref": "#/components/schemas/SourceAccountResponseV2"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "SourceAccountResponseV2": {
        "example": {
          "physicalAccountName": "VELO_FBO_MYBANKA_USD",
          "accountType": "FBO",
          "fundingAccountId": "046b6c7f-0b8a-43b9-b35d-6489e6daee91",
          "fundingRef": "a1b2c3d4",
          "balance": 1203489,
          "pooled": true,
          "name": "MyAccountName",
          "customerId": "Joe Customer",
          "physicalAccountId": "046b6c7f-0b8a-43b9-b35d-6489e6daee91",
          "autoTopUpConfig": {
            "targetBalance": 300000,
            "minBalance": 10000,
            "enabled": true
          },
          "currency": "USD",
          "railsId": "BOA_RAIL",
          "balanceVisible": true,
          "id": "046b6c7f-0b8a-43b9-b35d-6489e6daee91",
          "payorId": "046b6c7f-0b8a-43b9-b35d-6489e6daee91",
          "notifications": {
            "minimumBalance": 120000
          }
        },
        "properties": {
          "id": {
            "description": "Source Account Id",
            "format": "uuid",
            "type": "string"
          },
          "balance": {
            "description": "Decimal implied",
            "example": 1203489,
            "format": "int64",
            "type": "integer"
          },
          "currency": {
            "example": "USD",
            "maxLength": 3,
            "minLength": 3,
            "type": "string"
          },
          "fundingRef": {
            "example": "a1b2c3d4",
            "type": "string"
          },
          "physicalAccountName": {
            "example": "VELO_FBO_MYBANKA_USD",
            "type": "string"
          },
          "railsId": {
            "example": "BOA_RAIL",
            "type": "string"
          },
          "payorId": {
            "format": "uuid",
            "type": "string"
          },
          "name": {
            "example": "MyAccountName",
            "type": "string"
          },
          "pooled": {
            "type": "boolean"
          },
          "balanceVisible": {
            "type": "boolean"
          },
          "customerId": {
            "example": "Joe Customer",
            "nullable": true,
            "type": "string"
          },
          "physicalAccountId": {
            "format": "uuid",
            "type": "string"
          },
          "notifications": {
            "$ref": "#/components/schemas/NotificationsV2"
          },
          "fundingAccountId": {
            "format": "uuid",
            "nullable": true,
            "type": "string"
          },
          "autoTopUpConfig": {
            "$ref": "#/components/schemas/AutoTopUpConfigV2"
          },
          "accountType": {
            "example": "FBO",
            "type": "string"
          }
        },
        "required": [
          "accountType",
          "balanceVisible",
          "fundingRef",
          "id",
          "physicalAccountName",
          "pooled",
          "railsId"
        ],
        "type": "object"
      },
      "TransferRequestV2": {
        "example": {
          "amount": 800828191,
          "currency": "USD",
          "toSourceAccountId": "046b6c7f-0b8a-43b9-b35d-6489e6daee91"
        },
        "properties": {
          "toSourceAccountId": {
            "description": "The 'to' source account id, which will be credited",
            "format": "uuid",
            "type": "string"
          },
          "amount": {
            "description": "Amount to transfer, in minor units",
            "format": "int64",
            "maximum": 9999999999,
            "minimum": 1,
            "type": "integer"
          },
          "currency": {
            "example": "USD",
            "maxLength": 3,
            "minLength": 3,
            "type": "string"
          }
        },
        "required": [
          "amount",
          "currency",
          "toSourceAccountId"
        ],
        "type": "object"
      },
      "FundingRequestV3": {
        "example": {
          "fundingAccountId": "046b6c7f-0b8a-43b9-b35d-6489e6daee91",
          "amount": 800828191
        },
        "properties": {
          "fundingAccountId": {
            "description": "The funding account id",
            "format": "uuid",
            "type": "string"
          },
          "amount": {
            "description": "Amount to fund in minor units",
            "format": "int64",
            "maximum": 9999999999,
            "minimum": 1,
            "type": "integer"
          }
        },
        "required": [
          "amount",
          "fundingAccountId"
        ],
        "type": "object"
      },
      "SourceAccountTypeV3": {
        "description": "Type of source account. One of the following values: FBO, PRIVATE",
        "type": "string"
      },
      "ListSourceAccountResponseV3": {
        "description": "List Source Accounts Response Object",
        "example": {
          "links": [
            {
              "rel": "first",
              "href": "https://api.sandbox.velopayments.com/v3/sourceAccounts?payorId=a2967711-df07-41e5-b5ea-f563088911c6&page=1&pageSize=0&sort=fundingRef:asc"
            },
            {
              "rel": "first",
              "href": "https://api.sandbox.velopayments.com/v3/sourceAccounts?payorId=a2967711-df07-41e5-b5ea-f563088911c6&page=1&pageSize=0&sort=fundingRef:asc"
            }
          ],
          "page": {
            "numberOfElements": 12,
            "totalPages": 2,
            "pageSize": 25,
            "page": 1,
            "totalElements": 33
          },
          "content": [
            {
              "physicalAccountName": "VELO_FBO_MYBANKA_USD",
              "country": "US",
              "userDeleted": true,
              "type": "FBO",
              "deletedAt": "2021-01-27T10:08:25.701Z",
              "fundingRef": "a1b2c3d4",
              "deleted": true,
              "balance": 1203489,
              "pooled": true,
              "name": "MyAccountName",
              "customerId": "Joe Customer",
              "physicalAccountId": "046b6c7f-0b8a-43b9-b35d-6489e6daee91",
              "autoTopUpConfig": {
                "targetBalance": 300000,
                "fundingAccountId": "640ab1bd-8a6a-4603-a83a-1edbc3ed5689",
                "minBalance": 10000,
                "enabled": true
              },
              "currency": "USD",
              "railsId": "BOA_RAIL",
              "id": "046b6c7f-0b8a-43b9-b35d-6489e6daee91",
              "payorId": "046b6c7f-0b8a-43b9-b35d-6489e6daee91",
              "notifications": {
                "minimumBalance": 120000
              }
            },
            {
              "physicalAccountName": "VELO_FBO_MYBANKA_USD",
              "country": "US",
              "userDeleted": true,
              "type": "FBO",
              "deletedAt": "2021-01-27T10:08:25.701Z",
              "fundingRef": "a1b2c3d4",
              "deleted": true,
              "balance": 1203489,
              "pooled": true,
              "name": "MyAccountName",
              "customerId": "Joe Customer",
              "physicalAccountId": "046b6c7f-0b8a-43b9-b35d-6489e6daee91",
              "autoTopUpConfig": {
                "targetBalance": 300000,
                "fundingAccountId": "640ab1bd-8a6a-4603-a83a-1edbc3ed5689",
                "minBalance": 10000,
                "enabled": true
              },
              "currency": "USD",
              "railsId": "BOA_RAIL",
              "id": "046b6c7f-0b8a-43b9-b35d-6489e6daee91",
              "payorId": "046b6c7f-0b8a-43b9-b35d-6489e6daee91",
              "notifications": {
                "minimumBalance": 120000
              }
            }
          ]
        },
        "properties": {
          "page": {
            "$ref": "#/components/schemas/PagedUserResponse_page"
          },
          "links": {
            "items": {
              "$ref": "#/components/schemas/ListSourceAccountResponseV3_links"
            },
            "type": "array"
          },
          "content": {
            "items": {
              "$ref": "#/components/schemas/SourceAccountResponseV3"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "SourceAccountResponseV3": {
        "example": {
          "physicalAccountName": "VELO_FBO_MYBANKA_USD",
          "country": "US",
          "userDeleted": true,
          "type": "FBO",
          "deletedAt": "2021-01-27T10:08:25.701Z",
          "fundingRef": "a1b2c3d4",
          "deleted": true,
          "balance": 1203489,
          "pooled": true,
          "name": "MyAccountName",
          "customerId": "Joe Customer",
          "physicalAccountId": "046b6c7f-0b8a-43b9-b35d-6489e6daee91",
          "autoTopUpConfig": {
            "targetBalance": 300000,
            "fundingAccountId": "640ab1bd-8a6a-4603-a83a-1edbc3ed5689",
            "minBalance": 10000,
            "enabled": true
          },
          "currency": "USD",
          "railsId": "BOA_RAIL",
          "id": "046b6c7f-0b8a-43b9-b35d-6489e6daee91",
          "payorId": "046b6c7f-0b8a-43b9-b35d-6489e6daee91",
          "notifications": {
            "minimumBalance": 120000
          }
        },
        "properties": {
          "id": {
            "description": "Source Account Id",
            "format": "uuid",
            "type": "string"
          },
          "balance": {
            "description": "Decimal implied",
            "example": 1203489,
            "format": "int64",
            "type": "integer"
          },
          "currency": {
            "description": "Valid ISO 4217 3 letter currency code. See the <a href=\"https://www.iso.org/iso-4217-currency-codes.html\" target=\"_blank\" a>ISO specification</a> for details.",
            "example": "USD",
            "maxLength": 3,
            "minLength": 3,
            "pattern": "^[A-Z]{3}$",
            "title": "ISO Currency Code",
            "type": "string"
          },
          "fundingRef": {
            "description": "The funding reference (will not be set for DECOUPLED accounts).",
            "example": "a1b2c3d4",
            "type": "string"
          },
          "physicalAccountName": {
            "description": "The physical account name (will not be set for DECOUPLED accounts).",
            "example": "VELO_FBO_MYBANKA_USD",
            "type": "string"
          },
          "railsId": {
            "example": "BOA_RAIL",
            "type": "string"
          },
          "payorId": {
            "format": "uuid",
            "type": "string"
          },
          "name": {
            "example": "MyAccountName",
            "type": "string"
          },
          "pooled": {
            "description": "The pooled account flag (will not be set for DECOUPLED accounts).",
            "type": "boolean"
          },
          "customerId": {
            "example": "Joe Customer",
            "nullable": true,
            "type": "string"
          },
          "physicalAccountId": {
            "description": "The physical account id (will not be set for DECOUPLED accounts).",
            "format": "uuid",
            "type": "string"
          },
          "notifications": {
            "$ref": "#/components/schemas/NotificationsV3"
          },
          "autoTopUpConfig": {
            "$ref": "#/components/schemas/AutoTopUpConfigV3"
          },
          "type": {
            "example": "FBO",
            "type": "string"
          },
          "country": {
            "description": "Valid ISO 3166 2 character country code. See the <a href=\"https://www.iso.org/iso-3166-country-codes.html\" target=\"_blank\" a>ISO specification</a> for details.",
            "example": "US",
            "maxLength": 2,
            "minLength": 2,
            "pattern": "^[A-Z]{2}$",
            "title": "ISO 3166 2 Character Country Code",
            "type": "string"
          },
          "deleted": {
            "description": "An optional flag for whether the source account has been deleted. Only present in the response if true.",
            "type": "boolean"
          },
          "userDeleted": {
            "description": "An optional flag for whether the source account has been deleted by a user. Only present in the response if true.",
            "type": "boolean"
          },
          "deletedAt": {
            "description": "An optional timestamp when the source account has been deleted. Only present in the response if deleted.",
            "example": "2021-01-27T10:08:25.701Z",
            "format": "date-time",
            "type": "string"
          }
        },
        "required": [
          "id",
          "railsId",
          "type"
        ],
        "type": "object"
      },
      "TransferRequestV3": {
        "example": {
          "amount": 800828191,
          "currency": "USD",
          "toSourceAccountId": "046b6c7f-0b8a-43b9-b35d-6489e6daee91"
        },
        "properties": {
          "toSourceAccountId": {
            "description": "The 'to' source account id, which will be credited",
            "format": "uuid",
            "type": "string"
          },
          "amount": {
            "description": "Amount to transfer, in minor units",
            "format": "int64",
            "maximum": 9999999999,
            "minimum": 1,
            "type": "integer"
          },
          "currency": {
            "description": "Valid ISO 4217 3 letter currency code. See the <a href=\"https://www.iso.org/iso-4217-currency-codes.html\" target=\"_blank\" a>ISO specification</a> for details.",
            "example": "USD",
            "maxLength": 3,
            "minLength": 3,
            "pattern": "^[A-Z]{3}$",
            "title": "ISO Currency Code",
            "type": "string"
          }
        },
        "required": [
          "amount",
          "currency",
          "toSourceAccountId"
        ],
        "type": "object"
      },
      "SetNotificationsRequest_2": {
        "properties": {
          "minimumBalance": {
            "description": "Amount to set as minimum balance for notifications in minor units",
            "example": 10000000,
            "format": "int64",
            "maximum": 9999999999,
            "minimum": 0,
            "type": "integer"
          }
        },
        "required": [
          "minimumBalance"
        ],
        "type": "object"
      },
      "FundingAccountTypeV2": {
        "description": "Funding account type. One of the following values: FBO, PRIVATE",
        "example": "FBO",
        "type": "string"
      },
      "ListFundingAccountsResponseV2": {
        "description": "List Funding Accounts Response Object",
        "example": {
          "links": [
            {
              "rel": "first",
              "href": "https://api.sandbox.velopayments.com/v2/sourceAccounts?payorId=a2967711-df07-41e5-b5ea-f563088911c6&page=1&pageSize=0&sort=fundingRef:asc"
            },
            {
              "rel": "first",
              "href": "https://api.sandbox.velopayments.com/v2/sourceAccounts?payorId=a2967711-df07-41e5-b5ea-f563088911c6&page=1&pageSize=0&sort=fundingRef:asc"
            }
          ],
          "page": {
            "numberOfElements": 1,
            "totalPages": 2,
            "pageSize": 25,
            "page": 1,
            "totalElements": 1
          },
          "content": [
            {
              "routingNumber": 12345678,
              "country": "US",
              "archived": true,
              "accountName": "Payor Corp",
              "name": "My Funding Account",
              "currency": "USD",
              "id": "046b6c7f-0b8a-43b9-b35d-6489e6daee91",
              "payorId": "046b6c7f-0b8a-43b9-b35d-6489e6daee91",
              "accountNumber": "7001001234",
              "type": "FBO"
            },
            {
              "routingNumber": 12345678,
              "country": "US",
              "archived": true,
              "accountName": "Payor Corp",
              "name": "My Funding Account",
              "currency": "USD",
              "id": "046b6c7f-0b8a-43b9-b35d-6489e6daee91",
              "payorId": "046b6c7f-0b8a-43b9-b35d-6489e6daee91",
              "accountNumber": "7001001234",
              "type": "FBO"
            }
          ]
        },
        "properties": {
          "page": {
            "$ref": "#/components/schemas/ListFundingAccountsResponseV2_page"
          },
          "links": {
            "items": {
              "$ref": "#/components/schemas/ListSourceAccountResponseV2_links"
            },
            "type": "array"
          },
          "content": {
            "items": {
              "$ref": "#/components/schemas/FundingAccountResponseV2"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "CreateFundingAccountRequestV2": {
        "example": {
          "routingNumber": "routingNumber",
          "accountName": "accountName",
          "name": "name",
          "currency": "USD",
          "payorId": "046b6c7f-0b8a-43b9-b35d-6489e6daee91",
          "type": "FBO",
          "accountNumber": "accountNumber"
        },
        "properties": {
          "type": {
            "enum": [
              "FBO",
              "PRIVATE"
            ],
            "type": "string"
          },
          "name": {
            "maxLength": 30,
            "minLength": 3,
            "type": "string"
          },
          "payorId": {
            "format": "uuid",
            "type": "string"
          },
          "accountName": {
            "description": "Required if type is either FBO or PRIVATE",
            "maxLength": 22,
            "minLength": 1,
            "type": "string"
          },
          "accountNumber": {
            "description": "Required if type is either FBO or PRIVATE",
            "maxLength": 17,
            "minLength": 4,
            "type": "string"
          },
          "routingNumber": {
            "description": "Required if type is either FBO or PRIVATE",
            "maxLength": 9,
            "minLength": 6,
            "type": "string"
          },
          "currency": {
            "description": "ISO 4217 currency code, Required if type is PRIVATE",
            "example": "USD",
            "maxLength": 3,
            "minLength": 3,
            "type": "string"
          }
        },
        "required": [
          "name",
          "payorId",
          "type"
        ],
        "type": "object"
      },
      "FundingAccountResponseV2": {
        "example": {
          "routingNumber": 12345678,
          "country": "US",
          "archived": true,
          "accountName": "Payor Corp",
          "name": "My Funding Account",
          "currency": "USD",
          "id": "046b6c7f-0b8a-43b9-b35d-6489e6daee91",
          "payorId": "046b6c7f-0b8a-43b9-b35d-6489e6daee91",
          "accountNumber": "7001001234",
          "type": "FBO"
        },
        "properties": {
          "id": {
            "description": "Funding Account Id",
            "format": "uuid",
            "type": "string"
          },
          "payorId": {
            "format": "uuid",
            "type": "string"
          },
          "accountName": {
            "description": "name on the bank account",
            "example": "Payor Corp",
            "type": "string"
          },
          "accountNumber": {
            "description": "bank account number",
            "example": "7001001234",
            "type": "string"
          },
          "routingNumber": {
            "description": "bank account routing number",
            "example": 12345678,
            "type": "string"
          },
          "name": {
            "description": "name of funding account",
            "example": "My Funding Account",
            "type": "string"
          },
          "currency": {
            "description": "Valid ISO 4217 3 letter currency code. See the <a href=\"https://www.iso.org/iso-4217-currency-codes.html\" target=\"_blank\" a>ISO specification</a> for details.",
            "example": "USD",
            "maxLength": 3,
            "minLength": 3,
            "pattern": "^[A-Z]{3}$",
            "title": "ISO Currency Code",
            "type": "string"
          },
          "country": {
            "description": "ISO 3166-1 2 letter country code (upper case)",
            "example": "US",
            "maxLength": 2,
            "minLength": 2,
            "type": "string"
          },
          "type": {
            "description": "Funding account type. One of the following values: FBO, PRIVATE",
            "example": "FBO",
            "type": "string"
          },
          "archived": {
            "description": "A flag for whether the funding account has been archived.  Only present in the response if true.",
            "type": "boolean"
          }
        },
        "type": "object"
      },
      "PageResourceFundingPayorStatusAuditResponseFundingPayorStatusAuditResponse": {
        "example": {
          "links": [
            {
              "rel": "rel",
              "href": "href"
            },
            {
              "rel": "rel",
              "href": "href"
            }
          ],
          "page": {
            "numberOfElements": 0,
            "totalPages": 1,
            "pageSize": 5,
            "page": 5,
            "totalElements": 6
          },
          "content": [
            {
              "amount": 2,
              "fundingId": "046b6c7f-0b8a-43b9-b35d-6489e6daee91",
              "currency": "USD",
              "status": "status"
            },
            {
              "amount": 2,
              "fundingId": "046b6c7f-0b8a-43b9-b35d-6489e6daee91",
              "currency": "USD",
              "status": "status"
            }
          ]
        },
        "properties": {
          "links": {
            "items": {
              "$ref": "#/components/schemas/LinkForResponse"
            },
            "type": "array",
            "xml": {
              "name": "link",
              "namespace": "http://www.w3.org/2005/Atom"
            }
          },
          "page": {
            "$ref": "#/components/schemas/PageForResponse"
          },
          "content": {
            "items": {
              "$ref": "#/components/schemas/FundingPayorStatusAuditResponse"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "FundingResponse": {
        "example": {
          "physicalAccountName": "physicalAccountName",
          "allocationDate": "2000-01-23T04:56:07.000Z",
          "reason": "reason",
          "amount": 0,
          "sourceAccountId": "046b6c7f-0b8a-43b9-b35d-6489e6daee91",
          "fundingId": "046b6c7f-0b8a-43b9-b35d-6489e6daee91",
          "fundingAccountType": "FBO",
          "detectedFundingRef": "detectedFundingRef",
          "allocationType": "allocationType",
          "hiddenDate": "2000-01-23T04:56:07.000Z",
          "currency": "USD",
          "payorId": "046b6c7f-0b8a-43b9-b35d-6489e6daee91",
          "text": "text",
          "status": "ALLOCATED"
        },
        "properties": {
          "fundingId": {
            "format": "uuid",
            "type": "string"
          },
          "payorId": {
            "format": "uuid",
            "type": "string"
          },
          "allocationDate": {
            "format": "date-time",
            "type": "string"
          },
          "detectedFundingRef": {
            "type": "string"
          },
          "amount": {
            "format": "int64",
            "type": "integer"
          },
          "currency": {
            "description": "Valid ISO 4217 3 letter currency code. See the <a href=\"https://www.iso.org/iso-4217-currency-codes.html\" target=\"_blank\" a>ISO specification</a> for details.",
            "example": "USD",
            "maxLength": 3,
            "minLength": 3,
            "pattern": "^[A-Z]{3}$",
            "title": "ISO Currency Code",
            "type": "string"
          },
          "text": {
            "type": "string"
          },
          "physicalAccountName": {
            "type": "string"
          },
          "sourceAccountId": {
            "format": "uuid",
            "type": "string"
          },
          "allocationType": {
            "description": "Funding Allocation Type. One of the following values: AUTOMATIC, MANUAL",
            "type": "string"
          },
          "reason": {
            "type": "string"
          },
          "hiddenDate": {
            "format": "date-time",
            "type": "string"
          },
          "fundingAccountType": {
            "description": "Funding Account Type. One of the following values: FBO, PRIVATE",
            "example": "FBO",
            "type": "string"
          },
          "status": {
            "description": "Current status of the funding. One of the follwing values: PENDING, UNALLOCATED, ALLOCATED, HIDDEN, RETURNED, RETURNING, BULK_RETURN, OTHER",
            "example": "ALLOCATED",
            "type": "string"
          }
        },
        "required": [
          "allocationDate",
          "amount",
          "currency",
          "fundingAccountType",
          "fundingId",
          "payorId",
          "status"
        ],
        "type": "object"
      },
      "CreateTransactionRequest": {
        "example": {
          "transactionMetadata": {
            "key": "any_value"
          },
          "transactionReference": "myInvoiceNumber-1234567890",
          "payorId": "046b6c7f-0b8a-43b9-b35d-6489e6daee91",
          "sourceAccountName": "Payor_FOO_USD_Account"
        },
        "properties": {
          "payorId": {
            "description": "Indicates the Payor creating the Transaction and which matches the payorId on the provided source account",
            "format": "uuid",
            "type": "string"
          },
          "sourceAccountName": {
            "description": "The name of the source account that the new Transaction will be associated with and any funding containing the transactionShortCode will credit.\n",
            "example": "Payor_FOO_USD_Account",
            "maxLength": 100,
            "minLength": 3,
            "nullable": false,
            "type": "string"
          },
          "transactionReference": {
            "description": "The payors own reference for the transaction that can later be used for querying and retrieval.\n",
            "example": "myInvoiceNumber-1234567890",
            "maxLength": 100,
            "minLength": 6,
            "nullable": false,
            "type": "string"
          },
          "transactionMetadata": {
            "additionalProperties": {
              "description": "The value associated the metadata key.",
              "example": "any_value",
              "maxLength": 4000,
              "minLength": 1,
              "type": "string"
            },
            "description": "Optional metadata that will be attached to the created transaction and can that can be retrieved later.|\nThe total length of all the keys and values provided in the metadata must be no more than 4000 chars.\n",
            "type": "object"
          }
        },
        "required": [
          "payorId",
          "sourceAccountName",
          "transactionReference"
        ],
        "type": "object"
      },
      "CreateTransactionResponse": {
        "example": {
          "transactionId": "4d88e559-d057-45b1-8d8b-b9ccc06f4503",
          "transactionShortCode": "T1234ABC"
        },
        "properties": {
          "transactionId": {
            "description": "The Id of the newly created transaction\n",
            "example": "4d88e559-d057-45b1-8d8b-b9ccc06f4503",
            "format": "uuid",
            "type": "string"
          },
          "transactionShortCode": {
            "description": "The short code for the transaction that can be used when sending funds into the platform\n",
            "example": "T1234ABC",
            "type": "string"
          }
        },
        "required": [
          "transactionId",
          "transactionShortCode"
        ],
        "type": "object"
      },
      "TransactionResponse": {
        "example": {
          "createdAt": "2021-01-27T10:08:25.701Z",
          "sourceAccountId": "7faf83a7-77e2-40bc-9e78-7d18fa2bb63e",
          "transactionMetadata": {
            "key": "any_value"
          },
          "balance": 800828190,
          "transactionReference": "myInvoiceNumber-1234567890",
          "currency": "USD",
          "payorId": "046b6c7f-0b8a-43b9-b35d-6489e6daee91",
          "transactionId": "4d88e559-d057-45b1-8d8b-b9ccc06f4503",
          "transactionShortCode": "T1234ABC",
          "sourceAccountName": "Payor_FOO_USD_Account"
        },
        "properties": {
          "transactionId": {
            "description": "The Id of the transaction\n",
            "example": "4d88e559-d057-45b1-8d8b-b9ccc06f4503",
            "format": "uuid",
            "type": "string"
          },
          "transactionShortCode": {
            "description": "The short code for the transaction that can be used when sending funds into the platform\n",
            "example": "T1234ABC",
            "type": "string"
          },
          "payorId": {
            "description": "Indicates the Payor of the Transaction and which matches the payorId on the provided source account",
            "format": "uuid",
            "type": "string"
          },
          "sourceAccountName": {
            "description": "The name of the source account associated with the Transaction\n",
            "example": "Payor_FOO_USD_Account",
            "type": "string"
          },
          "sourceAccountId": {
            "description": "The Id of the source account associated with the Transaction\n",
            "example": "7faf83a7-77e2-40bc-9e78-7d18fa2bb63e",
            "format": "uuid",
            "type": "string"
          },
          "transactionReference": {
            "description": "The payors own reference for the transaction\n",
            "example": "myInvoiceNumber-1234567890",
            "type": "string"
          },
          "transactionMetadata": {
            "additionalProperties": {
              "description": "The value associated the metadata key.",
              "example": "any_value",
              "type": "string"
            },
            "description": "Optional metadata attached to the transaction at creation time.\n",
            "nullable": true,
            "type": "object"
          },
          "balance": {
            "description": "The total amount of transaction in minor units\n",
            "format": "int64",
            "maximum": 9999999999,
            "minimum": 0,
            "type": "integer"
          },
          "currency": {
            "description": "Valid ISO 4217 3 letter currency code. See the <a href=\"https://www.iso.org/iso-4217-currency-codes.html\" target=\"_blank\" a>ISO specification</a> for details.",
            "example": "USD",
            "maxLength": 3,
            "minLength": 3,
            "pattern": "^[A-Z]{3}$",
            "title": "ISO Currency Code",
            "type": "string"
          },
          "createdAt": {
            "description": "A timestamp when the transaction has been created.",
            "example": "2021-01-27T10:08:25.701Z",
            "format": "date-time",
            "type": "string"
          }
        },
        "required": [
          "transactionId",
          "transactionShortCode"
        ],
        "type": "object"
      },
      "GetFundingsResponse": {
        "description": "List Users Response Object",
        "example": {
          "links": [
            {
              "rel": "first",
              "href": "https://api.sandbox.velopayments.com/v1/paymentaudit/fundings?payorId=2a5d8af2-a1ed-4d7f-b9a7-ebe4b333be5a&page=1&pageSize=10"
            },
            {
              "rel": "first",
              "href": "https://api.sandbox.velopayments.com/v1/paymentaudit/fundings?payorId=2a5d8af2-a1ed-4d7f-b9a7-ebe4b333be5a&page=1&pageSize=10"
            }
          ],
          "page": {
            "numberOfElements": 12,
            "totalPages": 2,
            "pageSize": 25,
            "page": 1,
            "totalElements": 33
          },
          "content": [
            {
              "dateTime": "2000-01-23T04:56:07.000Z",
              "fundingAccountName": "fundingAccountName",
              "amount": 120000,
              "fundingType": "fundingType",
              "currency": "USD",
              "topupType": "topupType",
              "events": [
                {
                  "principal": "principal",
                  "eventId": "046b6c7f-0b8a-43b9-b35d-6489e6daee91",
                  "eventDateTime": "2000-01-23T04:56:07.000Z",
                  "fundingEventType": "fundingEventType"
                },
                {
                  "principal": "principal",
                  "eventId": "046b6c7f-0b8a-43b9-b35d-6489e6daee91",
                  "eventDateTime": "2000-01-23T04:56:07.000Z",
                  "fundingEventType": "fundingEventType"
                }
              ],
              "status": "status",
              "sourceAccountName": "sourceAccountName"
            },
            {
              "dateTime": "2000-01-23T04:56:07.000Z",
              "fundingAccountName": "fundingAccountName",
              "amount": 120000,
              "fundingType": "fundingType",
              "currency": "USD",
              "topupType": "topupType",
              "events": [
                {
                  "principal": "principal",
                  "eventId": "046b6c7f-0b8a-43b9-b35d-6489e6daee91",
                  "eventDateTime": "2000-01-23T04:56:07.000Z",
                  "fundingEventType": "fundingEventType"
                },
                {
                  "principal": "principal",
                  "eventId": "046b6c7f-0b8a-43b9-b35d-6489e6daee91",
                  "eventDateTime": "2000-01-23T04:56:07.000Z",
                  "fundingEventType": "fundingEventType"
                }
              ],
              "status": "status",
              "sourceAccountName": "sourceAccountName"
            }
          ]
        },
        "properties": {
          "page": {
            "$ref": "#/components/schemas/PagedUserResponse_page"
          },
          "links": {
            "items": {
              "$ref": "#/components/schemas/GetFundingsResponse_links"
            },
            "type": "array"
          },
          "content": {
            "items": {
              "$ref": "#/components/schemas/FundingAudit"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "GetPayoutStatistics": {
        "example": {
          "thisMonthFailedPaymentsCount": 6,
          "thisMonthPayoutsCount": 0
        },
        "properties": {
          "thisMonthPayoutsCount": {
            "type": "integer"
          },
          "thisMonthFailedPaymentsCount": {
            "type": "integer"
          }
        },
        "required": [
          "thisMonthFailedPaymentsCount",
          "thisMonthPayoutsCount"
        ],
        "type": "object"
      },
      "PaymentDeltaResponseV1": {
        "description": "List Payment Changes Response Object",
        "example": {
          "links": [
            {
              "rel": "rel",
              "href": "href"
            },
            {
              "rel": "rel",
              "href": "href"
            }
          ],
          "page": {
            "numberOfElements": 0,
            "totalPages": 1,
            "pageSize": 5,
            "page": 5,
            "totalElements": 6
          },
          "content": [
            {
              "paymentId": "046b6c7f-0b8a-43b9-b35d-6489e6daee91",
              "payorPaymentId": "payorPaymentId",
              "sourceCurrency": "sourceCurrency",
              "sourceAmount": 6,
              "payoutId": "046b6c7f-0b8a-43b9-b35d-6489e6daee91",
              "paymentCurrency": "paymentCurrency",
              "paymentAmount": 0,
              "status": "status"
            },
            {
              "paymentId": "046b6c7f-0b8a-43b9-b35d-6489e6daee91",
              "payorPaymentId": "payorPaymentId",
              "sourceCurrency": "sourceCurrency",
              "sourceAmount": 6,
              "payoutId": "046b6c7f-0b8a-43b9-b35d-6489e6daee91",
              "paymentCurrency": "paymentCurrency",
              "paymentAmount": 0,
              "status": "status"
            }
          ]
        },
        "properties": {
          "page": {
            "$ref": "#/components/schemas/PagedPayeeInvitationStatusResponseV3_page"
          },
          "links": {
            "items": {
              "$ref": "#/components/schemas/PagedPayeeResponseV3_links"
            },
            "type": "array"
          },
          "content": {
            "items": {
              "$ref": "#/components/schemas/PaymentDeltaV1"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "GetPayoutsResponseV3": {
        "description": "List Payouts Response",
        "example": {
          "links": [
            {
              "rel": "first",
              "href": "https://example.com"
            },
            {
              "rel": "first",
              "href": "https://example.com"
            }
          ],
          "page": {
            "numberOfElements": 12,
            "totalPages": 123,
            "pageSize": 25,
            "page": 1,
            "totalElements": 123
          },
          "content": [
            {
              "sourceAccountSummary": [
                {
                  "sourceAccountId": "046b6c7f-0b8a-43b9-b35d-6489e6daee91",
                  "currency": "currency",
                  "totalCost": 3434
                },
                {
                  "sourceAccountId": "046b6c7f-0b8a-43b9-b35d-6489e6daee91",
                  "currency": "currency",
                  "totalCost": 3434
                }
              ],
              "submittedDateTime": "submittedDateTime",
              "payorId": "046b6c7f-0b8a-43b9-b35d-6489e6daee91",
              "totalIncompletePayments": 123,
              "fxSummaries": [
                {
                  "invertedRate": 1.12,
                  "rate": 1.12,
                  "sourceCurrency": "sourceCurrency",
                  "totalPaymentAmount": 1234,
                  "paymentCurrency": "paymentCurrency",
                  "quoteId": "046b6c7f-0b8a-43b9-b35d-6489e6daee91",
                  "totalCost": 1234,
                  "fundingStatus": "fundingStatus",
                  "creationDateTime": "2000-01-23T04:56:07.000Z",
                  "status": "status"
                },
                {
                  "invertedRate": 1.12,
                  "rate": 1.12,
                  "sourceCurrency": "sourceCurrency",
                  "totalPaymentAmount": 1234,
                  "paymentCurrency": "paymentCurrency",
                  "quoteId": "046b6c7f-0b8a-43b9-b35d-6489e6daee91",
                  "totalCost": 1234,
                  "fundingStatus": "fundingStatus",
                  "creationDateTime": "2000-01-23T04:56:07.000Z",
                  "status": "status"
                }
              ],
              "payoutId": "046b6c7f-0b8a-43b9-b35d-6489e6daee91",
              "withdrawnDateTime": "withdrawnDateTime",
              "totalPayments": 123,
              "instructedDateTime": "instructedDateTime",
              "totalFailedPayments": 123,
              "status": "status",
              "payoutMemo": "payoutMemo"
            },
            {
              "sourceAccountSummary": [
                {
                  "sourceAccountId": "046b6c7f-0b8a-43b9-b35d-6489e6daee91",
                  "currency": "currency",
                  "totalCost": 3434
                },
                {
                  "sourceAccountId": "046b6c7f-0b8a-43b9-b35d-6489e6daee91",
                  "currency": "currency",
                  "totalCost": 3434
                }
              ],
              "submittedDateTime": "submittedDateTime",
              "payorId": "046b6c7f-0b8a-43b9-b35d-6489e6daee91",
              "totalIncompletePayments": 123,
              "fxSummaries": [
                {
                  "invertedRate": 1.12,
                  "rate": 1.12,
                  "sourceCurrency": "sourceCurrency",
                  "totalPaymentAmount": 1234,
                  "paymentCurrency": "paymentCurrency",
                  "quoteId": "046b6c7f-0b8a-43b9-b35d-6489e6daee91",
                  "totalCost": 1234,
                  "fundingStatus": "fundingStatus",
                  "creationDateTime": "2000-01-23T04:56:07.000Z",
                  "status": "status"
                },
                {
                  "invertedRate": 1.12,
                  "rate": 1.12,
                  "sourceCurrency": "sourceCurrency",
                  "totalPaymentAmount": 1234,
                  "paymentCurrency": "paymentCurrency",
                  "quoteId": "046b6c7f-0b8a-43b9-b35d-6489e6daee91",
                  "totalCost": 1234,
                  "fundingStatus": "fundingStatus",
                  "creationDateTime": "2000-01-23T04:56:07.000Z",
                  "status": "status"
                }
              ],
              "payoutId": "046b6c7f-0b8a-43b9-b35d-6489e6daee91",
              "withdrawnDateTime": "withdrawnDateTime",
              "totalPayments": 123,
              "instructedDateTime": "instructedDateTime",
              "totalFailedPayments": 123,
              "status": "status",
              "payoutMemo": "payoutMemo"
            }
          ]
        },
        "properties": {
          "page": {
            "$ref": "#/components/schemas/GetPayoutsResponseV3_page"
          },
          "links": {
            "items": {
              "$ref": "#/components/schemas/GetPayoutsResponseV3_links"
            },
            "type": "array"
          },
          "content": {
            "items": {
              "$ref": "#/components/schemas/PayoutSummaryAuditV3"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "GetPaymentsForPayoutResponseV3": {
        "description": "List Payments for payout",
        "example": {
          "summary": {
            "incompletePayments": 123,
            "confirmedPayments": 123,
            "releasedPayments": 123,
            "submittedDateTime": "2000-01-23T04:56:07.000Z",
            "payoutStatus": "payoutStatus",
            "withdrawnDateTime": "2000-01-23T04:56:07.000Z",
            "totalPayments": 123,
            "instructedDateTime": "2000-01-23T04:56:07.000Z",
            "payoutMemo": "Payment Memo value",
            "failedPayments": 0
          },
          "links": [
            {
              "rel": "first",
              "href": "https://example.com"
            },
            {
              "rel": "first",
              "href": "https://example.com"
            }
          ],
          "page": {
            "numberOfElements": 12,
            "totalPages": 10,
            "pageSize": 25,
            "page": 1,
            "totalElements": 12
          },
          "content": [
            {
              "traceNumber": "abodu123",
              "accountName": "My Account Name",
              "sourceCurrency": "sourceCurrency",
              "paymentMemo": "Payment memo",
              "paymentAmount": 0,
              "fundingStatus": "fundingStatus",
              "railsBatchId": "railsBatchId",
              "paymentChannelName": "My Payment Channel",
              "paymentScheme": "paymentScheme",
              "filenameReference": "file ref",
              "rate": 6.0274563,
              "paymentId": "046b6c7f-0b8a-43b9-b35d-6489e6daee91",
              "countryCode": "US",
              "returnReason": "Some Reason Value",
              "submittedDateTime": "2000-01-23T04:56:07.000Z",
              "sourceAmount": 12345,
              "railsId": "asdf123",
              "payeeId": "046b6c7f-0b8a-43b9-b35d-6489e6daee91",
              "payorId": "046b6c7f-0b8a-43b9-b35d-6489e6daee91",
              "events": [
                {
                  "principal": "Prinicple example",
                  "eventId": "046b6c7f-0b8a-43b9-b35d-6489e6daee91",
                  "eventDateTime": "2000-01-23T04:56:07.000Z",
                  "routingNumber": "123123123",
                  "accountName": "My account",
                  "iban": "DE89 3704 0044 0532 0130 00",
                  "sourceCurrency": "sourceCurrency",
                  "sourceAmount": 1299,
                  "eventType": "eventType",
                  "paymentCurrency": "paymentCurrency",
                  "accountNumber": "123123123",
                  "paymentAmount": 1299
                },
                {
                  "principal": "Prinicple example",
                  "eventId": "046b6c7f-0b8a-43b9-b35d-6489e6daee91",
                  "eventDateTime": "2000-01-23T04:56:07.000Z",
                  "routingNumber": "123123123",
                  "accountName": "My account",
                  "iban": "DE89 3704 0044 0532 0130 00",
                  "sourceCurrency": "sourceCurrency",
                  "sourceAmount": 1299,
                  "eventType": "eventType",
                  "paymentCurrency": "paymentCurrency",
                  "accountNumber": "123123123",
                  "paymentAmount": 1299
                }
              ],
              "payorName": "payorName",
              "sourceAccountName": "My Account",
              "paymentChannelId": "123asdf",
              "invertedRate": 1.4658129,
              "sourceAccountId": "046b6c7f-0b8a-43b9-b35d-6489e6daee91",
              "individualIdentificationNumber": "1231231adf",
              "railsPaymentId": "railsPaymentId",
              "accountNumber": "123123232323",
              "quoteId": "046b6c7f-0b8a-43b9-b35d-6489e6daee91",
              "remoteId": "aasdf123",
              "routingNumber": "123123123123",
              "returnCost": 1232,
              "iban": "DE89 3704 0044 0532 0130 00",
              "payorPaymentId": "123123asdf",
              "paymentCurrency": "paymentCurrency",
              "rejectionReason": "rejectionReason",
              "status": "status"
            },
            {
              "traceNumber": "abodu123",
              "accountName": "My Account Name",
              "sourceCurrency": "sourceCurrency",
              "paymentMemo": "Payment memo",
              "paymentAmount": 0,
              "fundingStatus": "fundingStatus",
              "railsBatchId": "railsBatchId",
              "paymentChannelName": "My Payment Channel",
              "paymentScheme": "paymentScheme",
              "filenameReference": "file ref",
              "rate": 6.0274563,
              "paymentId": "046b6c7f-0b8a-43b9-b35d-6489e6daee91",
              "countryCode": "US",
              "returnReason": "Some Reason Value",
              "submittedDateTime": "2000-01-23T04:56:07.000Z",
              "sourceAmount": 12345,
              "railsId": "asdf123",
              "payeeId": "046b6c7f-0b8a-43b9-b35d-6489e6daee91",
              "payorId": "046b6c7f-0b8a-43b9-b35d-6489e6daee91",
              "events": [
                {
                  "principal": "Prinicple example",
                  "eventId": "046b6c7f-0b8a-43b9-b35d-6489e6daee91",
                  "eventDateTime": "2000-01-23T04:56:07.000Z",
                  "routingNumber": "123123123",
                  "accountName": "My account",
                  "iban": "DE89 3704 0044 0532 0130 00",
                  "sourceCurrency": "sourceCurrency",
                  "sourceAmount": 1299,
                  "eventType": "eventType",
                  "paymentCurrency": "paymentCurrency",
                  "accountNumber": "123123123",
                  "paymentAmount": 1299
                },
                {
                  "principal": "Prinicple example",
                  "eventId": "046b6c7f-0b8a-43b9-b35d-6489e6daee91",
                  "eventDateTime": "2000-01-23T04:56:07.000Z",
                  "routingNumber": "123123123",
                  "accountName": "My account",
                  "iban": "DE89 3704 0044 0532 0130 00",
                  "sourceCurrency": "sourceCurrency",
                  "sourceAmount": 1299,
                  "eventType": "eventType",
                  "paymentCurrency": "paymentCurrency",
                  "accountNumber": "123123123",
                  "paymentAmount": 1299
                }
              ],
              "payorName": "payorName",
              "sourceAccountName": "My Account",
              "paymentChannelId": "123asdf",
              "invertedRate": 1.4658129,
              "sourceAccountId": "046b6c7f-0b8a-43b9-b35d-6489e6daee91",
              "individualIdentificationNumber": "1231231adf",
              "railsPaymentId": "railsPaymentId",
              "accountNumber": "123123232323",
              "quoteId": "046b6c7f-0b8a-43b9-b35d-6489e6daee91",
              "remoteId": "aasdf123",
              "routingNumber": "123123123123",
              "returnCost": 1232,
              "iban": "DE89 3704 0044 0532 0130 00",
              "payorPaymentId": "123123asdf",
              "paymentCurrency": "paymentCurrency",
              "rejectionReason": "rejectionReason",
              "status": "status"
            }
          ]
        },
        "properties": {
          "summary": {
            "$ref": "#/components/schemas/GetPaymentsForPayoutResponseV3_summary"
          },
          "page": {
            "$ref": "#/components/schemas/GetPaymentsForPayoutResponseV3_page"
          },
          "links": {
            "items": {
              "$ref": "#/components/schemas/GetPayoutsResponseV3_links"
            },
            "type": "array"
          },
          "content": {
            "items": {
              "$ref": "#/components/schemas/PaymentResponseV3"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "ListPaymentsResponseV3": {
        "description": "List Payments Response Object",
        "example": {
          "links": [
            {
              "rel": "first",
              "href": "https://example.com"
            },
            {
              "rel": "first",
              "href": "https://example.com"
            }
          ],
          "page": {
            "numberOfElements": 12,
            "totalPages": 12,
            "pageSize": 25,
            "page": 1,
            "totalElements": 12
          },
          "content": [
            {
              "traceNumber": "abodu123",
              "accountName": "My Account Name",
              "sourceCurrency": "sourceCurrency",
              "paymentMemo": "Payment memo",
              "paymentAmount": 0,
              "fundingStatus": "fundingStatus",
              "railsBatchId": "railsBatchId",
              "paymentChannelName": "My Payment Channel",
              "paymentScheme": "paymentScheme",
              "filenameReference": "file ref",
              "rate": 6.0274563,
              "paymentId": "046b6c7f-0b8a-43b9-b35d-6489e6daee91",
              "countryCode": "US",
              "returnReason": "Some Reason Value",
              "submittedDateTime": "2000-01-23T04:56:07.000Z",
              "sourceAmount": 12345,
              "railsId": "asdf123",
              "payeeId": "046b6c7f-0b8a-43b9-b35d-6489e6daee91",
              "payorId": "046b6c7f-0b8a-43b9-b35d-6489e6daee91",
              "events": [
                {
                  "principal": "Prinicple example",
                  "eventId": "046b6c7f-0b8a-43b9-b35d-6489e6daee91",
                  "eventDateTime": "2000-01-23T04:56:07.000Z",
                  "routingNumber": "123123123",
                  "accountName": "My account",
                  "iban": "DE89 3704 0044 0532 0130 00",
                  "sourceCurrency": "sourceCurrency",
                  "sourceAmount": 1299,
                  "eventType": "eventType",
                  "paymentCurrency": "paymentCurrency",
                  "accountNumber": "123123123",
                  "paymentAmount": 1299
                },
                {
                  "principal": "Prinicple example",
                  "eventId": "046b6c7f-0b8a-43b9-b35d-6489e6daee91",
                  "eventDateTime": "2000-01-23T04:56:07.000Z",
                  "routingNumber": "123123123",
                  "accountName": "My account",
                  "iban": "DE89 3704 0044 0532 0130 00",
                  "sourceCurrency": "sourceCurrency",
                  "sourceAmount": 1299,
                  "eventType": "eventType",
                  "paymentCurrency": "paymentCurrency",
                  "accountNumber": "123123123",
                  "paymentAmount": 1299
                }
              ],
              "payorName": "payorName",
              "sourceAccountName": "My Account",
              "paymentChannelId": "123asdf",
              "invertedRate": 1.4658129,
              "sourceAccountId": "046b6c7f-0b8a-43b9-b35d-6489e6daee91",
              "individualIdentificationNumber": "1231231adf",
              "railsPaymentId": "railsPaymentId",
              "accountNumber": "123123232323",
              "quoteId": "046b6c7f-0b8a-43b9-b35d-6489e6daee91",
              "remoteId": "aasdf123",
              "routingNumber": "123123123123",
              "returnCost": 1232,
              "iban": "DE89 3704 0044 0532 0130 00",
              "payorPaymentId": "123123asdf",
              "paymentCurrency": "paymentCurrency",
              "rejectionReason": "rejectionReason",
              "status": "status"
            },
            {
              "traceNumber": "abodu123",
              "accountName": "My Account Name",
              "sourceCurrency": "sourceCurrency",
              "paymentMemo": "Payment memo",
              "paymentAmount": 0,
              "fundingStatus": "fundingStatus",
              "railsBatchId": "railsBatchId",
              "paymentChannelName": "My Payment Channel",
              "paymentScheme": "paymentScheme",
              "filenameReference": "file ref",
              "rate": 6.0274563,
              "paymentId": "046b6c7f-0b8a-43b9-b35d-6489e6daee91",
              "countryCode": "US",
              "returnReason": "Some Reason Value",
              "submittedDateTime": "2000-01-23T04:56:07.000Z",
              "sourceAmount": 12345,
              "railsId": "asdf123",
              "payeeId": "046b6c7f-0b8a-43b9-b35d-6489e6daee91",
              "payorId": "046b6c7f-0b8a-43b9-b35d-6489e6daee91",
              "events": [
                {
                  "principal": "Prinicple example",
                  "eventId": "046b6c7f-0b8a-43b9-b35d-6489e6daee91",
                  "eventDateTime": "2000-01-23T04:56:07.000Z",
                  "routingNumber": "123123123",
                  "accountName": "My account",
                  "iban": "DE89 3704 0044 0532 0130 00",
                  "sourceCurrency": "sourceCurrency",
                  "sourceAmount": 1299,
                  "eventType": "eventType",
                  "paymentCurrency": "paymentCurrency",
                  "accountNumber": "123123123",
                  "paymentAmount": 1299
                },
                {
                  "principal": "Prinicple example",
                  "eventId": "046b6c7f-0b8a-43b9-b35d-6489e6daee91",
                  "eventDateTime": "2000-01-23T04:56:07.000Z",
                  "routingNumber": "123123123",
                  "accountName": "My account",
                  "iban": "DE89 3704 0044 0532 0130 00",
                  "sourceCurrency": "sourceCurrency",
                  "sourceAmount": 1299,
                  "eventType": "eventType",
                  "paymentCurrency": "paymentCurrency",
                  "accountNumber": "123123123",
                  "paymentAmount": 1299
                }
              ],
              "payorName": "payorName",
              "sourceAccountName": "My Account",
              "paymentChannelId": "123asdf",
              "invertedRate": 1.4658129,
              "sourceAccountId": "046b6c7f-0b8a-43b9-b35d-6489e6daee91",
              "individualIdentificationNumber": "1231231adf",
              "railsPaymentId": "railsPaymentId",
              "accountNumber": "123123232323",
              "quoteId": "046b6c7f-0b8a-43b9-b35d-6489e6daee91",
              "remoteId": "aasdf123",
              "routingNumber": "123123123123",
              "returnCost": 1232,
              "iban": "DE89 3704 0044 0532 0130 00",
              "payorPaymentId": "123123asdf",
              "paymentCurrency": "paymentCurrency",
              "rejectionReason": "rejectionReason",
              "status": "status"
            }
          ]
        },
        "properties": {
          "page": {
            "$ref": "#/components/schemas/ListPaymentsResponseV3_page"
          },
          "links": {
            "items": {
              "$ref": "#/components/schemas/GetPayoutsResponseV3_links"
            },
            "type": "array"
          },
          "content": {
            "items": {
              "$ref": "#/components/schemas/PaymentResponseV3"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "PaymentResponseV3": {
        "example": {
          "traceNumber": "abodu123",
          "accountName": "My Account Name",
          "sourceCurrency": "sourceCurrency",
          "paymentMemo": "Payment memo",
          "paymentAmount": 0,
          "fundingStatus": "fundingStatus",
          "railsBatchId": "railsBatchId",
          "paymentChannelName": "My Payment Channel",
          "paymentScheme": "paymentScheme",
          "filenameReference": "file ref",
          "rate": 6.0274563,
          "paymentId": "046b6c7f-0b8a-43b9-b35d-6489e6daee91",
          "countryCode": "US",
          "returnReason": "Some Reason Value",
          "submittedDateTime": "2000-01-23T04:56:07.000Z",
          "sourceAmount": 12345,
          "railsId": "asdf123",
          "payeeId": "046b6c7f-0b8a-43b9-b35d-6489e6daee91",
          "payorId": "046b6c7f-0b8a-43b9-b35d-6489e6daee91",
          "events": [
            {
              "principal": "Prinicple example",
              "eventId": "046b6c7f-0b8a-43b9-b35d-6489e6daee91",
              "eventDateTime": "2000-01-23T04:56:07.000Z",
              "routingNumber": "123123123",
              "accountName": "My account",
              "iban": "DE89 3704 0044 0532 0130 00",
              "sourceCurrency": "sourceCurrency",
              "sourceAmount": 1299,
              "eventType": "eventType",
              "paymentCurrency": "paymentCurrency",
              "accountNumber": "123123123",
              "paymentAmount": 1299
            },
            {
              "principal": "Prinicple example",
              "eventId": "046b6c7f-0b8a-43b9-b35d-6489e6daee91",
              "eventDateTime": "2000-01-23T04:56:07.000Z",
              "routingNumber": "123123123",
              "accountName": "My account",
              "iban": "DE89 3704 0044 0532 0130 00",
              "sourceCurrency": "sourceCurrency",
              "sourceAmount": 1299,
              "eventType": "eventType",
              "paymentCurrency": "paymentCurrency",
              "accountNumber": "123123123",
              "paymentAmount": 1299
            }
          ],
          "payorName": "payorName",
          "sourceAccountName": "My Account",
          "paymentChannelId": "123asdf",
          "invertedRate": 1.4658129,
          "sourceAccountId": "046b6c7f-0b8a-43b9-b35d-6489e6daee91",
          "individualIdentificationNumber": "1231231adf",
          "railsPaymentId": "railsPaymentId",
          "accountNumber": "123123232323",
          "quoteId": "046b6c7f-0b8a-43b9-b35d-6489e6daee91",
          "remoteId": "aasdf123",
          "routingNumber": "123123123123",
          "returnCost": 1232,
          "iban": "DE89 3704 0044 0532 0130 00",
          "payorPaymentId": "123123asdf",
          "paymentCurrency": "paymentCurrency",
          "rejectionReason": "rejectionReason",
          "status": "status"
        },
        "properties": {
          "paymentId": {
            "description": "The id of the payment",
            "format": "uuid",
            "type": "string"
          },
          "payeeId": {
            "description": "The id of the paymeee",
            "format": "uuid",
            "type": "string"
          },
          "payorId": {
            "description": "The id of the payor",
            "format": "uuid",
            "type": "string"
          },
          "payorName": {
            "description": "The name of the payor",
            "type": "string"
          },
          "quoteId": {
            "description": "The quote Id used for the FX",
            "format": "uuid",
            "type": "string"
          },
          "sourceAccountId": {
            "description": "The id of the source account from which the payment was taken",
            "format": "uuid",
            "type": "string"
          },
          "sourceAccountName": {
            "description": "The name of the source account from which the payment was taken",
            "example": "My Account",
            "type": "string"
          },
          "remoteId": {
            "description": "The remote id by which the payor refers to the payee. Only populated once payment is confirmed",
            "example": "aasdf123",
            "type": "string"
          },
          "sourceAmount": {
            "description": "The source amount for the payment (amount debited to make the payment)",
            "example": 12345,
            "type": "integer"
          },
          "sourceCurrency": {
            "description": "ISO 3 character currency code",
            "maxLength": 3,
            "minLength": 3,
            "type": "string"
          },
          "paymentAmount": {
            "description": "The amount which the payee will receive",
            "type": "integer"
          },
          "paymentCurrency": {
            "description": "ISO 3 character currency code",
            "maxLength": 3,
            "minLength": 3,
            "type": "string"
          },
          "rate": {
            "description": "The FX rate for the payment, if FX was involved. **Note** that (depending on the role of the caller) this information may not be displayed",
            "format": "float",
            "type": "number"
          },
          "invertedRate": {
            "description": "The inverted FX rate for the payment, if FX was involved. **Note** that (depending on the role of the caller) this information may not be displayed",
            "format": "float",
            "type": "number"
          },
          "submittedDateTime": {
            "format": "date-time",
            "type": "string"
          },
          "status": {
            "description": "Current status of the payment. One of the following values: ACCEPTED, AWAITING_FUNDS, FUNDED, UNFUNDED, BANK_PAYMENT_REQUESTED, REJECTED, ACCEPTED_BY_RAILS, CONFIRMED, FAILED, WITHDRAWN",
            "type": "string"
          },
          "fundingStatus": {
            "description": "The funding status of the payment. One of the following values: [FUNDED, INSTRUCTED, UNFUNDED",
            "type": "string"
          },
          "routingNumber": {
            "description": "The routing number for the payment.",
            "example": "123123123123",
            "type": "string"
          },
          "accountNumber": {
            "description": "The account number for the account which will receive the payment.",
            "example": "123123232323",
            "type": "string"
          },
          "iban": {
            "description": "The iban for the payment.",
            "example": "DE89 3704 0044 0532 0130 00",
            "type": "string"
          },
          "paymentMemo": {
            "description": "The payment memo set by the payor",
            "example": "Payment memo",
            "type": "string"
          },
          "filenameReference": {
            "description": "ACH file payment was submitted in, if applicable",
            "example": "file ref",
            "type": "string"
          },
          "individualIdentificationNumber": {
            "description": "Individual Identification Number assigned to the payment in the ACH file, if applicable",
            "example": "1231231adf",
            "type": "string"
          },
          "traceNumber": {
            "description": "Trace Number assigned to the payment in the ACH file, if applicable",
            "example": "abodu123",
            "type": "string"
          },
          "payorPaymentId": {
            "example": "123123asdf",
            "type": "string"
          },
          "paymentChannelId": {
            "example": "123asdf",
            "type": "string"
          },
          "paymentChannelName": {
            "example": "My Payment Channel",
            "type": "string"
          },
          "accountName": {
            "example": "My Account Name",
            "type": "string"
          },
          "railsId": {
            "default": "RAILS ID UNAVAILABLE",
            "description": "The rails ID. Default value is RAILS ID UNAVAILABLE when not populated.",
            "example": "asdf123",
            "type": "string"
          },
          "countryCode": {
            "description": "The country code of the payment channel.",
            "example": "US",
            "type": "string"
          },
          "events": {
            "items": {
              "$ref": "#/components/schemas/PaymentEventResponseV3"
            },
            "type": "array"
          },
          "returnCost": {
            "description": "The return cost if a returned payment.",
            "example": 1232,
            "type": "integer"
          },
          "returnReason": {
            "example": "Some Reason Value",
            "type": "string"
          },
          "railsPaymentId": {
            "type": "string"
          },
          "railsBatchId": {
            "type": "string"
          },
          "paymentScheme": {
            "type": "string"
          },
          "rejectionReason": {
            "type": "string"
          }
        },
        "required": [
          "events",
          "fundingStatus",
          "payeeId",
          "paymentAmount",
          "paymentId",
          "payorId",
          "quoteId",
          "railsId",
          "sourceAccountId",
          "status",
          "submittedDateTime"
        ],
        "type": "object"
      },
      "PayorAmlTransactionV3": {
        "example": {
          "debitCurrency": "debitCurrency",
          "payeeType": "payeeType",
          "fxApplied": 5.962133916683182,
          "transactionTime": "transactionTime",
          "paymentMemo": "paymentMemo",
          "paymentAmount": 1,
          "returnCode": "returnCode",
          "rejectReason": "rejectReason",
          "fundingType": "fundingType",
          "paymentRails": "paymentRails",
          "debit": 0,
          "credit": 6,
          "paymentStatus": "paymentStatus",
          "sourceAccount": "sourceAccount",
          "returnFeeDescription": "returnFeeDescription",
          "returnDescription": "returnDescription",
          "transactionDate": "2000-01-23T00:00:00.000Z",
          "remoteId": "remoteId",
          "returnFee": "returnFee",
          "returnFeeCurrency": "returnFeeCurrency",
          "dateFundingRequested": "dateFundingRequested",
          "payorPaymentId": "payorPaymentId",
          "creditCurrency": "creditCurrency",
          "paymentCurrency": "paymentCurrency",
          "reportTransactionType": "reportTransactionType"
        },
        "properties": {
          "transactionDate": {
            "format": "date",
            "type": "string"
          },
          "transactionTime": {
            "type": "string"
          },
          "reportTransactionType": {
            "type": "string"
          },
          "debit": {
            "format": "int64",
            "type": "integer"
          },
          "debitCurrency": {
            "description": "ISO 4217 3 character currency code",
            "type": "string"
          },
          "credit": {
            "format": "int64",
            "type": "integer"
          },
          "creditCurrency": {
            "description": "ISO 4217 3 character currency code",
            "type": "string"
          },
          "returnFee": {
            "type": "string"
          },
          "returnFeeCurrency": {
            "description": "ISO 4217 3 character currency code",
            "type": "string"
          },
          "returnFeeDescription": {
            "type": "string"
          },
          "returnCode": {
            "type": "string"
          },
          "returnDescription": {
            "type": "string"
          },
          "fundingType": {
            "type": "string"
          },
          "dateFundingRequested": {
            "type": "string"
          },
          "remoteId": {
            "description": "Remote ID of the Payee, set by Payor",
            "type": "string"
          },
          "payeeType": {
            "type": "string"
          },
          "sourceAccount": {
            "type": "string"
          },
          "paymentAmount": {
            "format": "int64",
            "type": "integer"
          },
          "paymentCurrency": {
            "description": "ISO 4217 3 character currency code",
            "type": "string"
          },
          "paymentMemo": {
            "type": "string"
          },
          "paymentRails": {
            "type": "string"
          },
          "payorPaymentId": {
            "type": "string"
          },
          "paymentStatus": {
            "type": "string"
          },
          "rejectReason": {
            "type": "string"
          },
          "fxApplied": {
            "format": "double",
            "type": "number"
          }
        },
        "type": "object"
      },
      "GetPayoutsResponse": {
        "description": "List Payouts Response",
        "example": {
          "links": [
            {
              "rel": "rel",
              "href": "href"
            },
            {
              "rel": "rel",
              "href": "href"
            }
          ],
          "page": {
            "numberOfElements": 0,
            "totalPages": 1,
            "pageSize": 5,
            "page": 5,
            "totalElements": 6
          },
          "content": [
            {
              "dateTime": "2000-01-23T04:56:07.000Z",
              "sourceAccountSummary": [
                {
                  "sourceAccountId": "046b6c7f-0b8a-43b9-b35d-6489e6daee91",
                  "currency": "EUR",
                  "totalCost": 3344
                },
                {
                  "sourceAccountId": "046b6c7f-0b8a-43b9-b35d-6489e6daee91",
                  "currency": "EUR",
                  "totalCost": 3344
                }
              ],
              "payoutType": "payoutType",
              "totalReturnedPayments": 1,
              "fxSummaries": [
                {
                  "invertedRate": 123.23,
                  "rate": 123.23,
                  "sourceCurrency": "EUR",
                  "totalPaymentAmount": 34235,
                  "paymentCurrency": "EUR",
                  "quoteId": "046b6c7f-0b8a-43b9-b35d-6489e6daee91",
                  "totalCost": 5,
                  "fundingStatus": "fundingStatus",
                  "creationDateTime": "2000-01-23T04:56:07.000Z",
                  "status": "status"
                },
                {
                  "invertedRate": 123.23,
                  "rate": 123.23,
                  "sourceCurrency": "EUR",
                  "totalPaymentAmount": 34235,
                  "paymentCurrency": "EUR",
                  "quoteId": "046b6c7f-0b8a-43b9-b35d-6489e6daee91",
                  "totalCost": 5,
                  "fundingStatus": "fundingStatus",
                  "creationDateTime": "2000-01-23T04:56:07.000Z",
                  "status": "status"
                }
              ],
              "payoutId": "046b6c7f-0b8a-43b9-b35d-6489e6daee91",
              "totalPayments": 0,
              "schedule": {
                "scheduledFor": "2000-01-23T04:56:07.000Z",
                "scheduleStatus": "SCHEDULED",
                "notificationsEnabled": true,
                "scheduledBy": "Aphra Behn",
                "scheduledByPrincipalId": "8946953b-1e3b-49cf-9da4-b704cbb78f3e",
                "scheduledAt": "2000-01-23T04:56:07.000Z"
              },
              "submittedDateTime": "submittedDateTime",
              "payorId": "046b6c7f-0b8a-43b9-b35d-6489e6daee91",
              "totalIncompletePayments": 6,
              "withdrawnDateTime": "2000-01-23T04:56:07.000Z",
              "totalWithdrawnPayments": 5,
              "instructedDateTime": "instructedDateTime",
              "status": "status",
              "payoutMemo": "payoutMemo",
              "payorName": "payorName"
            },
            {
              "dateTime": "2000-01-23T04:56:07.000Z",
              "sourceAccountSummary": [
                {
                  "sourceAccountId": "046b6c7f-0b8a-43b9-b35d-6489e6daee91",
                  "currency": "EUR",
                  "totalCost": 3344
                },
                {
                  "sourceAccountId": "046b6c7f-0b8a-43b9-b35d-6489e6daee91",
                  "currency": "EUR",
                  "totalCost": 3344
                }
              ],
              "payoutType": "payoutType",
              "totalReturnedPayments": 1,
              "fxSummaries": [
                {
                  "invertedRate": 123.23,
                  "rate": 123.23,
                  "sourceCurrency": "EUR",
                  "totalPaymentAmount": 34235,
                  "paymentCurrency": "EUR",
                  "quoteId": "046b6c7f-0b8a-43b9-b35d-6489e6daee91",
                  "totalCost": 5,
                  "fundingStatus": "fundingStatus",
                  "creationDateTime": "2000-01-23T04:56:07.000Z",
                  "status": "status"
                },
                {
                  "invertedRate": 123.23,
                  "rate": 123.23,
                  "sourceCurrency": "EUR",
                  "totalPaymentAmount": 34235,
                  "paymentCurrency": "EUR",
                  "quoteId": "046b6c7f-0b8a-43b9-b35d-6489e6daee91",
                  "totalCost": 5,
                  "fundingStatus": "fundingStatus",
                  "creationDateTime": "2000-01-23T04:56:07.000Z",
                  "status": "status"
                }
              ],
              "payoutId": "046b6c7f-0b8a-43b9-b35d-6489e6daee91",
              "totalPayments": 0,
              "schedule": {
                "scheduledFor": "2000-01-23T04:56:07.000Z",
                "scheduleStatus": "SCHEDULED",
                "notificationsEnabled": true,
                "scheduledBy": "Aphra Behn",
                "scheduledByPrincipalId": "8946953b-1e3b-49cf-9da4-b704cbb78f3e",
                "scheduledAt": "2000-01-23T04:56:07.000Z"
              },
              "submittedDateTime": "submittedDateTime",
              "payorId": "046b6c7f-0b8a-43b9-b35d-6489e6daee91",
              "totalIncompletePayments": 6,
              "withdrawnDateTime": "2000-01-23T04:56:07.000Z",
              "totalWithdrawnPayments": 5,
              "instructedDateTime": "instructedDateTime",
              "status": "status",
              "payoutMemo": "payoutMemo",
              "payorName": "payorName"
            }
          ]
        },
        "properties": {
          "page": {
            "$ref": "#/components/schemas/PagedPayeeInvitationStatusResponseV3_page"
          },
          "links": {
            "items": {
              "$ref": "#/components/schemas/PagedPayeeResponseV3_links"
            },
            "type": "array"
          },
          "content": {
            "items": {
              "$ref": "#/components/schemas/PayoutSummaryAudit"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "GetPaymentsForPayoutResponseV4": {
        "description": "List Payments for payout",
        "example": {
          "summary": {
            "withdrawnPayments": 2,
            "submitting": {
              "principal": "principal",
              "principalId": "046b6c7f-0b8a-43b9-b35d-6489e6daee91",
              "payorId": "046b6c7f-0b8a-43b9-b35d-6489e6daee91",
              "dbaName": "dbaName",
              "payorName": "payorName"
            },
            "payoutType": "payoutType",
            "confirmedPayments": 6,
            "releasedPayments": 1,
            "withdrawn": {
              "principal": "principal",
              "principalId": "046b6c7f-0b8a-43b9-b35d-6489e6daee91"
            },
            "payoutStatus": "payoutStatus",
            "totalPayments": 0,
            "payoutFrom": {
              "principal": "principal",
              "principalId": "046b6c7f-0b8a-43b9-b35d-6489e6daee91",
              "payorId": "046b6c7f-0b8a-43b9-b35d-6489e6daee91",
              "dbaName": "dbaName",
              "payorName": "payorName"
            },
            "payoutTo": {
              "principal": "principal",
              "principalId": "046b6c7f-0b8a-43b9-b35d-6489e6daee91",
              "payorId": "046b6c7f-0b8a-43b9-b35d-6489e6daee91",
              "dbaName": "dbaName",
              "payorName": "payorName"
            },
            "quoted": {
              "principal": "principal",
              "principalId": "046b6c7f-0b8a-43b9-b35d-6489e6daee91"
            },
            "instructed": {
              "principal": "principal",
              "principalId": "046b6c7f-0b8a-43b9-b35d-6489e6daee91"
            },
            "schedule": {
              "scheduledFor": "2000-01-23T04:56:07.000Z",
              "scheduleStatus": "SCHEDULED",
              "notificationsEnabled": true,
              "scheduledBy": "Aphra Behn",
              "scheduledByPrincipalId": "8946953b-1e3b-49cf-9da4-b704cbb78f3e",
              "scheduledAt": "2000-01-23T04:56:07.000Z"
            },
            "incompletePayments": 5,
            "submittedDateTime": "2000-01-23T04:56:07.000Z",
            "quotedDateTime": "2000-01-23T04:56:07.000Z",
            "withdrawnDateTime": "2000-01-23T04:56:07.000Z",
            "returnedPayments": 5,
            "instructedDateTime": "2000-01-23T04:56:07.000Z",
            "payoutMemo": "payoutMemo"
          },
          "links": [
            {
              "rel": "rel",
              "href": "href"
            },
            {
              "rel": "rel",
              "href": "href"
            }
          ],
          "page": {
            "numberOfElements": 0,
            "totalPages": 1,
            "pageSize": 5,
            "page": 5,
            "totalElements": 6
          },
          "content": [
            {
              "traceNumber": "abodu123",
              "payout": {
                "payoutId": "046b6c7f-0b8a-43b9-b35d-6489e6daee91",
                "payoutFrom": {
                  "principal": "principal",
                  "principalId": "046b6c7f-0b8a-43b9-b35d-6489e6daee91",
                  "payorId": "046b6c7f-0b8a-43b9-b35d-6489e6daee91",
                  "dbaName": "dbaName",
                  "payorName": "payorName"
                },
                "payoutTo": {
                  "principal": "principal",
                  "principalId": "046b6c7f-0b8a-43b9-b35d-6489e6daee91",
                  "payorId": "046b6c7f-0b8a-43b9-b35d-6489e6daee91",
                  "dbaName": "dbaName",
                  "payorName": "payorName"
                }
              },
              "paymentScheme": "paymentScheme",
              "paymentId": "046b6c7f-0b8a-43b9-b35d-6489e6daee91",
              "submittedDateTime": "2000-01-23T04:56:07.000Z",
              "railsId": "asdf123",
              "payeeId": "046b6c7f-0b8a-43b9-b35d-6489e6daee91",
              "payorId": "046b6c7f-0b8a-43b9-b35d-6489e6daee91",
              "railsRejectionInformation": "railsRejectionInformation",
              "events": [
                {
                  "eventId": "046b6c7f-0b8a-43b9-b35d-6489e6daee91",
                  "eventDateTime": "2000-01-23T04:56:07.000Z",
                  "accountName": "accountName",
                  "sourceCurrency": "EUR",
                  "eventType": "eventType",
                  "accountNumber": "accountNumber",
                  "paymentAmount": 1299,
                  "principal": "principal",
                  "routingNumber": "routingNumber",
                  "iban": "iban",
                  "scheduledFor": "2000-01-23T04:56:07.000Z",
                  "sourceAmount": 1299,
                  "scheduledBy": "Aphra Behn",
                  "paymentCurrency": "EUR",
                  "scheduledAt": "2000-01-23T04:56:07.000Z"
                },
                {
                  "eventId": "046b6c7f-0b8a-43b9-b35d-6489e6daee91",
                  "eventDateTime": "2000-01-23T04:56:07.000Z",
                  "accountName": "accountName",
                  "sourceCurrency": "EUR",
                  "eventType": "eventType",
                  "accountNumber": "accountNumber",
                  "paymentAmount": 1299,
                  "principal": "principal",
                  "routingNumber": "routingNumber",
                  "iban": "iban",
                  "scheduledFor": "2000-01-23T04:56:07.000Z",
                  "sourceAmount": 1299,
                  "scheduledBy": "Aphra Behn",
                  "paymentCurrency": "EUR",
                  "scheduledAt": "2000-01-23T04:56:07.000Z"
                }
              ],
              "railsPaymentId": "railsPaymentId",
              "payeeAddressCountryCode": "US",
              "quoteId": "046b6c7f-0b8a-43b9-b35d-6489e6daee91",
              "returnCost": 1232,
              "withdrawnReason": "withdrawnReason",
              "iban": "DE89 3704 0044 0532 0130 00",
              "paymentMetadata": "sample metadata",
              "payorPaymentId": "123123asdf",
              "remoteSystemId": "REMOTE_SYSTEM_ID",
              "paymentCurrency": "EUR",
              "rejectionReason": "rejectionReason",
              "paymentTrackingReference": "paymentTrackingReference",
              "status": "status",
              "postInstructFxInfo": {
                "fxStatus": "INITIATED",
                "fxStatusUpdatedAt": "2000-01-23T04:56:07.000Z",
                "fxTransactionReference": "AB123GHI",
                "fxMode": "MANUAL"
              },
              "accountName": "My Account Name",
              "remoteSystemPaymentId": "remoteSystemPaymentId",
              "sourceCurrency": "EUR",
              "paymentMemo": "Payment memo",
              "paymentAmount": 7,
              "fundingStatus": "fundingStatus",
              "railsBatchId": "railsBatchId",
              "paymentChannelName": "My Payment Channel",
              "filenameReference": "file ref",
              "rate": 9.301444243932576,
              "countryCode": "US",
              "returnReason": "Some Reason Value",
              "withdrawable": true,
              "autoWithdrawnReasonCode": "autoWithdrawnReasonCode",
              "isPaymentCcyBaseCcy": true,
              "sourceAmount": 12345,
              "transmissionType": "transmissionType",
              "payorName": "payorName",
              "sourceAccountName": "My Account",
              "paymentChannelId": "123asdf",
              "invertedRate": 3.616076749251911,
              "sourceAccountId": "046b6c7f-0b8a-43b9-b35d-6489e6daee91",
              "individualIdentificationNumber": "1231231adf",
              "accountNumber": "123123232323",
              "remoteId": "aasdf123",
              "routingNumber": "123123123123",
              "schedule": {
                "scheduledFor": "2000-01-23T04:56:07.000Z",
                "scheduleStatus": "SCHEDULED",
                "notificationsEnabled": true,
                "scheduledBy": "Aphra Behn",
                "scheduledByPrincipalId": "8946953b-1e3b-49cf-9da4-b704cbb78f3e",
                "scheduledAt": "2000-01-23T04:56:07.000Z"
              }
            },
            {
              "traceNumber": "abodu123",
              "payout": {
                "payoutId": "046b6c7f-0b8a-43b9-b35d-6489e6daee91",
                "payoutFrom": {
                  "principal": "principal",
                  "principalId": "046b6c7f-0b8a-43b9-b35d-6489e6daee91",
                  "payorId": "046b6c7f-0b8a-43b9-b35d-6489e6daee91",
                  "dbaName": "dbaName",
                  "payorName": "payorName"
                },
                "payoutTo": {
                  "principal": "principal",
                  "principalId": "046b6c7f-0b8a-43b9-b35d-6489e6daee91",
                  "payorId": "046b6c7f-0b8a-43b9-b35d-6489e6daee91",
                  "dbaName": "dbaName",
                  "payorName": "payorName"
                }
              },
              "paymentScheme": "paymentScheme",
              "paymentId": "046b6c7f-0b8a-43b9-b35d-6489e6daee91",
              "submittedDateTime": "2000-01-23T04:56:07.000Z",
              "railsId": "asdf123",
              "payeeId": "046b6c7f-0b8a-43b9-b35d-6489e6daee91",
              "payorId": "046b6c7f-0b8a-43b9-b35d-6489e6daee91",
              "railsRejectionInformation": "railsRejectionInformation",
              "events": [
                {
                  "eventId": "046b6c7f-0b8a-43b9-b35d-6489e6daee91",
                  "eventDateTime": "2000-01-23T04:56:07.000Z",
                  "accountName": "accountName",
                  "sourceCurrency": "EUR",
                  "eventType": "eventType",
                  "accountNumber": "accountNumber",
                  "paymentAmount": 1299,
                  "principal": "principal",
                  "routingNumber": "routingNumber",
                  "iban": "iban",
                  "scheduledFor": "2000-01-23T04:56:07.000Z",
                  "sourceAmount": 1299,
                  "scheduledBy": "Aphra Behn",
                  "paymentCurrency": "EUR",
                  "scheduledAt": "2000-01-23T04:56:07.000Z"
                },
                {
                  "eventId": "046b6c7f-0b8a-43b9-b35d-6489e6daee91",
                  "eventDateTime": "2000-01-23T04:56:07.000Z",
                  "accountName": "accountName",
                  "sourceCurrency": "EUR",
                  "eventType": "eventType",
                  "accountNumber": "accountNumber",
                  "paymentAmount": 1299,
                  "principal": "principal",
                  "routingNumber": "routingNumber",
                  "iban": "iban",
                  "scheduledFor": "2000-01-23T04:56:07.000Z",
                  "sourceAmount": 1299,
                  "scheduledBy": "Aphra Behn",
                  "paymentCurrency": "EUR",
                  "scheduledAt": "2000-01-23T04:56:07.000Z"
                }
              ],
              "railsPaymentId": "railsPaymentId",
              "payeeAddressCountryCode": "US",
              "quoteId": "046b6c7f-0b8a-43b9-b35d-6489e6daee91",
              "returnCost": 1232,
              "withdrawnReason": "withdrawnReason",
              "iban": "DE89 3704 0044 0532 0130 00",
              "paymentMetadata": "sample metadata",
              "payorPaymentId": "123123asdf",
              "remoteSystemId": "REMOTE_SYSTEM_ID",
              "paymentCurrency": "EUR",
              "rejectionReason": "rejectionReason",
              "paymentTrackingReference": "paymentTrackingReference",
              "status": "status",
              "postInstructFxInfo": {
                "fxStatus": "INITIATED",
                "fxStatusUpdatedAt": "2000-01-23T04:56:07.000Z",
                "fxTransactionReference": "AB123GHI",
                "fxMode": "MANUAL"
              },
              "accountName": "My Account Name",
              "remoteSystemPaymentId": "remoteSystemPaymentId",
              "sourceCurrency": "EUR",
              "paymentMemo": "Payment memo",
              "paymentAmount": 7,
              "fundingStatus": "fundingStatus",
              "railsBatchId": "railsBatchId",
              "paymentChannelName": "My Payment Channel",
              "filenameReference": "file ref",
              "rate": 9.301444243932576,
              "countryCode": "US",
              "returnReason": "Some Reason Value",
              "withdrawable": true,
              "autoWithdrawnReasonCode": "autoWithdrawnReasonCode",
              "isPaymentCcyBaseCcy": true,
              "sourceAmount": 12345,
              "transmissionType": "transmissionType",
              "payorName": "payorName",
              "sourceAccountName": "My Account",
              "paymentChannelId": "123asdf",
              "invertedRate": 3.616076749251911,
              "sourceAccountId": "046b6c7f-0b8a-43b9-b35d-6489e6daee91",
              "individualIdentificationNumber": "1231231adf",
              "accountNumber": "123123232323",
              "remoteId": "aasdf123",
              "routingNumber": "123123123123",
              "schedule": {
                "scheduledFor": "2000-01-23T04:56:07.000Z",
                "scheduleStatus": "SCHEDULED",
                "notificationsEnabled": true,
                "scheduledBy": "Aphra Behn",
                "scheduledByPrincipalId": "8946953b-1e3b-49cf-9da4-b704cbb78f3e",
                "scheduledAt": "2000-01-23T04:56:07.000Z"
              }
            }
          ]
        },
        "properties": {
          "summary": {
            "$ref": "#/components/schemas/GetPaymentsForPayoutResponseV4_summary"
          },
          "page": {
            "$ref": "#/components/schemas/PagedPayeeInvitationStatusResponseV3_page"
          },
          "links": {
            "items": {
              "$ref": "#/components/schemas/PagedPayeeResponseV3_links"
            },
            "type": "array"
          },
          "content": {
            "items": {
              "$ref": "#/components/schemas/PaymentResponseV4"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "ListPaymentsResponseV4": {
        "description": "List Payments Response Object",
        "example": {
          "links": [
            {
              "rel": "first",
              "href": "https://example.com"
            },
            {
              "rel": "first",
              "href": "https://example.com"
            }
          ],
          "page": {
            "numberOfElements": 12,
            "totalPages": 12,
            "pageSize": 25,
            "page": 1,
            "totalElements": 12
          },
          "content": [
            {
              "traceNumber": "abodu123",
              "payout": {
                "payoutId": "046b6c7f-0b8a-43b9-b35d-6489e6daee91",
                "payoutFrom": {
                  "principal": "principal",
                  "principalId": "046b6c7f-0b8a-43b9-b35d-6489e6daee91",
                  "payorId": "046b6c7f-0b8a-43b9-b35d-6489e6daee91",
                  "dbaName": "dbaName",
                  "payorName": "payorName"
                },
                "payoutTo": {
                  "principal": "principal",
                  "principalId": "046b6c7f-0b8a-43b9-b35d-6489e6daee91",
                  "payorId": "046b6c7f-0b8a-43b9-b35d-6489e6daee91",
                  "dbaName": "dbaName",
                  "payorName": "payorName"
                }
              },
              "paymentScheme": "paymentScheme",
              "paymentId": "046b6c7f-0b8a-43b9-b35d-6489e6daee91",
              "submittedDateTime": "2000-01-23T04:56:07.000Z",
              "railsId": "asdf123",
              "payeeId": "046b6c7f-0b8a-43b9-b35d-6489e6daee91",
              "payorId": "046b6c7f-0b8a-43b9-b35d-6489e6daee91",
              "railsRejectionInformation": "railsRejectionInformation",
              "events": [
                {
                  "eventId": "046b6c7f-0b8a-43b9-b35d-6489e6daee91",
                  "eventDateTime": "2000-01-23T04:56:07.000Z",
                  "accountName": "accountName",
                  "sourceCurrency": "EUR",
                  "eventType": "eventType",
                  "accountNumber": "accountNumber",
                  "paymentAmount": 1299,
                  "principal": "principal",
                  "routingNumber": "routingNumber",
                  "iban": "iban",
                  "scheduledFor": "2000-01-23T04:56:07.000Z",
                  "sourceAmount": 1299,
                  "scheduledBy": "Aphra Behn",
                  "paymentCurrency": "EUR",
                  "scheduledAt": "2000-01-23T04:56:07.000Z"
                },
                {
                  "eventId": "046b6c7f-0b8a-43b9-b35d-6489e6daee91",
                  "eventDateTime": "2000-01-23T04:56:07.000Z",
                  "accountName": "accountName",
                  "sourceCurrency": "EUR",
                  "eventType": "eventType",
                  "accountNumber": "accountNumber",
                  "paymentAmount": 1299,
                  "principal": "principal",
                  "routingNumber": "routingNumber",
                  "iban": "iban",
                  "scheduledFor": "2000-01-23T04:56:07.000Z",
                  "sourceAmount": 1299,
                  "scheduledBy": "Aphra Behn",
                  "paymentCurrency": "EUR",
                  "scheduledAt": "2000-01-23T04:56:07.000Z"
                }
              ],
              "railsPaymentId": "railsPaymentId",
              "payeeAddressCountryCode": "US",
              "quoteId": "046b6c7f-0b8a-43b9-b35d-6489e6daee91",
              "returnCost": 1232,
              "withdrawnReason": "withdrawnReason",
              "iban": "DE89 3704 0044 0532 0130 00",
              "paymentMetadata": "sample metadata",
              "payorPaymentId": "123123asdf",
              "remoteSystemId": "REMOTE_SYSTEM_ID",
              "paymentCurrency": "EUR",
              "rejectionReason": "rejectionReason",
              "paymentTrackingReference": "paymentTrackingReference",
              "status": "status",
              "postInstructFxInfo": {
                "fxStatus": "INITIATED",
                "fxStatusUpdatedAt": "2000-01-23T04:56:07.000Z",
                "fxTransactionReference": "AB123GHI",
                "fxMode": "MANUAL"
              },
              "accountName": "My Account Name",
              "remoteSystemPaymentId": "remoteSystemPaymentId",
              "sourceCurrency": "EUR",
              "paymentMemo": "Payment memo",
              "paymentAmount": 7,
              "fundingStatus": "fundingStatus",
              "railsBatchId": "railsBatchId",
              "paymentChannelName": "My Payment Channel",
              "filenameReference": "file ref",
              "rate": 9.301444243932576,
              "countryCode": "US",
              "returnReason": "Some Reason Value",
              "withdrawable": true,
              "autoWithdrawnReasonCode": "autoWithdrawnReasonCode",
              "isPaymentCcyBaseCcy": true,
              "sourceAmount": 12345,
              "transmissionType": "transmissionType",
              "payorName": "payorName",
              "sourceAccountName": "My Account",
              "paymentChannelId": "123asdf",
              "invertedRate": 3.616076749251911,
              "sourceAccountId": "046b6c7f-0b8a-43b9-b35d-6489e6daee91",
              "individualIdentificationNumber": "1231231adf",
              "accountNumber": "123123232323",
              "remoteId": "aasdf123",
              "routingNumber": "123123123123",
              "schedule": {
                "scheduledFor": "2000-01-23T04:56:07.000Z",
                "scheduleStatus": "SCHEDULED",
                "notificationsEnabled": true,
                "scheduledBy": "Aphra Behn",
                "scheduledByPrincipalId": "8946953b-1e3b-49cf-9da4-b704cbb78f3e",
                "scheduledAt": "2000-01-23T04:56:07.000Z"
              }
            },
            {
              "traceNumber": "abodu123",
              "payout": {
                "payoutId": "046b6c7f-0b8a-43b9-b35d-6489e6daee91",
                "payoutFrom": {
                  "principal": "principal",
                  "principalId": "046b6c7f-0b8a-43b9-b35d-6489e6daee91",
                  "payorId": "046b6c7f-0b8a-43b9-b35d-6489e6daee91",
                  "dbaName": "dbaName",
                  "payorName": "payorName"
                },
                "payoutTo": {
                  "principal": "principal",
                  "principalId": "046b6c7f-0b8a-43b9-b35d-6489e6daee91",
                  "payorId": "046b6c7f-0b8a-43b9-b35d-6489e6daee91",
                  "dbaName": "dbaName",
                  "payorName": "payorName"
                }
              },
              "paymentScheme": "paymentScheme",
              "paymentId": "046b6c7f-0b8a-43b9-b35d-6489e6daee91",
              "submittedDateTime": "2000-01-23T04:56:07.000Z",
              "railsId": "asdf123",
              "payeeId": "046b6c7f-0b8a-43b9-b35d-6489e6daee91",
              "payorId": "046b6c7f-0b8a-43b9-b35d-6489e6daee91",
              "railsRejectionInformation": "railsRejectionInformation",
              "events": [
                {
                  "eventId": "046b6c7f-0b8a-43b9-b35d-6489e6daee91",
                  "eventDateTime": "2000-01-23T04:56:07.000Z",
                  "accountName": "accountName",
                  "sourceCurrency": "EUR",
                  "eventType": "eventType",
                  "accountNumber": "accountNumber",
                  "paymentAmount": 1299,
                  "principal": "principal",
                  "routingNumber": "routingNumber",
                  "iban": "iban",
                  "scheduledFor": "2000-01-23T04:56:07.000Z",
                  "sourceAmount": 1299,
                  "scheduledBy": "Aphra Behn",
                  "paymentCurrency": "EUR",
                  "scheduledAt": "2000-01-23T04:56:07.000Z"
                },
                {
                  "eventId": "046b6c7f-0b8a-43b9-b35d-6489e6daee91",
                  "eventDateTime": "2000-01-23T04:56:07.000Z",
                  "accountName": "accountName",
                  "sourceCurrency": "EUR",
                  "eventType": "eventType",
                  "accountNumber": "accountNumber",
                  "paymentAmount": 1299,
                  "principal": "principal",
                  "routingNumber": "routingNumber",
                  "iban": "iban",
                  "scheduledFor": "2000-01-23T04:56:07.000Z",
                  "sourceAmount": 1299,
                  "scheduledBy": "Aphra Behn",
                  "paymentCurrency": "EUR",
                  "scheduledAt": "2000-01-23T04:56:07.000Z"
                }
              ],
              "railsPaymentId": "railsPaymentId",
              "payeeAddressCountryCode": "US",
              "quoteId": "046b6c7f-0b8a-43b9-b35d-6489e6daee91",
              "returnCost": 1232,
              "withdrawnReason": "withdrawnReason",
              "iban": "DE89 3704 0044 0532 0130 00",
              "paymentMetadata": "sample metadata",
              "payorPaymentId": "123123asdf",
              "remoteSystemId": "REMOTE_SYSTEM_ID",
              "paymentCurrency": "EUR",
              "rejectionReason": "rejectionReason",
              "paymentTrackingReference": "paymentTrackingReference",
              "status": "status",
              "postInstructFxInfo": {
                "fxStatus": "INITIATED",
                "fxStatusUpdatedAt": "2000-01-23T04:56:07.000Z",
                "fxTransactionReference": "AB123GHI",
                "fxMode": "MANUAL"
              },
              "accountName": "My Account Name",
              "remoteSystemPaymentId": "remoteSystemPaymentId",
              "sourceCurrency": "EUR",
              "paymentMemo": "Payment memo",
              "paymentAmount": 7,
              "fundingStatus": "fundingStatus",
              "railsBatchId": "railsBatchId",
              "paymentChannelName": "My Payment Channel",
              "filenameReference": "file ref",
              "rate": 9.301444243932576,
              "countryCode": "US",
              "returnReason": "Some Reason Value",
              "withdrawable": true,
              "autoWithdrawnReasonCode": "autoWithdrawnReasonCode",
              "isPaymentCcyBaseCcy": true,
              "sourceAmount": 12345,
              "transmissionType": "transmissionType",
              "payorName": "payorName",
              "sourceAccountName": "My Account",
              "paymentChannelId": "123asdf",
              "invertedRate": 3.616076749251911,
              "sourceAccountId": "046b6c7f-0b8a-43b9-b35d-6489e6daee91",
              "individualIdentificationNumber": "1231231adf",
              "accountNumber": "123123232323",
              "remoteId": "aasdf123",
              "routingNumber": "123123123123",
              "schedule": {
                "scheduledFor": "2000-01-23T04:56:07.000Z",
                "scheduleStatus": "SCHEDULED",
                "notificationsEnabled": true,
                "scheduledBy": "Aphra Behn",
                "scheduledByPrincipalId": "8946953b-1e3b-49cf-9da4-b704cbb78f3e",
                "scheduledAt": "2000-01-23T04:56:07.000Z"
              }
            }
          ]
        },
        "properties": {
          "page": {
            "$ref": "#/components/schemas/ListPaymentsResponseV3_page"
          },
          "links": {
            "items": {
              "$ref": "#/components/schemas/GetPayoutsResponseV3_links"
            },
            "type": "array"
          },
          "content": {
            "items": {
              "$ref": "#/components/schemas/PaymentResponseV4"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "PaymentResponseV4": {
        "example": {
          "traceNumber": "abodu123",
          "payout": {
            "payoutId": "046b6c7f-0b8a-43b9-b35d-6489e6daee91",
            "payoutFrom": {
              "principal": "principal",
              "principalId": "046b6c7f-0b8a-43b9-b35d-6489e6daee91",
              "payorId": "046b6c7f-0b8a-43b9-b35d-6489e6daee91",
              "dbaName": "dbaName",
              "payorName": "payorName"
            },
            "payoutTo": {
              "principal": "principal",
              "principalId": "046b6c7f-0b8a-43b9-b35d-6489e6daee91",
              "payorId": "046b6c7f-0b8a-43b9-b35d-6489e6daee91",
              "dbaName": "dbaName",
              "payorName": "payorName"
            }
          },
          "paymentScheme": "paymentScheme",
          "paymentId": "046b6c7f-0b8a-43b9-b35d-6489e6daee91",
          "submittedDateTime": "2000-01-23T04:56:07.000Z",
          "railsId": "asdf123",
          "payeeId": "046b6c7f-0b8a-43b9-b35d-6489e6daee91",
          "payorId": "046b6c7f-0b8a-43b9-b35d-6489e6daee91",
          "railsRejectionInformation": "railsRejectionInformation",
          "events": [
            {
              "eventId": "046b6c7f-0b8a-43b9-b35d-6489e6daee91",
              "eventDateTime": "2000-01-23T04:56:07.000Z",
              "accountName": "accountName",
              "sourceCurrency": "EUR",
              "eventType": "eventType",
              "accountNumber": "accountNumber",
              "paymentAmount": 1299,
              "principal": "principal",
              "routingNumber": "routingNumber",
              "iban": "iban",
              "scheduledFor": "2000-01-23T04:56:07.000Z",
              "sourceAmount": 1299,
              "scheduledBy": "Aphra Behn",
              "paymentCurrency": "EUR",
              "scheduledAt": "2000-01-23T04:56:07.000Z"
            },
            {
              "eventId": "046b6c7f-0b8a-43b9-b35d-6489e6daee91",
              "eventDateTime": "2000-01-23T04:56:07.000Z",
              "accountName": "accountName",
              "sourceCurrency": "EUR",
              "eventType": "eventType",
              "accountNumber": "accountNumber",
              "paymentAmount": 1299,
              "principal": "principal",
              "routingNumber": "routingNumber",
              "iban": "iban",
              "scheduledFor": "2000-01-23T04:56:07.000Z",
              "sourceAmount": 1299,
              "scheduledBy": "Aphra Behn",
              "paymentCurrency": "EUR",
              "scheduledAt": "2000-01-23T04:56:07.000Z"
            }
          ],
          "railsPaymentId": "railsPaymentId",
          "payeeAddressCountryCode": "US",
          "quoteId": "046b6c7f-0b8a-43b9-b35d-6489e6daee91",
          "returnCost": 1232,
          "withdrawnReason": "withdrawnReason",
          "iban": "DE89 3704 0044 0532 0130 00",
          "paymentMetadata": "sample metadata",
          "payorPaymentId": "123123asdf",
          "remoteSystemId": "REMOTE_SYSTEM_ID",
          "paymentCurrency": "EUR",
          "rejectionReason": "rejectionReason",
          "paymentTrackingReference": "paymentTrackingReference",
          "status": "status",
          "postInstructFxInfo": {
            "fxStatus": "INITIATED",
            "fxStatusUpdatedAt": "2000-01-23T04:56:07.000Z",
            "fxTransactionReference": "AB123GHI",
            "fxMode": "MANUAL"
          },
          "accountName": "My Account Name",
          "remoteSystemPaymentId": "remoteSystemPaymentId",
          "sourceCurrency": "EUR",
          "paymentMemo": "Payment memo",
          "paymentAmount": 7,
          "fundingStatus": "fundingStatus",
          "railsBatchId": "railsBatchId",
          "paymentChannelName": "My Payment Channel",
          "filenameReference": "file ref",
          "rate": 9.301444243932576,
          "countryCode": "US",
          "returnReason": "Some Reason Value",
          "withdrawable": true,
          "autoWithdrawnReasonCode": "autoWithdrawnReasonCode",
          "isPaymentCcyBaseCcy": true,
          "sourceAmount": 12345,
          "transmissionType": "transmissionType",
          "payorName": "payorName",
          "sourceAccountName": "My Account",
          "paymentChannelId": "123asdf",
          "invertedRate": 3.616076749251911,
          "sourceAccountId": "046b6c7f-0b8a-43b9-b35d-6489e6daee91",
          "individualIdentificationNumber": "1231231adf",
          "accountNumber": "123123232323",
          "remoteId": "aasdf123",
          "routingNumber": "123123123123",
          "schedule": {
            "scheduledFor": "2000-01-23T04:56:07.000Z",
            "scheduleStatus": "SCHEDULED",
            "notificationsEnabled": true,
            "scheduledBy": "Aphra Behn",
            "scheduledByPrincipalId": "8946953b-1e3b-49cf-9da4-b704cbb78f3e",
            "scheduledAt": "2000-01-23T04:56:07.000Z"
          }
        },
        "properties": {
          "paymentId": {
            "description": "The id of the payment",
            "format": "uuid",
            "type": "string"
          },
          "payeeId": {
            "description": "The id of the paymeee",
            "format": "uuid",
            "type": "string"
          },
          "payorId": {
            "description": "The id of the payor",
            "format": "uuid",
            "type": "string"
          },
          "payorName": {
            "description": "The name of the payor",
            "type": "string"
          },
          "quoteId": {
            "description": "The quote Id used for the FX",
            "format": "uuid",
            "type": "string"
          },
          "sourceAccountId": {
            "description": "The id of the source account from which the payment was taken",
            "format": "uuid",
            "type": "string"
          },
          "sourceAccountName": {
            "description": "The name of the source account from which the payment was taken",
            "example": "My Account",
            "type": "string"
          },
          "remoteId": {
            "description": "The remote id by which the payor refers to the payee. Only populated once payment is confirmed",
            "example": "aasdf123",
            "type": "string"
          },
          "remoteSystemId": {
            "description": "The velo id of the remote system orchestrating the payment. Not populated for normal Velo payments.",
            "example": "REMOTE_SYSTEM_ID",
            "type": "string"
          },
          "remoteSystemPaymentId": {
            "description": "The id of the payment in the remote system. Not populated for normal Velo payments.",
            "type": "string"
          },
          "sourceAmount": {
            "description": "The source amount for the payment (amount debited to make the payment)",
            "example": 12345,
            "type": "integer"
          },
          "sourceCurrency": {
            "description": "ISO-4217 3 character currency code",
            "example": "EUR",
            "maxLength": 3,
            "minLength": 3,
            "type": "string"
          },
          "paymentAmount": {
            "description": "The amount which the payee will receive",
            "type": "integer"
          },
          "paymentCurrency": {
            "description": "ISO-4217 3 character currency code",
            "example": "EUR",
            "maxLength": 3,
            "minLength": 3,
            "type": "string"
          },
          "rate": {
            "description": "The FX rate for the payment, if FX was involved. **Note** that (depending on the role of the caller) this information may not be displayed",
            "format": "double",
            "type": "number"
          },
          "invertedRate": {
            "description": "The inverted FX rate for the payment, if FX was involved. **Note** that (depending on the role of the caller) this information may not be displayed",
            "format": "double",
            "type": "number"
          },
          "isPaymentCcyBaseCcy": {
            "type": "boolean"
          },
          "submittedDateTime": {
            "format": "date-time",
            "type": "string"
          },
          "status": {
            "description": "Current status of the payment. One of the following values: ACCEPTED, AWAITING_FUNDS, FUNDED, UNFUNDED, BANK_PAYMENT_REQUESTED, REJECTED, ACCEPTED_BY_RAILS, CONFIRMED, RETURNED, WITHDRAWN",
            "type": "string"
          },
          "fundingStatus": {
            "description": "Current funding status of the payment. One of the following values: FUNDED, INSTRUCTED, UNFUNDED",
            "type": "string"
          },
          "routingNumber": {
            "description": "The routing number for the payment.",
            "example": "123123123123",
            "type": "string"
          },
          "accountNumber": {
            "description": "The account number for the account which will receive the payment.",
            "example": "123123232323",
            "type": "string"
          },
          "iban": {
            "description": "The iban for the payment.",
            "example": "DE89 3704 0044 0532 0130 00",
            "type": "string"
          },
          "paymentMemo": {
            "description": "The payment memo set by the payor",
            "example": "Payment memo",
            "type": "string"
          },
          "filenameReference": {
            "description": "ACH file payment was submitted in, if applicable",
            "example": "file ref",
            "type": "string"
          },
          "individualIdentificationNumber": {
            "description": "Individual Identification Number assigned to the payment in the ACH file, if applicable",
            "example": "1231231adf",
            "type": "string"
          },
          "traceNumber": {
            "description": "Trace Number assigned to the payment in the ACH file, if applicable",
            "example": "abodu123",
            "type": "string"
          },
          "payorPaymentId": {
            "example": "123123asdf",
            "type": "string"
          },
          "paymentChannelId": {
            "example": "123asdf",
            "type": "string"
          },
          "paymentChannelName": {
            "example": "My Payment Channel",
            "type": "string"
          },
          "accountName": {
            "example": "My Account Name",
            "type": "string"
          },
          "railsId": {
            "default": "RAILS ID UNAVAILABLE",
            "description": "The rails ID. Default value is RAILS ID UNAVAILABLE when not populated.",
            "example": "asdf123",
            "type": "string"
          },
          "countryCode": {
            "description": "The country code of the payment channel.",
            "example": "US",
            "type": "string"
          },
          "payeeAddressCountryCode": {
            "description": "The country code of the payee's address.",
            "example": "US",
            "type": "string"
          },
          "events": {
            "items": {
              "$ref": "#/components/schemas/PaymentEventResponse"
            },
            "type": "array"
          },
          "returnCost": {
            "description": "The return cost if a returned payment.",
            "example": 1232,
            "type": "integer"
          },
          "returnReason": {
            "example": "Some Reason Value",
            "type": "string"
          },
          "railsPaymentId": {
            "type": "string"
          },
          "railsBatchId": {
            "type": "string"
          },
          "paymentScheme": {
            "type": "string"
          },
          "rejectionReason": {
            "type": "string"
          },
          "railsRejectionInformation": {
            "description": "The original reason that the payment was rejected. This can be third party rails specific if rejected by the underlying third party rails logic.",
            "type": "string"
          },
          "withdrawnReason": {
            "type": "string"
          },
          "withdrawable": {
            "type": "boolean"
          },
          "autoWithdrawnReasonCode": {
            "description": "Populated with rejection reason code if the payment was withdrawn automatically at instruct time",
            "type": "string"
          },
          "transmissionType": {
            "description": "The transmission type of the payment, e.g. ACH, SAME_DAY_ACH, WIRE, GACHO",
            "type": "string"
          },
          "paymentTrackingReference": {
            "type": "string"
          },
          "paymentMetadata": {
            "description": "Metadata for the payment",
            "example": "sample metadata",
            "type": "string"
          },
          "schedule": {
            "$ref": "#/components/schemas/PayoutSchedule"
          },
          "postInstructFxInfo": {
            "$ref": "#/components/schemas/PostInstructFxInfo"
          },
          "payout": {
            "$ref": "#/components/schemas/PaymentResponseV4_payout"
          }
        },
        "required": [
          "events",
          "fundingStatus",
          "payeeId",
          "paymentAmount",
          "paymentId",
          "payorId",
          "quoteId",
          "railsId",
          "sourceAccountId",
          "status",
          "submittedDateTime"
        ],
        "type": "object"
      },
      "PaymentDeltaResponse": {
        "description": "List Payment Changes Response Object",
        "example": {
          "links": [
            {
              "rel": "rel",
              "href": "href"
            },
            {
              "rel": "rel",
              "href": "href"
            }
          ],
          "page": {
            "numberOfElements": 0,
            "totalPages": 1,
            "pageSize": 5,
            "page": 5,
            "totalElements": 6
          },
          "content": [
            {
              "paymentId": "046b6c7f-0b8a-43b9-b35d-6489e6daee91",
              "payorPaymentId": "payorPaymentId",
              "sourceCurrency": "sourceCurrency",
              "sourceAmount": 6,
              "payoutId": "046b6c7f-0b8a-43b9-b35d-6489e6daee91",
              "paymentCurrency": "paymentCurrency",
              "paymentAmount": 0,
              "status": "status"
            },
            {
              "paymentId": "046b6c7f-0b8a-43b9-b35d-6489e6daee91",
              "payorPaymentId": "payorPaymentId",
              "sourceCurrency": "sourceCurrency",
              "sourceAmount": 6,
              "payoutId": "046b6c7f-0b8a-43b9-b35d-6489e6daee91",
              "paymentCurrency": "paymentCurrency",
              "paymentAmount": 0,
              "status": "status"
            }
          ]
        },
        "properties": {
          "page": {
            "$ref": "#/components/schemas/PagedPayeeInvitationStatusResponseV3_page"
          },
          "links": {
            "items": {
              "$ref": "#/components/schemas/PagedPayeeResponseV3_links"
            },
            "type": "array"
          },
          "content": {
            "items": {
              "$ref": "#/components/schemas/PaymentDelta"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "PayorAmlTransaction": {
        "example": {
          "debitCurrency": "debitCurrency",
          "payeeType": "payeeType",
          "fxApplied": 5.962133916683182,
          "transactionTime": "transactionTime",
          "paymentMemo": "paymentMemo",
          "paymentAmount": 1,
          "returnCode": "returnCode",
          "payeeName": "payeeName",
          "rejectReason": "rejectReason",
          "fundingType": "fundingType",
          "paymentRails": "paymentRails",
          "debit": 0,
          "credit": 6,
          "paymentStatus": "paymentStatus",
          "payeeEmail": "payeeEmail",
          "sourceAccount": "sourceAccount",
          "returnFeeDescription": "returnFeeDescription",
          "returnDescription": "returnDescription",
          "transactionDate": "2000-01-23T00:00:00.000Z",
          "remoteId": "remoteId",
          "returnFee": "returnFee",
          "returnFeeCurrency": "returnFeeCurrency",
          "dateFundingRequested": "dateFundingRequested",
          "payorPaymentId": "payorPaymentId",
          "creditCurrency": "creditCurrency",
          "paymentCurrency": "paymentCurrency",
          "reportTransactionType": "reportTransactionType"
        },
        "properties": {
          "transactionDate": {
            "format": "date",
            "type": "string"
          },
          "transactionTime": {
            "type": "string"
          },
          "reportTransactionType": {
            "type": "string"
          },
          "debit": {
            "format": "int64",
            "type": "integer"
          },
          "debitCurrency": {
            "description": "ISO 4217 3 character currency code",
            "type": "string"
          },
          "credit": {
            "format": "int64",
            "type": "integer"
          },
          "creditCurrency": {
            "description": "ISO 4217 3 character currency code",
            "type": "string"
          },
          "returnFee": {
            "type": "string"
          },
          "returnFeeCurrency": {
            "description": "ISO 4217 3 character currency code",
            "type": "string"
          },
          "returnFeeDescription": {
            "type": "string"
          },
          "returnCode": {
            "type": "string"
          },
          "returnDescription": {
            "type": "string"
          },
          "fundingType": {
            "type": "string"
          },
          "dateFundingRequested": {
            "type": "string"
          },
          "payeeName": {
            "type": "string"
          },
          "remoteId": {
            "description": "Remote ID of the Payee, set by Payor",
            "type": "string"
          },
          "payeeType": {
            "type": "string"
          },
          "payeeEmail": {
            "format": "email",
            "type": "string"
          },
          "sourceAccount": {
            "type": "string"
          },
          "paymentAmount": {
            "format": "int64",
            "type": "integer"
          },
          "paymentCurrency": {
            "description": "ISO 4217 3 character currency code",
            "type": "string"
          },
          "paymentMemo": {
            "type": "string"
          },
          "paymentRails": {
            "type": "string"
          },
          "payorPaymentId": {
            "type": "string"
          },
          "paymentStatus": {
            "type": "string"
          },
          "rejectReason": {
            "type": "string"
          },
          "fxApplied": {
            "format": "double",
            "type": "number"
          }
        },
        "type": "object"
      },
      "CreatePayoutRequestV3": {
        "example": {
          "payoutFromPayorId": "c4261044-13df-4a6c-b1d4-fa8be2b46f5a",
          "payoutToPayorId": "9afc6b39-de12-466a-a9ca-07c7a23b312d",
          "payments": [
            {
              "amount": 1299,
              "paymentMetadata": "invoiceeId_123|abc001:12345|xyz002:4567",
              "currency": "USD",
              "payorPaymentId": "123211321ABSD",
              "transmissionType": "ACH",
              "paymentMemo": "my memo",
              "remoteSystemId": "remoteSystemId",
              "remoteId": "remoteId1234",
              "sourceAccountName": "MyAccountName"
            },
            {
              "amount": 1299,
              "paymentMetadata": "invoiceeId_123|abc001:12345|xyz002:4567",
              "currency": "USD",
              "payorPaymentId": "123211321ABSD",
              "transmissionType": "ACH",
              "paymentMemo": "my memo",
              "remoteSystemId": "remoteSystemId",
              "remoteId": "remoteId1234",
              "sourceAccountName": "MyAccountName"
            },
            {
              "amount": 1299,
              "paymentMetadata": "invoiceeId_123|abc001:12345|xyz002:4567",
              "currency": "USD",
              "payorPaymentId": "123211321ABSD",
              "transmissionType": "ACH",
              "paymentMemo": "my memo",
              "remoteSystemId": "remoteSystemId",
              "remoteId": "remoteId1234",
              "sourceAccountName": "MyAccountName"
            },
            {
              "amount": 1299,
              "paymentMetadata": "invoiceeId_123|abc001:12345|xyz002:4567",
              "currency": "USD",
              "payorPaymentId": "123211321ABSD",
              "transmissionType": "ACH",
              "paymentMemo": "my memo",
              "remoteSystemId": "remoteSystemId",
              "remoteId": "remoteId1234",
              "sourceAccountName": "MyAccountName"
            },
            {
              "amount": 1299,
              "paymentMetadata": "invoiceeId_123|abc001:12345|xyz002:4567",
              "currency": "USD",
              "payorPaymentId": "123211321ABSD",
              "transmissionType": "ACH",
              "paymentMemo": "my memo",
              "remoteSystemId": "remoteSystemId",
              "remoteId": "remoteId1234",
              "sourceAccountName": "MyAccountName"
            }
          ],
          "payoutMemo": "Monthly Payment"
        },
        "properties": {
          "payoutFromPayorId": {
            "description": "<p>The id of the payor whose source account(s) will be debited</p>\n<p>payoutFromPayorId and payoutToPayorId must be both supplied or both omitted</p>\n",
            "example": "c4261044-13df-4a6c-b1d4-fa8be2b46f5a",
            "format": "uuid",
            "type": "string"
          },
          "payoutToPayorId": {
            "description": "<p>The id of the payor whose payees will be paid</p>\n<p>payoutFromPayorId and payoutToPayorId must be both supplied or both omitted</p>\n",
            "example": "9afc6b39-de12-466a-a9ca-07c7a23b312d",
            "format": "uuid",
            "type": "string"
          },
          "payoutMemo": {
            "description": "<p>Text applied to all payment memos unless specified explicitly on a payment</p>\n<p>This should be the reference field on the statement seen by the payee (but not via ACH)</p>\n",
            "example": "Monthly Payment",
            "maxLength": 40,
            "type": "string"
          },
          "payments": {
            "items": {
              "$ref": "#/components/schemas/PaymentInstructionV3"
            },
            "maxItems": 2000,
            "minItems": 1,
            "type": "array"
          }
        },
        "required": [
          "payments"
        ],
        "type": "object"
      },
      "PaymentInstructionV3": {
        "description": "Instruction for creating a payment",
        "example": {
          "amount": 1299,
          "paymentMetadata": "invoiceeId_123|abc001:12345|xyz002:4567",
          "currency": "USD",
          "payorPaymentId": "123211321ABSD",
          "transmissionType": "ACH",
          "paymentMemo": "my memo",
          "remoteSystemId": "remoteSystemId",
          "remoteId": "remoteId1234",
          "sourceAccountName": "MyAccountName"
        },
        "properties": {
          "remoteId": {
            "description": "Your identifier for the payee",
            "example": "remoteId1234",
            "maxLength": 100,
            "minLength": 1,
            "type": "string"
          },
          "currency": {
            "description": "Valid ISO 4217 3 letter currency code. See the <a href=\"https://www.iso.org/iso-4217-currency-codes.html\" target=\"_blank\" a>ISO specification</a> for details.",
            "example": "USD",
            "maxLength": 3,
            "minLength": 3,
            "pattern": "^[A-Z]{3}$",
            "title": "ISO Currency Code",
            "type": "string"
          },
          "amount": {
            "description": "<p>Amount to send to Payee</p>\n<p>The maximum payment amount is dependent on the currency</p>\n",
            "example": 1299,
            "format": "int64",
            "minimum": 1,
            "type": "integer"
          },
          "paymentMemo": {
            "description": "<p>Any value here will override the memo value in the parent payout</p>\n<p>This should be the reference field on the statement seen by the payee (but not via ACH)</p>\n",
            "example": "my memo",
            "maxLength": 40,
            "minLength": 0,
            "type": "string"
          },
          "sourceAccountName": {
            "description": "Must match a valid source account name belonging to the payor",
            "example": "MyAccountName",
            "maxLength": 64,
            "minLength": 1,
            "type": "string"
          },
          "payorPaymentId": {
            "description": "A reference identifier for the payor for the given payee payment",
            "example": "123211321ABSD",
            "maxLength": 40,
            "minLength": 0,
            "type": "string"
          },
          "transmissionType": {
            "description": "Optionally choose a specific transmission method for the payment",
            "enum": [
              "SAME_DAY_ACH",
              "WIRE",
              "ACH",
              "LOCAL",
              "SWIFT"
            ],
            "example": "ACH",
            "type": "string"
          },
          "remoteSystemId": {
            "description": "<p>The identifier for the remote payments system if not Velo</p>\n<p>Should only be used after consultation with Velo Payments</p>\n",
            "maxLength": 100,
            "minLength": 1,
            "type": "string"
          },
          "paymentMetadata": {
            "description": "<p>Metadata about the payment that may be relevant to the specific rails or remote system making the payout</p>\n<p>The structure of the data will be dictated by the requirements of the payment rails</p>\n",
            "example": "invoiceeId_123|abc001:12345|xyz002:4567",
            "maxLength": 512,
            "minLength": 0,
            "type": "string"
          }
        },
        "required": [
          "amount",
          "currency",
          "remoteId",
          "sourceAccountName"
        ],
        "type": "object"
      },
      "PayoutSummaryResponseV3": {
        "example": {
          "rejectedPayments": [
            {
              "currencyType": "USD",
              "reason": "The payee has not been onboarded",
              "amount": 10000,
              "paymentMetadata": "invoiceeId_123|abc001:12345|xyz002:4567",
              "payorPaymentId": "123211321ABSD",
              "reasonCode": "VE1012",
              "remoteSystemId": "OB012",
              "lineNumber": 34,
              "message": "Payment cannot be processed because of the Payee's OFAC or Compliance Status",
              "remoteId": "remoteIdVal123",
              "sourceAccountName": "Chase Bank Account"
            },
            {
              "currencyType": "USD",
              "reason": "The payee has not been onboarded",
              "amount": 10000,
              "paymentMetadata": "invoiceeId_123|abc001:12345|xyz002:4567",
              "payorPaymentId": "123211321ABSD",
              "reasonCode": "VE1012",
              "remoteSystemId": "OB012",
              "lineNumber": 34,
              "message": "Payment cannot be processed because of the Payee's OFAC or Compliance Status",
              "remoteId": "remoteIdVal123",
              "sourceAccountName": "Chase Bank Account"
            }
          ],
          "schedule": {
            "scheduledFor": "2000-01-23T04:56:07.000Z",
            "scheduleStatus": "SCHEDULED",
            "notificationsEnabled": true,
            "scheduledByPrincipalId": "8946953b-1e3b-49cf-9da4-b704cbb78f3e",
            "scheduledAt": "2000-01-23T04:56:07.000Z"
          },
          "paymentsRejected": 1,
          "paymentsSubmitted": 10,
          "paymentsWithdrawn": 0,
          "fxSummaries": [
            {
              "invertedRate": 1.12,
              "creationTime": "2022-10-30T09:45:09.000Z",
              "rate": 0.89,
              "expiryTime": "2022-10-30T09:50:09.000Z",
              "sourceCurrency": "USD",
              "totalPaymentAmount": 890000,
              "paymentCurrency": "USD",
              "quoteId": "af80d455-29dd-4e72-a000-495a9829a7d0",
              "totalSourceAmount": 1000000,
              "fundingStatus": "FUNDED",
              "status": "QUOTED"
            },
            {
              "invertedRate": 1.12,
              "creationTime": "2022-10-30T09:45:09.000Z",
              "rate": 0.89,
              "expiryTime": "2022-10-30T09:50:09.000Z",
              "sourceCurrency": "USD",
              "totalPaymentAmount": 890000,
              "paymentCurrency": "USD",
              "quoteId": "af80d455-29dd-4e72-a000-495a9829a7d0",
              "totalSourceAmount": 1000000,
              "fundingStatus": "FUNDED",
              "status": "QUOTED"
            }
          ],
          "accounts": [
            {
              "sourceAccountId": "cf81e490-4ab8-49c2-bd68-9d1e725480cb",
              "currency": "USD",
              "totalPayoutCost": 1000000,
              "sourceAccountName": "AccountName"
            },
            {
              "sourceAccountId": "cf81e490-4ab8-49c2-bd68-9d1e725480cb",
              "currency": "USD",
              "totalPayoutCost": 1000000,
              "sourceAccountName": "AccountName"
            }
          ],
          "payoutId": "cf81e490-4ab8-49c2-bd68-9d1e725480cb",
          "acceptedPayments": [
            {
              "currencyType": "USD",
              "amount": 10000,
              "paymentMetadata": "invoiceeId_123|abc001:12345|xyz002:4567",
              "payorPaymentId": "123211321ABSD",
              "railsId": "SVB",
              "paymentMemo": "INV00112",
              "remoteSystemId": "OB012",
              "remoteId": "remoteId1234",
              "sourceAccountName": "Chase Bank Account"
            },
            {
              "currencyType": "USD",
              "amount": 10000,
              "paymentMetadata": "invoiceeId_123|abc001:12345|xyz002:4567",
              "payorPaymentId": "123211321ABSD",
              "railsId": "SVB",
              "paymentMemo": "INV00112",
              "remoteSystemId": "OB012",
              "remoteId": "remoteId1234",
              "sourceAccountName": "Chase Bank Account"
            }
          ],
          "status": "COMPLETED",
          "paymentsAccepted": 9
        },
        "properties": {
          "payoutId": {
            "description": "The id of the payout",
            "example": "cf81e490-4ab8-49c2-bd68-9d1e725480cb",
            "format": "uuid",
            "type": "string"
          },
          "status": {
            "description": "The status of the payout (one of SUBMITTED, ACCEPTED, REJECTED, QUOTED, INSTRUCTED, COMPLETED, INCOMPLETE, WITHDRAWN)",
            "example": "COMPLETED",
            "type": "string"
          },
          "paymentsSubmitted": {
            "description": "The number of payments that were submitted in the payout",
            "example": 10,
            "type": "integer"
          },
          "paymentsAccepted": {
            "description": "The number of payments that were accepted in the payout",
            "example": 9,
            "type": "integer"
          },
          "paymentsRejected": {
            "description": "The number of payments that were rejected in the payout",
            "example": 1,
            "type": "integer"
          },
          "paymentsWithdrawn": {
            "description": "The number of payments that were withdrawn in the payout",
            "example": 0,
            "type": "integer"
          },
          "fxSummaries": {
            "items": {
              "$ref": "#/components/schemas/QuoteFxSummaryV3"
            },
            "type": "array"
          },
          "accounts": {
            "items": {
              "$ref": "#/components/schemas/SourceAccountV3"
            },
            "type": "array"
          },
          "acceptedPayments": {
            "items": {
              "$ref": "#/components/schemas/AcceptedPaymentV3"
            },
            "type": "array"
          },
          "rejectedPayments": {
            "items": {
              "$ref": "#/components/schemas/RejectedPaymentV3"
            },
            "type": "array"
          },
          "schedule": {
            "$ref": "#/components/schemas/PayoutScheduleV3"
          }
        },
        "required": [
          "acceptedPayments",
          "accounts",
          "fxSummaries",
          "paymentsWithdrawn",
          "rejectedPayments"
        ],
        "type": "object"
      },
      "InstructPayoutRequestV3": {
        "example": {
          "fxRateDegredationThresholdPercentage": 0.8008282
        },
        "properties": {
          "fxRateDegredationThresholdPercentage": {
            "description": "Halt instruction if the FX rates have become worse since the last quote",
            "format": "float",
            "type": "number"
          }
        },
        "type": "object"
      },
      "QuoteResponseV3": {
        "example": {
          "fxSummaries": [
            {
              "invertedRate": 1.12,
              "creationTime": "2022-10-30T09:45:09.000Z",
              "rate": 0.89,
              "expiryTime": "2022-10-30T09:50:09.000Z",
              "sourceCurrency": "USD",
              "totalPaymentAmount": 890000,
              "paymentCurrency": "USD",
              "quoteId": "af80d455-29dd-4e72-a000-495a9829a7d0",
              "totalSourceAmount": 1000000,
              "fundingStatus": "FUNDED",
              "status": "QUOTED"
            },
            {
              "invertedRate": 1.12,
              "creationTime": "2022-10-30T09:45:09.000Z",
              "rate": 0.89,
              "expiryTime": "2022-10-30T09:50:09.000Z",
              "sourceCurrency": "USD",
              "totalPaymentAmount": 890000,
              "paymentCurrency": "USD",
              "quoteId": "af80d455-29dd-4e72-a000-495a9829a7d0",
              "totalSourceAmount": 1000000,
              "fundingStatus": "FUNDED",
              "status": "QUOTED"
            }
          ]
        },
        "properties": {
          "fxSummaries": {
            "items": {
              "$ref": "#/components/schemas/QuoteFxSummaryV3"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "PagedPaymentsResponseV3": {
        "description": "List Payees Response Object",
        "example": {
          "links": [
            {
              "rel": "rel",
              "href": "href"
            },
            {
              "rel": "rel",
              "href": "href"
            }
          ],
          "page": {
            "numberOfElements": 0,
            "totalPages": 1,
            "pageSize": 5,
            "page": 5,
            "totalElements": 6
          },
          "content": [
            {
              "amount": 10000,
              "paymentMemo": "INV00112",
              "remoteId": "remoteIdVal123",
              "payee": {
                "individual": {
                  "name": {
                    "firstName": "Fred",
                    "lastName": "Flintstone"
                  }
                },
                "company": {
                  "companyName": "ACME Anvils PLC"
                },
                "payeeId": "046b6c7f-0b8a-43b9-b35d-6489e6daee91"
              },
              "paymentId": "859af785-223b-4d5b-a708-5fa57f006dbb",
              "withdrawable": false,
              "autoWithdrawnReasonCode": "VE0003",
              "paymentMetadata": "invoiceeId_123|abc001:12345|xyz002:4567",
              "currency": "USD",
              "payorPaymentId": "123211321ABSD",
              "transmissionType": "LOCAL",
              "railsId": "SVB",
              "remoteSystemId": "OB012",
              "sourceAccountName": "Chase Bank Account",
              "status": "AWAITING_FUNDS"
            },
            {
              "amount": 10000,
              "paymentMemo": "INV00112",
              "remoteId": "remoteIdVal123",
              "payee": {
                "individual": {
                  "name": {
                    "firstName": "Fred",
                    "lastName": "Flintstone"
                  }
                },
                "company": {
                  "companyName": "ACME Anvils PLC"
                },
                "payeeId": "046b6c7f-0b8a-43b9-b35d-6489e6daee91"
              },
              "paymentId": "859af785-223b-4d5b-a708-5fa57f006dbb",
              "withdrawable": false,
              "autoWithdrawnReasonCode": "VE0003",
              "paymentMetadata": "invoiceeId_123|abc001:12345|xyz002:4567",
              "currency": "USD",
              "payorPaymentId": "123211321ABSD",
              "transmissionType": "LOCAL",
              "railsId": "SVB",
              "remoteSystemId": "OB012",
              "sourceAccountName": "Chase Bank Account",
              "status": "AWAITING_FUNDS"
            }
          ]
        },
        "properties": {
          "page": {
            "$ref": "#/components/schemas/PagedPayeeInvitationStatusResponseV3_page"
          },
          "links": {
            "items": {
              "$ref": "#/components/schemas/PagedPayeeResponseV3_links"
            },
            "type": "array"
          },
          "content": {
            "items": {
              "$ref": "#/components/schemas/PaymentV3"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "SchedulePayoutRequestV3": {
        "example": {
          "scheduledFor": "2025-01-01T10:00:00.000Z",
          "notificationsEnabled": true
        },
        "properties": {
          "scheduledFor": {
            "description": "UTC timestamp for instructing the payout. Format is ISO-8601.",
            "example": "2025-01-01T10:00:00.000Z",
            "format": "date-time",
            "type": "string"
          },
          "notificationsEnabled": {
            "description": "Flag to indicate whether to receive notifications when scheduled payout is processed",
            "type": "boolean"
          }
        },
        "required": [
          "notificationsEnabled",
          "scheduledFor"
        ],
        "type": "object"
      },
      "PaymentChannelRulesResponse": {
        "example": {
          "bank": [
            {
              "isoCountryCode": "US",
              "rules": [
                {
                  "displayName": "Account Name",
                  "minLength": 5,
                  "displayOrder": 0,
                  "description": "The bank branch, account number prefix and account number suffix; with hyphen separators.",
                  "required": true,
                  "maxLength": 50,
                  "validation": "^[0-9]{6,11}$",
                  "element": "accountName"
                },
                {
                  "displayName": "Account Name",
                  "minLength": 5,
                  "displayOrder": 0,
                  "description": "The bank branch, account number prefix and account number suffix; with hyphen separators.",
                  "required": true,
                  "maxLength": 50,
                  "validation": "^[0-9]{6,11}$",
                  "element": "accountName"
                }
              ]
            },
            {
              "isoCountryCode": "US",
              "rules": [
                {
                  "displayName": "Account Name",
                  "minLength": 5,
                  "displayOrder": 0,
                  "description": "The bank branch, account number prefix and account number suffix; with hyphen separators.",
                  "required": true,
                  "maxLength": 50,
                  "validation": "^[0-9]{6,11}$",
                  "element": "accountName"
                },
                {
                  "displayName": "Account Name",
                  "minLength": 5,
                  "displayOrder": 0,
                  "description": "The bank branch, account number prefix and account number suffix; with hyphen separators.",
                  "required": true,
                  "maxLength": 50,
                  "validation": "^[0-9]{6,11}$",
                  "element": "accountName"
                }
              ]
            }
          ]
        },
        "properties": {
          "bank": {
            "items": {
              "$ref": "#/components/schemas/PaymentChannelCountry"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "WithdrawPaymentRequest": {
        "example": {
          "reason": "Payment submitted in error"
        },
        "properties": {
          "reason": {
            "description": "Reason for withdrawal",
            "example": "Payment submitted in error",
            "maxLength": 256,
            "minLength": 2,
            "type": "string"
          }
        },
        "required": [
          "reason"
        ],
        "type": "object"
      },
      "SupportedCountriesResponse": {
        "example": {
          "countries": [
            {
              "isoCountryCode": "US",
              "currencies": [
                "USD",
                "USD"
              ]
            },
            {
              "isoCountryCode": "US",
              "currencies": [
                "USD",
                "USD"
              ]
            }
          ]
        },
        "properties": {
          "countries": {
            "items": {
              "$ref": "#/components/schemas/SupportedCountry"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "SupportedCountriesResponseV2": {
        "example": {
          "countries": [
            {
              "regions": [
                {
                  "name": "California",
                  "abbreviation": "CA"
                },
                {
                  "name": "California",
                  "abbreviation": "CA"
                }
              ],
              "isoCountryCode": "US",
              "currencies": [
                "USD",
                "USD"
              ]
            },
            {
              "regions": [
                {
                  "name": "California",
                  "abbreviation": "CA"
                },
                {
                  "name": "California",
                  "abbreviation": "CA"
                }
              ],
              "isoCountryCode": "US",
              "currencies": [
                "USD",
                "USD"
              ]
            }
          ]
        },
        "properties": {
          "countries": {
            "items": {
              "$ref": "#/components/schemas/SupportedCountryV2"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "SupportedCurrencyResponseV2": {
        "example": {
          "currencies": [
            {
              "currency": "USD",
              "maxPaymentAmount": 100000
            },
            {
              "currency": "USD",
              "maxPaymentAmount": 100000
            }
          ]
        },
        "properties": {
          "currencies": {
            "items": {
              "$ref": "#/components/schemas/SupportedCurrencyV2"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "WebhooksResponse": {
        "description": "List Webhooks Object",
        "example": {
          "links": [
            {
              "rel": "first",
              "href": "https://api.sandbox.velopayments.com/v1/resources?page=1&pageSize=3&sort=lastLoadedAt:asc"
            },
            {
              "rel": "first",
              "href": "https://api.sandbox.velopayments.com/v1/resources?page=1&pageSize=3&sort=lastLoadedAt:asc"
            }
          ],
          "page": {
            "numberOfElements": 10,
            "totalPages": 10,
            "pageSize": 10,
            "page": 10,
            "totalElements": 10
          },
          "content": [
            {
              "id": "046b6c7f-0b8a-43b9-b35d-6489e6daee91",
              "payorId": "046b6c7f-0b8a-43b9-b35d-6489e6daee91",
              "authorizationHeader": "authorizationHeader",
              "categories": [
                null,
                null
              ],
              "webhookUrl": "webhookUrl",
              "enabled": true
            },
            {
              "id": "046b6c7f-0b8a-43b9-b35d-6489e6daee91",
              "payorId": "046b6c7f-0b8a-43b9-b35d-6489e6daee91",
              "authorizationHeader": "authorizationHeader",
              "categories": [
                null,
                null
              ],
              "webhookUrl": "webhookUrl",
              "enabled": true
            }
          ]
        },
        "properties": {
          "page": {
            "$ref": "#/components/schemas/CommonPageObject"
          },
          "links": {
            "items": {
              "$ref": "#/components/schemas/CommonLinkObject"
            },
            "type": "array"
          },
          "content": {
            "items": {
              "$ref": "#/components/schemas/WebhookResponse"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "CreateWebhookRequest": {
        "example": {
          "payorId": "046b6c7f-0b8a-43b9-b35d-6489e6daee91",
          "authorizationHeader": "authorizationHeader",
          "categories": [
            null,
            null
          ],
          "webhookUrl": "webhookUrl",
          "enabled": true
        },
        "properties": {
          "payorId": {
            "format": "uuid",
            "type": "string"
          },
          "webhookUrl": {
            "description": "the webhook URL to use.",
            "maxLength": 2000,
            "minLength": 6,
            "type": "string"
          },
          "authorizationHeader": {
            "description": "the authorization header to include with the notification.",
            "maxLength": 1000,
            "minLength": 4,
            "pattern": ".*",
            "type": "string"
          },
          "enabled": {
            "description": "whether the webhook is enabled.",
            "type": "boolean"
          },
          "categories": {
            "description": "the categories to enable.",
            "items": {
              "$ref": "#/components/schemas/Category"
            },
            "type": "array"
          }
        },
        "required": [
          "enabled",
          "payorId",
          "webhookUrl"
        ],
        "type": "object"
      },
      "WebhookResponse": {
        "example": {
          "id": "046b6c7f-0b8a-43b9-b35d-6489e6daee91",
          "payorId": "046b6c7f-0b8a-43b9-b35d-6489e6daee91",
          "authorizationHeader": "authorizationHeader",
          "categories": [
            null,
            null
          ],
          "webhookUrl": "webhookUrl",
          "enabled": true
        },
        "properties": {
          "id": {
            "format": "uuid",
            "type": "string"
          },
          "payorId": {
            "format": "uuid",
            "type": "string"
          },
          "webhookUrl": {
            "type": "string"
          },
          "authorizationHeader": {
            "type": "string"
          },
          "enabled": {
            "type": "boolean"
          },
          "categories": {
            "items": {
              "$ref": "#/components/schemas/Category"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "UpdateWebhookRequest": {
        "example": {
          "authorizationHeader": "authorizationHeader",
          "categories": [
            null,
            null
          ],
          "webhookUrl": "webhookUrl",
          "enabled": true
        },
        "properties": {
          "webhookUrl": {
            "description": "the webhook URL to use.",
            "maxLength": 2000,
            "minLength": 6,
            "type": "string"
          },
          "authorizationHeader": {
            "description": "the authorization header to include with the notification.",
            "maxLength": 1000,
            "minLength": 4,
            "nullable": true,
            "pattern": ".*",
            "type": "string"
          },
          "enabled": {
            "description": "whether the webhook is enabled.",
            "type": "boolean"
          },
          "categories": {
            "description": "The notification categories to enable.",
            "items": {
              "$ref": "#/components/schemas/Category"
            },
            "nullable": true,
            "type": "array"
          }
        },
        "type": "object"
      },
      "PingResponse": {
        "example": {
          "webhookId": "046b6c7f-0b8a-43b9-b35d-6489e6daee91",
          "id": "046b6c7f-0b8a-43b9-b35d-6489e6daee91"
        },
        "properties": {
          "id": {
            "format": "uuid",
            "type": "string"
          },
          "webhookId": {
            "format": "uuid",
            "type": "string"
          }
        },
        "type": "object"
      },
      "LocalisationDetails": {
        "properties": {
          "template": {
            "description": "the English language message template used to construct the error message",
            "example": "size must be between {min} and {max}",
            "type": "string"
          },
          "parameters": {
            "additionalProperties": {
              "type": "string"
            },
            "description": "name to value map containing any named parameters that appear in the message template",
            "example": {
              "min": "0",
              "max": "10"
            },
            "type": "object"
          }
        },
        "type": "object"
      },
      "ErrorData": {
        "properties": {
          "description": {
            "description": "The description of the error data content",
            "example": "The rejected CSV rows",
            "type": "string"
          },
          "content": {
            "description": "Object containing typed error data specific to the API",
            "type": "object"
          }
        },
        "type": "object"
      },
      "UserInfo": {
        "example": {
          "mfa_details": {
            "mfa_type": "TOTP",
            "verified": true
          },
          "user_id": "39976ee5-dc4c-4b21-a966-a04fa71ef9e1",
          "userType": "PAYOR"
        },
        "properties": {
          "user_id": {
            "description": "the id of the user",
            "example": "39976ee5-dc4c-4b21-a966-a04fa71ef9e1",
            "format": "uuid",
            "type": "string"
          },
          "userType": {
            "$ref": "#/components/schemas/UserType_2"
          },
          "mfa_details": {
            "$ref": "#/components/schemas/MFADetails"
          }
        },
        "type": "object"
      },
      "Role": {
        "properties": {
          "name": {
            "description": "the name of the role",
            "example": "payor.admin",
            "type": "string"
          }
        },
        "required": [
          "name"
        ],
        "type": "object"
      },
      "VerificationCode": {
        "description": "<p>Optional property that MUST be suppied when manually verifying a user</p>\n<p>The user's smsNumber is registered via a separate endpoint and an OTP sent to them</p>\n",
        "example": "123456",
        "maxLength": 6,
        "minLength": 6,
        "nullable": true,
        "type": "string"
      },
      "MFAType": {
        "description": "The type of the MFA device",
        "enum": [
          "SMS",
          "YUBIKEY",
          "TOTP"
        ],
        "example": "TOTP",
        "nullable": true,
        "type": "string"
      },
      "PayorAddressV2": {
        "example": {
          "country": "US",
          "countyOrProvince": "FL",
          "line4": "line4",
          "city": "Key West",
          "line3": "line3",
          "line2": "line2",
          "line1": "500 Duval St",
          "zipOrPostcode": "33945"
        },
        "properties": {
          "line1": {
            "example": "500 Duval St",
            "maxLength": 255,
            "minLength": 2,
            "nullable": false,
            "type": "string"
          },
          "line2": {
            "maxLength": 255,
            "minLength": 0,
            "nullable": true,
            "type": "string"
          },
          "line3": {
            "maxLength": 255,
            "minLength": 0,
            "nullable": true,
            "type": "string"
          },
          "line4": {
            "maxLength": 255,
            "minLength": 0,
            "nullable": true,
            "type": "string"
          },
          "city": {
            "example": "Key West",
            "maxLength": 100,
            "minLength": 2,
            "nullable": false,
            "type": "string"
          },
          "countyOrProvince": {
            "example": "FL",
            "maxLength": 100,
            "minLength": 2,
            "nullable": true,
            "type": "string"
          },
          "zipOrPostcode": {
            "example": "33945",
            "maxLength": 30,
            "minLength": 2,
            "nullable": true,
            "type": "string"
          },
          "country": {
            "example": "US",
            "maxLength": 50,
            "minLength": 2,
            "nullable": false,
            "type": "string"
          }
        },
        "required": [
          "city",
          "country",
          "line1"
        ],
        "type": "object"
      },
      "KycState": {
        "description": "The kyc state of the payor. One of the following values: FAILED_KYC, PASSED_KYC, REQUIRES_KYC",
        "example": "PASSED_KYC",
        "readOnly": true,
        "type": "string"
      },
      "PaymentRails": {
        "description": "The id of the payment rails",
        "type": "string"
      },
      "TransmissionTypes": {
        "example": {
          "ACH": true,
          "SAME_DAY_ACH": true,
          "WIRE": true
        },
        "properties": {
          "ACH": {
            "description": "Whether the Payor is allowed to pay via ACH",
            "example": true,
            "type": "boolean"
          },
          "SAME_DAY_ACH": {
            "description": "Whether the Payor is allowed to pay via same day ACH",
            "example": true,
            "type": "boolean"
          },
          "WIRE": {
            "description": "Whether the Payor is allowed to pay via wire",
            "example": true,
            "type": "boolean"
          }
        },
        "required": [
          "ACH",
          "SAME_DAY_ACH",
          "WIRE"
        ],
        "type": "object"
      },
      "PayeePayorRefV3": {
        "example": {
          "payorId": "ba08877f-9d96-41e4-9c26-44a872d856ae",
          "invitationStatusTimestamp": "2019-01-20T09:00:00.000Z",
          "payableStatus": true,
          "invitationStatus": "invitationStatus",
          "payableIssues": [
            {
              "code": "3",
              "message": "payee-disabled"
            },
            {
              "code": "3",
              "message": "payee-disabled"
            }
          ],
          "remoteId": "uniqueIdForRemoteEntity",
          "paymentChannelId": "70faaff7-2c32-4b44-b27f-f0b6c484e6f3"
        },
        "properties": {
          "payorId": {
            "example": "ba08877f-9d96-41e4-9c26-44a872d856ae",
            "format": "uuid",
            "type": "string"
          },
          "remoteId": {
            "example": "uniqueIdForRemoteEntity",
            "type": "string"
          },
          "invitationStatus": {
            "type": "string"
          },
          "invitationStatusTimestamp": {
            "description": "The timestamp when the invitation status is updated",
            "example": "2019-01-20T09:00:00.000Z",
            "format": "date-time",
            "nullable": true,
            "type": "string"
          },
          "paymentChannelId": {
            "example": "70faaff7-2c32-4b44-b27f-f0b6c484e6f3",
            "format": "uuid",
            "type": "string"
          },
          "payableStatus": {
            "description": "Indicates if the payee is payable for this payor",
            "type": "boolean"
          },
          "payableIssues": {
            "description": "Indicates any conditions which prevent the payee from being payable for this payor",
            "items": {
              "$ref": "#/components/schemas/PayableIssueV3"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "OnboardedStatusV3": {
        "description": "Onboarded status. One of the following values: CREATED, INVITED, REGISTERED, ONBOARDED",
        "type": "string"
      },
      "LanguageV3": {
        "description": "An IETF BCP 47 language code which has been configured for use within this Velo environment.<BR>\nSee the /v1/supportedLanguages endpoint to list the available codes for an environment.\n",
        "example": "en-US",
        "type": "string"
      },
      "IsoCountryCode": {
        "description": "Valid ISO 3166 2 character country code. See the <a href=\"https://www.iso.org/iso-3166-country-codes.html\" target=\"_blank\" a>ISO specification</a> for details.",
        "example": "US",
        "maxLength": 2,
        "minLength": 2,
        "pattern": "^[A-Z]{2}$",
        "title": "ISO 3166 2 Character Country Code",
        "type": "string"
      },
      "PayeeAddressV3": {
        "example": {
          "country": "US",
          "countyOrProvince": "FL",
          "line4": "line4",
          "city": "Key West",
          "line3": "line3",
          "line2": "line2",
          "line1": "500 Duval St",
          "zipOrPostcode": "33945"
        },
        "properties": {
          "line1": {
            "example": "500 Duval St",
            "maxLength": 255,
            "minLength": 2,
            "nullable": false,
            "type": "string"
          },
          "line2": {
            "maxLength": 255,
            "minLength": 0,
            "nullable": true,
            "type": "string"
          },
          "line3": {
            "maxLength": 255,
            "minLength": 0,
            "nullable": true,
            "type": "string"
          },
          "line4": {
            "maxLength": 255,
            "minLength": 0,
            "nullable": true,
            "type": "string"
          },
          "city": {
            "example": "Key West",
            "maxLength": 100,
            "minLength": 2,
            "nullable": false,
            "type": "string"
          },
          "countyOrProvince": {
            "example": "FL",
            "maxLength": 100,
            "minLength": 2,
            "nullable": true,
            "type": "string"
          },
          "zipOrPostcode": {
            "example": "33945",
            "maxLength": 30,
            "minLength": 2,
            "nullable": true,
            "type": "string"
          },
          "country": {
            "description": "Valid ISO 3166 2 character country code. See the <a href=\"https://www.iso.org/iso-3166-country-codes.html\" target=\"_blank\" a>ISO specification</a> for details.",
            "example": "US",
            "maxLength": 2,
            "minLength": 2,
            "pattern": "^[A-Z]{2}$",
            "title": "ISO 3166 2 Character Country Code",
            "type": "string"
          }
        },
        "required": [
          "city",
          "country",
          "line1"
        ],
        "type": "object"
      },
      "IndividualV3": {
        "example": {
          "name": {
            "firstName": "Bob",
            "lastName": "Smith",
            "otherNames": "A",
            "title": "Mr"
          },
          "nationalIdentification": "AB123456C",
          "dateOfBirth": "1985-01-01T00:00:00.000Z"
        },
        "properties": {
          "name": {
            "$ref": "#/components/schemas/IndividualV3_name"
          },
          "nationalIdentification": {
            "description": "If not authorized to view, value will be masked. Example: XXXXX1234",
            "example": "AB123456C",
            "maxLength": 30,
            "minLength": 6,
            "readOnly": true,
            "type": "string"
          },
          "dateOfBirth": {
            "description": "If not authorized to view, value will be masked. Example: - XXXX-XX-XX",
            "example": "1985-01-01T00:00:00.000Z",
            "readOnly": true,
            "type": "string"
          }
        },
        "required": [
          "dateOfBirth",
          "name"
        ],
        "type": "object"
      },
      "CompanyV3": {
        "example": {
          "taxId": "123123123",
          "name": "ABC Group Plc",
          "operatingName": "ABC Co"
        },
        "nullable": true,
        "properties": {
          "name": {
            "example": "ABC Group Plc",
            "maxLength": 40,
            "minLength": 3,
            "type": "string"
          },
          "taxId": {
            "description": "Company Tax Id must be between 6 and 30 characters long",
            "example": "123123123",
            "maxLength": 30,
            "minLength": 6,
            "nullable": true,
            "type": "string"
          },
          "operatingName": {
            "example": "ABC Co",
            "maxLength": 100,
            "minLength": 1,
            "nullable": true,
            "type": "string"
          }
        },
        "required": [
          "name"
        ],
        "type": "object"
      },
      "ChallengeV3": {
        "example": {
          "description": "challenge description",
          "value": "challenge test"
        },
        "properties": {
          "value": {
            "example": "challenge test",
            "maxLength": 20,
            "minLength": 3,
            "type": "string"
          },
          "description": {
            "example": "challenge description",
            "maxLength": 255,
            "minLength": 1,
            "type": "string"
          }
        },
        "required": [
          "description",
          "value"
        ],
        "type": "object"
      },
      "GetPayeeListResponseV3": {
        "example": {
          "payorRefs": [
            {
              "payorId": "ba08877f-9d96-41e4-9c26-44a872d856ae",
              "invitationStatusTimestamp": "2019-01-20T09:00:00.000Z",
              "payableStatus": true,
              "invitationStatus": "invitationStatus",
              "payableIssues": [
                {
                  "code": "3",
                  "message": "payee-disabled"
                },
                {
                  "code": "3",
                  "message": "payee-disabled"
                }
              ],
              "remoteId": "uniqueIdForRemoteEntity",
              "paymentChannelId": "70faaff7-2c32-4b44-b27f-f0b6c484e6f3"
            },
            {
              "payorId": "ba08877f-9d96-41e4-9c26-44a872d856ae",
              "invitationStatusTimestamp": "2019-01-20T09:00:00.000Z",
              "payableStatus": true,
              "invitationStatus": "invitationStatus",
              "payableIssues": [
                {
                  "code": "3",
                  "message": "payee-disabled"
                },
                {
                  "code": "3",
                  "message": "payee-disabled"
                }
              ],
              "remoteId": "uniqueIdForRemoteEntity",
              "paymentChannelId": "70faaff7-2c32-4b44-b27f-f0b6c484e6f3"
            }
          ],
          "watchlistOverrideComment": "Example reason for the watchlist status being overridden",
          "country": "US",
          "watchlistStatus": "watchlistStatus",
          "disabledUpdatedTimestamp": "2019-01-20T09:00:00.000Z",
          "individual": {
            "name": {
              "firstName": "Bob",
              "lastName": "Smith",
              "otherNames": "H",
              "title": "Mr"
            }
          },
          "created": "2019-01-20T09:00:00.000Z",
          "displayName": "ABC",
          "payeeType": "payeeType",
          "language": "en-US",
          "onboardedStatus": "onboardedStatus",
          "watchlistStatusUpdatedTimestamp": "2019-01-20T09:00:00.000Z",
          "disabledComment": "reason for disabled",
          "disabled": true,
          "company": {
            "name": "ABC Group Plc",
            "operatingName": "ABC Co"
          },
          "payeeId": "2aa5d7e0-2ecb-403f-8494-1865ed0454e9",
          "email": "bob@example.com"
        },
        "properties": {
          "payeeId": {
            "example": "2aa5d7e0-2ecb-403f-8494-1865ed0454e9",
            "format": "uuid",
            "readOnly": true,
            "type": "string"
          },
          "payorRefs": {
            "items": {
              "$ref": "#/components/schemas/PayeePayorRefV3"
            },
            "nullable": true,
            "readOnly": true,
            "type": "array"
          },
          "email": {
            "example": "bob@example.com",
            "format": "email",
            "nullable": true,
            "type": "string"
          },
          "onboardedStatus": {
            "description": "Onboarded status. One of the following values: CREATED, INVITED, REGISTERED, ONBOARDED",
            "type": "string"
          },
          "watchlistStatus": {
            "description": "Current watchlist status. One of the following values: NONE, PENDING, REVIEW, PASSED, FAILED",
            "type": "string"
          },
          "watchlistStatusUpdatedTimestamp": {
            "example": "2019-01-20T09:00:00.000Z",
            "format": "date_time",
            "nullable": true,
            "readOnly": true,
            "type": "string"
          },
          "watchlistOverrideComment": {
            "example": "Example reason for the watchlist status being overridden",
            "nullable": true,
            "type": "string"
          },
          "language": {
            "description": "An IETF BCP 47 language code which has been configured for use within this Velo environment.<BR>\nSee the /v1/supportedLanguages endpoint to list the available codes for an environment.\n",
            "example": "en-US",
            "type": "string"
          },
          "created": {
            "example": "2019-01-20T09:00:00.000Z",
            "format": "date-time",
            "type": "string"
          },
          "country": {
            "description": "Valid ISO 3166 2 character country code. See the <a href=\"https://www.iso.org/iso-3166-country-codes.html\" target=\"_blank\" a>ISO specification</a> for details.",
            "example": "US",
            "maxLength": 2,
            "minLength": 2,
            "pattern": "^[A-Z]{2}$",
            "title": "ISO 3166 2 Character Country Code",
            "type": "string"
          },
          "displayName": {
            "example": "ABC",
            "type": "string"
          },
          "payeeType": {
            "description": "Type of Payee. One of the following values: Individual, Company",
            "type": "string"
          },
          "disabled": {
            "type": "boolean"
          },
          "disabledComment": {
            "example": "reason for disabled",
            "type": "string"
          },
          "disabledUpdatedTimestamp": {
            "example": "2019-01-20T09:00:00.000Z",
            "format": "date-time",
            "type": "string"
          },
          "individual": {
            "$ref": "#/components/schemas/GetPayeeListResponseIndividualV3"
          },
          "company": {
            "$ref": "#/components/schemas/GetPayeeListResponseCompanyV3"
          }
        },
        "type": "object"
      },
      "CreatePayeeV3": {
        "example": {
          "payorRefs": [
            {
              "payorId": "ba08877f-9d96-41e4-9c26-44a872d856ae",
              "invitationStatusTimestamp": "2019-01-20T09:00:00.000Z",
              "payableStatus": true,
              "invitationStatus": "invitationStatus",
              "payableIssues": [
                {
                  "code": "3",
                  "message": "payee-disabled"
                },
                {
                  "code": "3",
                  "message": "payee-disabled"
                }
              ],
              "remoteId": "uniqueIdForRemoteEntity",
              "paymentChannelId": "70faaff7-2c32-4b44-b27f-f0b6c484e6f3"
            },
            {
              "payorId": "ba08877f-9d96-41e4-9c26-44a872d856ae",
              "invitationStatusTimestamp": "2019-01-20T09:00:00.000Z",
              "payableStatus": true,
              "invitationStatus": "invitationStatus",
              "payableIssues": [
                {
                  "code": "3",
                  "message": "payee-disabled"
                },
                {
                  "code": "3",
                  "message": "payee-disabled"
                }
              ],
              "remoteId": "uniqueIdForRemoteEntity",
              "paymentChannelId": "70faaff7-2c32-4b44-b27f-f0b6c484e6f3"
            }
          ],
          "address": {
            "country": "US",
            "countyOrProvince": "FL",
            "line4": "line4",
            "city": "Key West",
            "line3": "line3",
            "line2": "line2",
            "line1": "500 Duval St",
            "zipOrPostcode": "33945"
          },
          "individual": {
            "name": {
              "firstName": "Bob",
              "lastName": "Smith",
              "otherNames": "H",
              "title": "Mr"
            },
            "nationalIdentification": "SA211123K",
            "dateOfBirth": "1970-05-20T00:00:00.000+0000"
          },
          "challenge": {
            "description": "challenge description",
            "value": "challenge test"
          },
          "language": "en-US",
          "company": {
            "taxId": "123123123",
            "name": "ABC Group Plc",
            "operatingName": "ABC Co"
          },
          "payeeId": "2aa5d7e0-2ecb-403f-8494-1865ed0454e9",
          "type": "type",
          "email": "bob@example.com",
          "remoteId": "Remote ID",
          "paymentChannel": {
            "paymentChannelName": "My Payment Channel",
            "routingNumber": "XXXXX6789",
            "accountName": "My account",
            "countryCode": "US",
            "iban": "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXX1234",
            "currency": "USD",
            "accountNumber": "XXXXXX5678"
          }
        },
        "properties": {
          "payeeId": {
            "example": "2aa5d7e0-2ecb-403f-8494-1865ed0454e9",
            "format": "uuid",
            "readOnly": true,
            "type": "string"
          },
          "payorRefs": {
            "items": {
              "$ref": "#/components/schemas/PayeePayorRefV3"
            },
            "nullable": true,
            "readOnly": true,
            "type": "array"
          },
          "email": {
            "example": "bob@example.com",
            "format": "email",
            "maxLength": 255,
            "minLength": 3,
            "type": "string"
          },
          "remoteId": {
            "example": "Remote ID",
            "maxLength": 100,
            "minLength": 1,
            "type": "string"
          },
          "type": {
            "description": "Type of Payee. One of the following values: Individual, Company",
            "type": "string"
          },
          "address": {
            "$ref": "#/components/schemas/CreatePayeeAddressV3"
          },
          "paymentChannel": {
            "$ref": "#/components/schemas/CreatePaymentChannelV3"
          },
          "challenge": {
            "$ref": "#/components/schemas/ChallengeV3"
          },
          "language": {
            "description": "An IETF BCP 47 language code which has been configured for use within this Velo environment.<BR>\nSee the /v1/supportedLanguages endpoint to list the available codes for an environment.\n",
            "example": "en-US",
            "type": "string"
          },
          "company": {
            "$ref": "#/components/schemas/CompanyV3"
          },
          "individual": {
            "$ref": "#/components/schemas/CreateIndividualV3"
          }
        },
        "required": [
          "address",
          "email",
          "remoteId",
          "type"
        ],
        "type": "object"
      },
      "PayeeTypeEnum": {
        "description": "The type of the payee",
        "enum": [
          "Individual",
          "Company"
        ],
        "type": "string"
      },
      "Iban": {
        "description": "Must match the regular expression ```^[A-Za-z0-9]+$```.",
        "example": "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXX1234",
        "maxLength": 34,
        "minLength": 15,
        "pattern": "^[A-Za-z0-9]+$",
        "title": "IBAN - International Bank Account Number",
        "type": "string"
      },
      "SupportedLanguage": {
        "description": "An IETF BCP 47 language code which has been configured for use within this Velo environment.<BR>\nSee the /v1/supportedLanguages endpoint to list the available codes for an environment.\n",
        "example": "en-US",
        "type": "string"
      },
      "FailedSubmissionV3": {
        "example": {
          "failedSubmission": {
            "payorRefs": [
              {
                "payorId": "ba08877f-9d96-41e4-9c26-44a872d856ae",
                "invitationStatusTimestamp": "2019-01-20T09:00:00.000Z",
                "payableStatus": true,
                "invitationStatus": "invitationStatus",
                "payableIssues": [
                  {
                    "code": "3",
                    "message": "payee-disabled"
                  },
                  {
                    "code": "3",
                    "message": "payee-disabled"
                  }
                ],
                "remoteId": "uniqueIdForRemoteEntity",
                "paymentChannelId": "70faaff7-2c32-4b44-b27f-f0b6c484e6f3"
              },
              {
                "payorId": "ba08877f-9d96-41e4-9c26-44a872d856ae",
                "invitationStatusTimestamp": "2019-01-20T09:00:00.000Z",
                "payableStatus": true,
                "invitationStatus": "invitationStatus",
                "payableIssues": [
                  {
                    "code": "3",
                    "message": "payee-disabled"
                  },
                  {
                    "code": "3",
                    "message": "payee-disabled"
                  }
                ],
                "remoteId": "uniqueIdForRemoteEntity",
                "paymentChannelId": "70faaff7-2c32-4b44-b27f-f0b6c484e6f3"
              }
            ],
            "address": {
              "country": "US",
              "countyOrProvince": "FL",
              "line4": "line4",
              "city": "Key West",
              "line3": "line3",
              "line2": "line2",
              "line1": "500 Duval St",
              "zipOrPostcode": "33945"
            },
            "individual": {
              "name": {
                "firstName": "Bob",
                "lastName": "Smith",
                "otherNames": "H",
                "title": "Mr"
              },
              "nationalIdentification": "SA211123K",
              "dateOfBirth": "1970-05-20T00:00:00.000+0000"
            },
            "challenge": {
              "description": "challenge description",
              "value": "challenge test"
            },
            "language": "en-US",
            "company": {
              "taxId": "123123123",
              "name": "ABC Group Plc",
              "operatingName": "ABC Co"
            },
            "payeeId": "2aa5d7e0-2ecb-403f-8494-1865ed0454e9",
            "type": "type",
            "email": "bob@example.com",
            "remoteId": "Remote ID",
            "paymentChannel": {
              "paymentChannelName": "My Payment Channel",
              "routingNumber": "XXXXX6789",
              "accountName": "My account",
              "countryCode": "US",
              "iban": "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXX1234",
              "currency": "USD",
              "accountNumber": "XXXXXX5678"
            }
          },
          "failureMessage": "failure reason"
        },
        "properties": {
          "failedSubmission": {
            "$ref": "#/components/schemas/FailedPayeeV3"
          },
          "failureMessage": {
            "example": "failure reason",
            "type": "string"
          }
        },
        "type": "object"
      },
      "PayeeInvitationStatusResponseV3": {
        "example": {
          "payeeId": "2aa5d7e0-2ecb-403f-8494-1865ed0454e9",
          "gracePeriodEndDate": "2019-01-20T00:00:00.000+0000",
          "invitationStatus": "invitationStatus"
        },
        "properties": {
          "payeeId": {
            "example": "2aa5d7e0-2ecb-403f-8494-1865ed0454e9",
            "format": "uuid",
            "type": "string"
          },
          "invitationStatus": {
            "description": "Payee invitation status. One of the following values: ACCEPTED, PENDING, DECLINED",
            "type": "string"
          },
          "gracePeriodEndDate": {
            "example": "2019-01-20T00:00:00.000Z",
            "format": "date",
            "type": "string"
          }
        },
        "required": [
          "invitationStatus",
          "payeeId"
        ],
        "type": "object"
      },
      "PayeeDeltaV3": {
        "example": {
          "payeeCountry": "US",
          "displayName": "Payee1",
          "onboardedStatus": "onboardedStatus",
          "payeeId": "046b6c7f-0b8a-43b9-b35d-6489e6daee91",
          "dbaName": "Payee DBA Name",
          "email": "payee1@example.com",
          "remoteId": "payee_1"
        },
        "properties": {
          "remoteId": {
            "example": "payee_1",
            "maxLength": 100,
            "minLength": 1,
            "type": "string"
          },
          "payeeId": {
            "format": "uuid",
            "readOnly": true,
            "type": "string"
          },
          "displayName": {
            "example": "Payee1",
            "type": "string"
          },
          "dbaName": {
            "example": "Payee DBA Name",
            "type": "string"
          },
          "email": {
            "example": "payee1@example.com",
            "format": "email",
            "nullable": true,
            "type": "string"
          },
          "payeeCountry": {
            "example": "US",
            "type": "string"
          },
          "onboardedStatus": {
            "description": "Onboarded status. One of the following values: CREATED, INVITED, REGISTERED, ONBOARDED",
            "type": "string"
          }
        },
        "required": [
          "payeeId",
          "remoteId"
        ],
        "type": "object"
      },
      "PayeePayorRefV4": {
        "example": {
          "payorId": "ba08877f-9d96-41e4-9c26-44a872d856ae",
          "invitationStatusTimestamp": "2019-01-20T09:00:00.000Z",
          "payableStatus": true,
          "invitationStatus": "invitationStatus",
          "payableIssues": [
            {
              "code": "3",
              "message": "payee-disabled"
            },
            {
              "code": "3",
              "message": "payee-disabled"
            }
          ],
          "remoteId": "uniqueIdForRemoteEntity",
          "paymentChannelId": "70faaff7-2c32-4b44-b27f-f0b6c484e6f3"
        },
        "properties": {
          "payorId": {
            "example": "ba08877f-9d96-41e4-9c26-44a872d856ae",
            "format": "uuid",
            "type": "string"
          },
          "remoteId": {
            "example": "uniqueIdForRemoteEntity",
            "type": "string"
          },
          "invitationStatus": {
            "type": "string"
          },
          "invitationStatusTimestamp": {
            "description": "The timestamp when the invitation status is updated",
            "example": "2019-01-20T09:00:00.000Z",
            "format": "date-time",
            "nullable": true,
            "type": "string"
          },
          "paymentChannelId": {
            "example": "70faaff7-2c32-4b44-b27f-f0b6c484e6f3",
            "format": "uuid",
            "type": "string"
          },
          "payableStatus": {
            "description": "Indicates if the payee is payable for this payor",
            "type": "boolean"
          },
          "payableIssues": {
            "description": "Indicates any conditions which prevent the payee from being payable for this payor",
            "items": {
              "$ref": "#/components/schemas/PayableIssueV4"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "PaymentChannelSummaryV4": {
        "example": {
          "disabledReason": "User request",
          "disabledReasonCode": "VR100",
          "countryCode": "US",
          "name": "Bank of America USD",
          "currency": "USD",
          "enabled": false,
          "paymentChannelId": "70faaff7-2c32-4b44-b27f-f0b6c484e6f3",
          "last4Digits": "1234"
        },
        "properties": {
          "paymentChannelId": {
            "example": "70faaff7-2c32-4b44-b27f-f0b6c484e6f3",
            "format": "uuid",
            "type": "string"
          },
          "name": {
            "description": "The payment channel name",
            "example": "Bank of America USD",
            "type": "string"
          },
          "countryCode": {
            "description": "Valid ISO 3166 2 character country code. See the <a href=\"https://www.iso.org/iso-3166-country-codes.html\" target=\"_blank\" a>ISO specification</a> for details.",
            "example": "US",
            "maxLength": 2,
            "minLength": 2,
            "pattern": "^[A-Z]{2}$",
            "title": "ISO 3166 2 Character Country Code",
            "type": "string"
          },
          "currency": {
            "description": "Valid ISO 4217 3 letter currency code. See the <a href=\"https://www.iso.org/iso-4217-currency-codes.html\" target=\"_blank\" a>ISO specification</a> for details.",
            "example": "USD",
            "maxLength": 3,
            "minLength": 3,
            "pattern": "^[A-Z]{3}$",
            "title": "ISO Currency Code",
            "type": "string"
          },
          "last4Digits": {
            "description": "The last 4 digits of the account number or IBAN",
            "example": "1234",
            "type": "string"
          },
          "enabled": {
            "description": "Usually true. False if an associated payment is returned",
            "example": false,
            "type": "boolean"
          },
          "disabledReason": {
            "description": "Indicates why the payment channel was disabled",
            "example": "User request",
            "type": "string"
          },
          "disabledReasonCode": {
            "example": "VR100",
            "type": "string"
          }
        },
        "required": [
          "countryCode",
          "currency",
          "enabled",
          "name",
          "paymentChannelId"
        ],
        "type": "object"
      },
      "WatchlistStatusV4": {
        "description": "Current watchlist status. One of the following values: NONE, PENDING, REVIEW, PASSED, FAILED",
        "type": "string"
      },
      "LanguageV4": {
        "description": "An IETF BCP 47 language code which has been configured for use within this Velo environment.<BR>\nSee the /v1/supportedLanguages endpoint to list the available codes for an environment.\n",
        "example": "en-US",
        "type": "string"
      },
      "PayeeAddressV4": {
        "example": {
          "country": "US",
          "countyOrProvince": "FL",
          "line4": "line4",
          "city": "Key West",
          "line3": "line3",
          "line2": "line2",
          "line1": "500 Duval St",
          "zipOrPostcode": "33945"
        },
        "properties": {
          "line1": {
            "example": "500 Duval St",
            "maxLength": 255,
            "minLength": 2,
            "nullable": false,
            "type": "string"
          },
          "line2": {
            "maxLength": 255,
            "minLength": 0,
            "nullable": true,
            "type": "string"
          },
          "line3": {
            "maxLength": 255,
            "minLength": 0,
            "nullable": true,
            "type": "string"
          },
          "line4": {
            "maxLength": 255,
            "minLength": 0,
            "nullable": true,
            "type": "string"
          },
          "city": {
            "example": "Key West",
            "maxLength": 100,
            "minLength": 2,
            "nullable": false,
            "type": "string"
          },
          "countyOrProvince": {
            "example": "FL",
            "maxLength": 100,
            "minLength": 2,
            "nullable": true,
            "type": "string"
          },
          "zipOrPostcode": {
            "example": "33945",
            "maxLength": 30,
            "minLength": 2,
            "nullable": true,
            "type": "string"
          },
          "country": {
            "example": "US",
            "maxLength": 50,
            "minLength": 2,
            "nullable": false,
            "type": "string"
          }
        },
        "required": [
          "city",
          "country",
          "line1"
        ],
        "type": "object"
      },
      "IndividualV4": {
        "example": {
          "name": {
            "firstName": "Bob",
            "lastName": "Smith",
            "otherNames": "A",
            "title": "Mr"
          },
          "nationalIdentification": "AB123456C",
          "dateOfBirth": "1985-01-01T00:00:00.000Z"
        },
        "properties": {
          "name": {
            "$ref": "#/components/schemas/IndividualV3_name"
          },
          "nationalIdentification": {
            "description": "If not authorized to view, value will be masked. Example: XXXXX1234",
            "example": "AB123456C",
            "maxLength": 30,
            "minLength": 6,
            "readOnly": true,
            "type": "string"
          },
          "dateOfBirth": {
            "description": "If not authorized to view, value will be masked. Example: - XXXX-XX-XX",
            "example": "1985-01-01T00:00:00.000Z",
            "readOnly": true,
            "type": "string"
          }
        },
        "required": [
          "dateOfBirth",
          "name"
        ],
        "type": "object"
      },
      "CompanyV4": {
        "example": {
          "taxId": "123123123",
          "name": "ABC Group Plc",
          "operatingName": "ABC Co"
        },
        "nullable": true,
        "properties": {
          "name": {
            "example": "ABC Group Plc",
            "maxLength": 40,
            "minLength": 3,
            "type": "string"
          },
          "taxId": {
            "description": "Company Tax Id must be between 6 and 30 characters long",
            "example": "123123123",
            "maxLength": 30,
            "minLength": 6,
            "nullable": true,
            "type": "string"
          },
          "operatingName": {
            "example": "ABC Co",
            "maxLength": 100,
            "minLength": 1,
            "nullable": true,
            "type": "string"
          }
        },
        "required": [
          "name"
        ],
        "type": "object"
      },
      "ChallengeV4": {
        "description": "<p>Used to override the default challenge presented to the payee when they onboard</p>\n<p>Not used after the payee has onboarded</p>\n",
        "example": {
          "description": "challenge description",
          "value": "11984567"
        },
        "properties": {
          "value": {
            "description": "The value that the user will be asked to verify when they onboard",
            "example": "11984567",
            "maxLength": 20,
            "minLength": 3,
            "type": "string"
          },
          "description": {
            "example": "challenge description",
            "maxLength": 255,
            "minLength": 1,
            "type": "string"
          }
        },
        "required": [
          "description",
          "value"
        ],
        "type": "object"
      },
      "GetPayeeListResponseV4": {
        "example": {
          "payorRefs": [
            {
              "payorId": "ba08877f-9d96-41e4-9c26-44a872d856ae",
              "invitationStatusTimestamp": "2019-01-20T09:00:00.000Z",
              "payableStatus": true,
              "invitationStatus": "invitationStatus",
              "payableIssues": [
                {
                  "code": "3",
                  "message": "payee-disabled"
                },
                {
                  "code": "3",
                  "message": "payee-disabled"
                }
              ],
              "remoteId": "uniqueIdForRemoteEntity",
              "paymentChannelId": "70faaff7-2c32-4b44-b27f-f0b6c484e6f3"
            },
            {
              "payorId": "ba08877f-9d96-41e4-9c26-44a872d856ae",
              "invitationStatusTimestamp": "2019-01-20T09:00:00.000Z",
              "payableStatus": true,
              "invitationStatus": "invitationStatus",
              "payableIssues": [
                {
                  "code": "3",
                  "message": "payee-disabled"
                },
                {
                  "code": "3",
                  "message": "payee-disabled"
                }
              ],
              "remoteId": "uniqueIdForRemoteEntity",
              "paymentChannelId": "70faaff7-2c32-4b44-b27f-f0b6c484e6f3"
            }
          ],
          "watchlistOverrideComment": "Example reason for the watchlist status being overridden",
          "country": "US",
          "watchlistStatus": "watchlistStatus",
          "disabledUpdatedTimestamp": "2019-01-20T09:00:00.000Z",
          "individual": {
            "name": {
              "firstName": "Bob",
              "lastName": "Smith",
              "otherNames": "H",
              "title": "Mr"
            }
          },
          "created": "2019-01-20T09:00:00.000Z",
          "displayName": "ABC",
          "payeeType": "payeeType",
          "language": "en-US",
          "onboardedStatus": "onboardedStatus",
          "watchlistStatusUpdatedTimestamp": "2019-01-20T09:00:00.000Z",
          "disabledComment": "reason for disabled",
          "disabled": true,
          "company": {
            "name": "ABC Group Plc",
            "operatingName": "ABC Co"
          },
          "payeeId": "2aa5d7e0-2ecb-403f-8494-1865ed0454e9",
          "email": "bob@example.com"
        },
        "properties": {
          "payeeId": {
            "example": "2aa5d7e0-2ecb-403f-8494-1865ed0454e9",
            "format": "uuid",
            "readOnly": true,
            "type": "string"
          },
          "payorRefs": {
            "items": {
              "$ref": "#/components/schemas/PayeePayorRefV4"
            },
            "nullable": true,
            "readOnly": true,
            "type": "array"
          },
          "email": {
            "example": "bob@example.com",
            "format": "email",
            "nullable": true,
            "type": "string"
          },
          "onboardedStatus": {
            "description": "Payee onboarded status. One of the following values: CREATED, INVITED, REGISTERED, ONBOARDED",
            "type": "string"
          },
          "watchlistStatus": {
            "description": "Current watchlist status. One of the following values: NONE, PENDING, REVIEW, PASSED, FAILED",
            "type": "string"
          },
          "watchlistStatusUpdatedTimestamp": {
            "example": "2019-01-20T09:00:00.000Z",
            "format": "date_time",
            "nullable": true,
            "readOnly": true,
            "type": "string"
          },
          "watchlistOverrideComment": {
            "example": "Example reason for the watchlist status being overridden",
            "nullable": true,
            "type": "string"
          },
          "language": {
            "description": "An IETF BCP 47 language code which has been configured for use within this Velo environment.<BR>\nSee the /v1/supportedLanguages endpoint to list the available codes for an environment.\n",
            "example": "en-US",
            "type": "string"
          },
          "created": {
            "example": "2019-01-20T09:00:00.000Z",
            "format": "date-time",
            "type": "string"
          },
          "country": {
            "description": "Valid ISO 3166 2 character country code. See the <a href=\"https://www.iso.org/iso-3166-country-codes.html\" target=\"_blank\" a>ISO specification</a> for details.",
            "example": "US",
            "maxLength": 2,
            "minLength": 2,
            "pattern": "^[A-Z]{2}$",
            "title": "ISO 3166 2 Character Country Code",
            "type": "string"
          },
          "displayName": {
            "example": "ABC",
            "type": "string"
          },
          "payeeType": {
            "description": "Type of Payee. One of the following values: Individual, Company",
            "type": "string"
          },
          "disabled": {
            "type": "boolean"
          },
          "disabledComment": {
            "example": "reason for disabled",
            "type": "string"
          },
          "disabledUpdatedTimestamp": {
            "example": "2019-01-20T09:00:00.000Z",
            "format": "date-time",
            "type": "string"
          },
          "individual": {
            "$ref": "#/components/schemas/GetPayeeListResponseIndividualV4"
          },
          "company": {
            "$ref": "#/components/schemas/GetPayeeListResponseCompanyV4"
          }
        },
        "type": "object"
      },
      "CreatePayeeV4": {
        "example": {
          "address": {
            "country": "US",
            "countyOrProvince": "FL",
            "line4": "line4",
            "city": "Key West",
            "line3": "line3",
            "line2": "line2",
            "line1": "500 Duval St",
            "zipOrPostcode": "33945"
          },
          "individual": {
            "name": {
              "firstName": "Bob",
              "lastName": "Smith",
              "otherNames": "H",
              "title": "Mr"
            },
            "nationalIdentification": "SA211123K",
            "dateOfBirth": "1970-05-20T00:00:00.000+0000"
          },
          "challenge": {
            "description": "challenge description",
            "value": "11984567"
          },
          "language": "en-US",
          "company": {
            "taxId": "123123123",
            "name": "ABC Group Plc",
            "operatingName": "ABC Co"
          },
          "email": "bob@example.com",
          "remoteId": "Remote ID",
          "paymentChannel": {
            "paymentChannelName": "My Payment Channel",
            "routingNumber": "XXXXX6789",
            "accountName": "My account",
            "countryCode": "US",
            "iban": "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXX1234",
            "currency": "USD",
            "accountNumber": "XXXXXX5678"
          }
        },
        "properties": {
          "email": {
            "example": "bob@example.com",
            "format": "email",
            "maxLength": 255,
            "minLength": 3,
            "type": "string"
          },
          "remoteId": {
            "example": "Remote ID",
            "maxLength": 100,
            "minLength": 1,
            "type": "string"
          },
          "type": {
            "$ref": "#/components/schemas/PayeeTypeEnum"
          },
          "address": {
            "$ref": "#/components/schemas/CreatePayeeAddressV4"
          },
          "paymentChannel": {
            "$ref": "#/components/schemas/CreatePaymentChannelV4"
          },
          "challenge": {
            "$ref": "#/components/schemas/ChallengeV4"
          },
          "language": {
            "description": "An IETF BCP 47 language code which has been configured for use within this Velo environment.<BR>\nSee the /v1/supportedLanguages endpoint to list the available codes for an environment.\n",
            "example": "en-US",
            "type": "string"
          },
          "company": {
            "$ref": "#/components/schemas/CompanyV4"
          },
          "individual": {
            "$ref": "#/components/schemas/CreateIndividualV4"
          }
        },
        "required": [
          "address",
          "email",
          "remoteId",
          "type"
        ],
        "type": "object"
      },
      "FailedSubmissionV4": {
        "example": {
          "failedSubmission": {
            "payorRefs": [
              {
                "payorId": "ba08877f-9d96-41e4-9c26-44a872d856ae",
                "invitationStatusTimestamp": "2019-01-20T09:00:00.000Z",
                "payableStatus": true,
                "invitationStatus": "invitationStatus",
                "payableIssues": [
                  {
                    "code": "3",
                    "message": "payee-disabled"
                  },
                  {
                    "code": "3",
                    "message": "payee-disabled"
                  }
                ],
                "remoteId": "uniqueIdForRemoteEntity",
                "paymentChannelId": "70faaff7-2c32-4b44-b27f-f0b6c484e6f3"
              },
              {
                "payorId": "ba08877f-9d96-41e4-9c26-44a872d856ae",
                "invitationStatusTimestamp": "2019-01-20T09:00:00.000Z",
                "payableStatus": true,
                "invitationStatus": "invitationStatus",
                "payableIssues": [
                  {
                    "code": "3",
                    "message": "payee-disabled"
                  },
                  {
                    "code": "3",
                    "message": "payee-disabled"
                  }
                ],
                "remoteId": "uniqueIdForRemoteEntity",
                "paymentChannelId": "70faaff7-2c32-4b44-b27f-f0b6c484e6f3"
              }
            ],
            "address": {
              "country": "US",
              "countyOrProvince": "FL",
              "line4": "line4",
              "city": "Key West",
              "line3": "line3",
              "line2": "line2",
              "line1": "500 Duval St",
              "zipOrPostcode": "33945"
            },
            "individual": {
              "name": {
                "firstName": "Bob",
                "lastName": "Smith",
                "otherNames": "H",
                "title": "Mr"
              },
              "nationalIdentification": "SA211123K",
              "dateOfBirth": "1970-05-20T00:00:00.000+0000"
            },
            "challenge": {
              "description": "challenge description",
              "value": "11984567"
            },
            "language": "en-US",
            "company": {
              "taxId": "123123123",
              "name": "ABC Group Plc",
              "operatingName": "ABC Co"
            },
            "payeeId": "2aa5d7e0-2ecb-403f-8494-1865ed0454e9",
            "type": "type",
            "email": "bob@example.com",
            "remoteId": "Remote ID",
            "paymentChannel": {
              "paymentChannelName": "My Payment Channel",
              "routingNumber": "XXXXX6789",
              "accountName": "My account",
              "countryCode": "US",
              "iban": "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXX1234",
              "currency": "USD",
              "accountNumber": "XXXXXX5678"
            }
          },
          "failureMessage": "failure reason"
        },
        "properties": {
          "failedSubmission": {
            "$ref": "#/components/schemas/FailedPayeeV4"
          },
          "failureMessage": {
            "example": "failure reason",
            "type": "string"
          }
        },
        "type": "object"
      },
      "PayeeInvitationStatusResponseV4": {
        "example": {
          "payeeId": "2aa5d7e0-2ecb-403f-8494-1865ed0454e9",
          "gracePeriodEndDate": "2019-01-20T00:00:00.000+0000",
          "invitationStatus": "invitationStatus"
        },
        "properties": {
          "payeeId": {
            "example": "2aa5d7e0-2ecb-403f-8494-1865ed0454e9",
            "format": "uuid",
            "type": "string"
          },
          "invitationStatus": {
            "description": "Payee invitation status. One of the following values: ACCEPTED, PENDING, DECLINED",
            "type": "string"
          },
          "gracePeriodEndDate": {
            "example": "2019-01-20T00:00:00.000Z",
            "format": "date",
            "type": "string"
          }
        },
        "required": [
          "invitationStatus",
          "payeeId"
        ],
        "type": "object"
      },
      "PayeeDeltaV4": {
        "example": {
          "payeeCountry": "US",
          "displayName": "Payee1",
          "onboardedStatus": "onboardedStatus",
          "payeeId": "046b6c7f-0b8a-43b9-b35d-6489e6daee91",
          "dbaName": "Payee DBA Name",
          "email": "payee1@example.com",
          "remoteId": "payee_1"
        },
        "properties": {
          "remoteId": {
            "example": "payee_1",
            "maxLength": 100,
            "minLength": 1,
            "type": "string"
          },
          "payeeId": {
            "format": "uuid",
            "readOnly": true,
            "type": "string"
          },
          "displayName": {
            "example": "Payee1",
            "type": "string"
          },
          "dbaName": {
            "example": "Payee DBA Name",
            "type": "string"
          },
          "email": {
            "example": "payee1@example.com",
            "format": "email",
            "nullable": true,
            "type": "string"
          },
          "payeeCountry": {
            "description": "Valid ISO 3166 2 character country code. See the <a href=\"https://www.iso.org/iso-3166-country-codes.html\" target=\"_blank\" a>ISO specification</a> for details.",
            "example": "US",
            "maxLength": 2,
            "minLength": 2,
            "pattern": "^[A-Z]{2}$",
            "title": "ISO 3166 2 Character Country Code",
            "type": "string"
          },
          "onboardedStatus": {
            "description": "Payee onboarded status. One of the following value: CREATED, INVITED, REGISTERED, ONBOARDED",
            "type": "string"
          }
        },
        "required": [
          "payeeId",
          "remoteId"
        ],
        "type": "object"
      },
      "NotificationsV2": {
        "example": {
          "minimumBalance": 120000
        },
        "properties": {
          "minimumBalance": {
            "example": 120000,
            "type": "integer"
          }
        },
        "type": "object"
      },
      "AutoTopUpConfigV2": {
        "example": {
          "targetBalance": 300000,
          "minBalance": 10000,
          "enabled": true
        },
        "properties": {
          "enabled": {
            "description": "Is auto top-up enabled? automatically trigger funding to top-up the source account balance when the balance falls below the configured minimum level.",
            "example": true,
            "type": "boolean"
          },
          "minBalance": {
            "description": "When the payor balance falls below this level then auto top-up will be triggered. Note - This is in minor units.",
            "example": 10000,
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "targetBalance": {
            "description": "When the payor balance falls below the min balance then auto top-up will request funds bring the balance to this level. Note - this is in minor units.",
            "example": 300000,
            "format": "int64",
            "nullable": true,
            "type": "integer"
          }
        },
        "required": [
          "enabled"
        ],
        "type": "object"
      },
      "IsoCurrency": {
        "description": "Valid ISO 4217 3 letter currency code. See the <a href=\"https://www.iso.org/iso-4217-currency-codes.html\" target=\"_blank\" a>ISO specification</a> for details.",
        "example": "USD",
        "maxLength": 3,
        "minLength": 3,
        "pattern": "^[A-Z]{3}$",
        "title": "ISO Currency Code",
        "type": "string"
      },
      "NotificationsV3": {
        "example": {
          "minimumBalance": 120000
        },
        "properties": {
          "minimumBalance": {
            "example": 120000,
            "type": "integer"
          }
        },
        "type": "object"
      },
      "AutoTopUpConfigV3": {
        "example": {
          "targetBalance": 300000,
          "fundingAccountId": "640ab1bd-8a6a-4603-a83a-1edbc3ed5689",
          "minBalance": 10000,
          "enabled": true
        },
        "properties": {
          "enabled": {
            "description": "Is auto top-up enabled? automatically trigger funding to top-up the source account balance when the balance falls below the configured minimum level.",
            "example": true,
            "type": "boolean"
          },
          "minBalance": {
            "description": "When the payor balance falls below this level then auto top-up will be triggered. Note - This is in minor units.",
            "example": 10000,
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "targetBalance": {
            "description": "When the payor balance falls below the min balance then auto top-up will request funds bring the balance to this level. Note - this is in minor units.",
            "example": 300000,
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "fundingAccountId": {
            "description": "Id of funding account from which to pull funds when auto top-up is triggered.  Note - if this is not set then auto top-up is effectively disabled.",
            "example": "640ab1bd-8a6a-4603-a83a-1edbc3ed5689",
            "format": "uuid",
            "type": "string"
          }
        },
        "required": [
          "enabled"
        ],
        "type": "object"
      },
      "LinkForResponse": {
        "example": {
          "rel": "rel",
          "href": "href"
        },
        "properties": {
          "rel": {
            "type": "string"
          },
          "href": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "PageForResponse": {
        "example": {
          "numberOfElements": 0,
          "totalPages": 1,
          "pageSize": 5,
          "page": 5,
          "totalElements": 6
        },
        "properties": {
          "numberOfElements": {
            "format": "int32",
            "type": "integer"
          },
          "totalElements": {
            "format": "int64",
            "type": "integer"
          },
          "totalPages": {
            "format": "int32",
            "type": "integer"
          },
          "page": {
            "format": "int32",
            "type": "integer"
          },
          "pageSize": {
            "format": "int32",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "FundingPayorStatusAuditResponse": {
        "example": {
          "amount": 2,
          "fundingId": "046b6c7f-0b8a-43b9-b35d-6489e6daee91",
          "currency": "USD",
          "status": "status"
        },
        "properties": {
          "fundingId": {
            "format": "uuid",
            "type": "string"
          },
          "amount": {
            "format": "int64",
            "type": "integer"
          },
          "currency": {
            "description": "Valid ISO 4217 3 letter currency code. See the <a href=\"https://www.iso.org/iso-4217-currency-codes.html\" target=\"_blank\" a>ISO specification</a> for details.",
            "example": "USD",
            "maxLength": 3,
            "minLength": 3,
            "pattern": "^[A-Z]{3}$",
            "title": "ISO Currency Code",
            "type": "string"
          },
          "status": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "AllocationType": {
        "description": "Funding Allocation Type. One of the following values: AUTOMATIC, MANUAL",
        "type": "string"
      },
      "FundingAccountType": {
        "description": "Funding Account Type. One of the following values: FBO, PRIVATE",
        "example": "FBO",
        "type": "string"
      },
      "FundingStatus": {
        "description": "Current status of the funding. One of the follwing values: PENDING, UNALLOCATED, ALLOCATED, HIDDEN, RETURNED, RETURNING, BULK_RETURN, OTHER",
        "example": "ALLOCATED",
        "type": "string"
      },
      "FundingAudit": {
        "example": {
          "dateTime": "2000-01-23T04:56:07.000Z",
          "fundingAccountName": "fundingAccountName",
          "amount": 120000,
          "fundingType": "fundingType",
          "currency": "USD",
          "topupType": "topupType",
          "events": [
            {
              "principal": "principal",
              "eventId": "046b6c7f-0b8a-43b9-b35d-6489e6daee91",
              "eventDateTime": "2000-01-23T04:56:07.000Z",
              "fundingEventType": "fundingEventType"
            },
            {
              "principal": "principal",
              "eventId": "046b6c7f-0b8a-43b9-b35d-6489e6daee91",
              "eventDateTime": "2000-01-23T04:56:07.000Z",
              "fundingEventType": "fundingEventType"
            }
          ],
          "status": "status",
          "sourceAccountName": "sourceAccountName"
        },
        "properties": {
          "amount": {
            "description": "The amount funded",
            "example": 120000,
            "format": "double",
            "type": "number"
          },
          "currency": {
            "description": "The currency of the funding",
            "example": "USD",
            "type": "string"
          },
          "dateTime": {
            "format": "date-time",
            "type": "string"
          },
          "status": {
            "description": "Status of the funding. One of the following values: PENDING, FAILED, CREDIT, DEBIT",
            "type": "string"
          },
          "sourceAccountName": {
            "type": "string"
          },
          "fundingAccountName": {
            "type": "string"
          },
          "fundingType": {
            "description": "Funding type. One of the following values: ACH, WIRE, EMBEDDED, BANK_TRANSFER",
            "type": "string"
          },
          "events": {
            "items": {
              "$ref": "#/components/schemas/FundingEvent_2"
            },
            "type": "array"
          },
          "topupType": {
            "description": "Type of top up. One of the following values: AUTOMATIC, MANUAL",
            "type": "string"
          }
        },
        "type": "object"
      },
      "PaymentDeltaV1": {
        "example": {
          "paymentId": "046b6c7f-0b8a-43b9-b35d-6489e6daee91",
          "payorPaymentId": "payorPaymentId",
          "sourceCurrency": "sourceCurrency",
          "sourceAmount": 6,
          "payoutId": "046b6c7f-0b8a-43b9-b35d-6489e6daee91",
          "paymentCurrency": "paymentCurrency",
          "paymentAmount": 0,
          "status": "status"
        },
        "properties": {
          "paymentId": {
            "format": "uuid",
            "readOnly": true,
            "type": "string"
          },
          "payoutId": {
            "format": "uuid",
            "readOnly": true,
            "type": "string"
          },
          "payorPaymentId": {
            "nullable": true,
            "type": "string"
          },
          "paymentCurrency": {
            "nullable": true,
            "type": "string"
          },
          "paymentAmount": {
            "nullable": true,
            "type": "integer"
          },
          "status": {
            "nullable": true,
            "type": "string"
          },
          "sourceCurrency": {
            "nullable": true,
            "type": "string"
          },
          "sourceAmount": {
            "nullable": true,
            "type": "integer"
          }
        },
        "required": [
          "paymentId",
          "payoutId"
        ],
        "type": "object"
      },
      "PayoutSummaryAuditV3": {
        "example": {
          "sourceAccountSummary": [
            {
              "sourceAccountId": "046b6c7f-0b8a-43b9-b35d-6489e6daee91",
              "currency": "currency",
              "totalCost": 3434
            },
            {
              "sourceAccountId": "046b6c7f-0b8a-43b9-b35d-6489e6daee91",
              "currency": "currency",
              "totalCost": 3434
            }
          ],
          "submittedDateTime": "submittedDateTime",
          "payorId": "046b6c7f-0b8a-43b9-b35d-6489e6daee91",
          "totalIncompletePayments": 123,
          "fxSummaries": [
            {
              "invertedRate": 1.12,
              "rate": 1.12,
              "sourceCurrency": "sourceCurrency",
              "totalPaymentAmount": 1234,
              "paymentCurrency": "paymentCurrency",
              "quoteId": "046b6c7f-0b8a-43b9-b35d-6489e6daee91",
              "totalCost": 1234,
              "fundingStatus": "fundingStatus",
              "creationDateTime": "2000-01-23T04:56:07.000Z",
              "status": "status"
            },
            {
              "invertedRate": 1.12,
              "rate": 1.12,
              "sourceCurrency": "sourceCurrency",
              "totalPaymentAmount": 1234,
              "paymentCurrency": "paymentCurrency",
              "quoteId": "046b6c7f-0b8a-43b9-b35d-6489e6daee91",
              "totalCost": 1234,
              "fundingStatus": "fundingStatus",
              "creationDateTime": "2000-01-23T04:56:07.000Z",
              "status": "status"
            }
          ],
          "payoutId": "046b6c7f-0b8a-43b9-b35d-6489e6daee91",
          "withdrawnDateTime": "withdrawnDateTime",
          "totalPayments": 123,
          "instructedDateTime": "instructedDateTime",
          "totalFailedPayments": 123,
          "status": "status",
          "payoutMemo": "payoutMemo"
        },
        "properties": {
          "payoutId": {
            "format": "uuid",
            "type": "string"
          },
          "payorId": {
            "format": "uuid",
            "type": "string"
          },
          "status": {
            "description": "Current status of the payout. One of the following values: ACCEPTED, REJECTED, SUBMITTED, QUOTED, INSTRUCTED, COMPLETED, INCOMPLETE, CONFIRMED, WITHDRAWN",
            "type": "string"
          },
          "submittedDateTime": {
            "type": "string"
          },
          "instructedDateTime": {
            "type": "string"
          },
          "withdrawnDateTime": {
            "type": "string"
          },
          "totalPayments": {
            "example": 123,
            "type": "integer"
          },
          "totalIncompletePayments": {
            "example": 123,
            "type": "integer"
          },
          "totalFailedPayments": {
            "example": 123,
            "type": "integer"
          },
          "sourceAccountSummary": {
            "items": {
              "$ref": "#/components/schemas/SourceAccountSummaryV3"
            },
            "type": "array"
          },
          "fxSummaries": {
            "items": {
              "$ref": "#/components/schemas/FxSummaryV3"
            },
            "type": "array"
          },
          "payoutMemo": {
            "type": "string"
          }
        },
        "required": [
          "payoutId",
          "status",
          "submittedDateTime"
        ],
        "type": "object"
      },
      "PaymentAuditCurrencyV3": {
        "description": "ISO 3 character currency code",
        "maxLength": 3,
        "minLength": 3,
        "type": "string"
      },
      "PaymentEventResponseV3": {
        "example": {
          "principal": "Prinicple example",
          "eventId": "046b6c7f-0b8a-43b9-b35d-6489e6daee91",
          "eventDateTime": "2000-01-23T04:56:07.000Z",
          "routingNumber": "123123123",
          "accountName": "My account",
          "iban": "DE89 3704 0044 0532 0130 00",
          "sourceCurrency": "sourceCurrency",
          "sourceAmount": 1299,
          "eventType": "eventType",
          "paymentCurrency": "paymentCurrency",
          "accountNumber": "123123123",
          "paymentAmount": 1299
        },
        "properties": {
          "eventId": {
            "description": "The id of the event.",
            "format": "uuid",
            "type": "string"
          },
          "eventDateTime": {
            "description": "The date/time at which the event occurred.",
            "format": "date-time",
            "type": "string"
          },
          "eventType": {
            "description": "The type of the event. One of the following values: PAYOUT_SUBMITTED, PAYOUT_COMPLETED, PAYOUT_INSTRUCTED_V3, BANK_PAYMENT_REQUESTED, SOURCE_AMOUNT_CONFIRMED, PAYMENT_SUBMITTED, PAYMENT_SUBMITTED_ACCEPTED, PAYMENT_SUBMITTED_REJECTED, PAYMENT_CONFIRMED, PAYMENT_AWAITING_FUNDS, PAYMENT_FUNDED, PAYMENT_UNFUNDED, PAYMENT_FAILED, ACH_SUBMITTED_TO_ODFI, PAYMENT_ACCEPTED_BY_RAILS, ACH_RETURN_RECEIVED, RETURN_PAYMENT_FUNDING_REQUESTED, PAYOUT_BATCH_EXECUTED, PAYOUT_BATCH_QUOTE_EXPIRED, PAYOUT_BATCH_FUNDED, PAYOUT_BATCH_FUNDS_RETURN_REQUEST, PAYOUT_BATCH_FUNDS_RETURNED, PAYOUT_FUNDS_REQUEST, PAYOUT_FUNDS_GRANTED, PAYOUT_FUNDS_DENIED, PAYOUT_BATCH_QUOTED, PAYOUT_QUOTED, ACH_PAYMENT_RETURN_CANCELLED, RETURN_PAYMENT_CANCELLATION_REQUESTED, PAYOUT_WITHDRAWN",
            "type": "string"
          },
          "sourceCurrency": {
            "description": "ISO 3 character currency code",
            "maxLength": 3,
            "minLength": 3,
            "type": "string"
          },
          "sourceAmount": {
            "description": "The source amount exposed by the event.",
            "example": 1299,
            "format": "int64",
            "type": "integer"
          },
          "paymentCurrency": {
            "description": "ISO 3 character currency code",
            "maxLength": 3,
            "minLength": 3,
            "type": "string"
          },
          "paymentAmount": {
            "description": "The destination amount exposed by the event.",
            "example": 1299,
            "format": "int64",
            "type": "integer"
          },
          "accountNumber": {
            "description": "The account number attached to the event.",
            "example": "123123123",
            "type": "string"
          },
          "routingNumber": {
            "description": "The routing number attached to the event.",
            "example": "123123123",
            "type": "string"
          },
          "iban": {
            "example": "DE89 3704 0044 0532 0130 00",
            "type": "string"
          },
          "accountName": {
            "example": "My account",
            "type": "string"
          },
          "principal": {
            "example": "Prinicple example",
            "type": "string"
          }
        },
        "required": [
          "eventDateTime",
          "eventId",
          "eventType"
        ],
        "type": "object"
      },
      "PayoutSummaryAudit": {
        "example": {
          "dateTime": "2000-01-23T04:56:07.000Z",
          "sourceAccountSummary": [
            {
              "sourceAccountId": "046b6c7f-0b8a-43b9-b35d-6489e6daee91",
              "currency": "EUR",
              "totalCost": 3344
            },
            {
              "sourceAccountId": "046b6c7f-0b8a-43b9-b35d-6489e6daee91",
              "currency": "EUR",
              "totalCost": 3344
            }
          ],
          "payoutType": "payoutType",
          "totalReturnedPayments": 1,
          "fxSummaries": [
            {
              "invertedRate": 123.23,
              "rate": 123.23,
              "sourceCurrency": "EUR",
              "totalPaymentAmount": 34235,
              "paymentCurrency": "EUR",
              "quoteId": "046b6c7f-0b8a-43b9-b35d-6489e6daee91",
              "totalCost": 5,
              "fundingStatus": "fundingStatus",
              "creationDateTime": "2000-01-23T04:56:07.000Z",
              "status": "status"
            },
            {
              "invertedRate": 123.23,
              "rate": 123.23,
              "sourceCurrency": "EUR",
              "totalPaymentAmount": 34235,
              "paymentCurrency": "EUR",
              "quoteId": "046b6c7f-0b8a-43b9-b35d-6489e6daee91",
              "totalCost": 5,
              "fundingStatus": "fundingStatus",
              "creationDateTime": "2000-01-23T04:56:07.000Z",
              "status": "status"
            }
          ],
          "payoutId": "046b6c7f-0b8a-43b9-b35d-6489e6daee91",
          "totalPayments": 0,
          "schedule": {
            "scheduledFor": "2000-01-23T04:56:07.000Z",
            "scheduleStatus": "SCHEDULED",
            "notificationsEnabled": true,
            "scheduledBy": "Aphra Behn",
            "scheduledByPrincipalId": "8946953b-1e3b-49cf-9da4-b704cbb78f3e",
            "scheduledAt": "2000-01-23T04:56:07.000Z"
          },
          "submittedDateTime": "submittedDateTime",
          "payorId": "046b6c7f-0b8a-43b9-b35d-6489e6daee91",
          "totalIncompletePayments": 6,
          "withdrawnDateTime": "2000-01-23T04:56:07.000Z",
          "totalWithdrawnPayments": 5,
          "instructedDateTime": "instructedDateTime",
          "status": "status",
          "payoutMemo": "payoutMemo",
          "payorName": "payorName"
        },
        "properties": {
          "payoutId": {
            "format": "uuid",
            "type": "string"
          },
          "payorId": {
            "format": "uuid",
            "type": "string"
          },
          "status": {
            "description": "Current status of the Payout. One of the following values: ACCEPTED, REJECTED, SUBMITTED, QUOTED, INSTRUCTED, COMPLETED, INCOMPLETE, CONFIRMED, WITHDRAWN",
            "type": "string"
          },
          "dateTime": {
            "format": "date-time",
            "type": "string"
          },
          "submittedDateTime": {
            "type": "string"
          },
          "instructedDateTime": {
            "type": "string"
          },
          "withdrawnDateTime": {
            "format": "date-time",
            "type": "string"
          },
          "totalPayments": {
            "type": "integer"
          },
          "totalIncompletePayments": {
            "type": "integer"
          },
          "totalReturnedPayments": {
            "type": "integer"
          },
          "totalWithdrawnPayments": {
            "type": "integer"
          },
          "sourceAccountSummary": {
            "items": {
              "$ref": "#/components/schemas/SourceAccountSummary"
            },
            "type": "array"
          },
          "fxSummaries": {
            "items": {
              "$ref": "#/components/schemas/FxSummary"
            },
            "type": "array"
          },
          "payoutMemo": {
            "type": "string"
          },
          "payoutType": {
            "description": "The type of payout. One of the following values: STANDARD, AS, ON_BEHALF_OF",
            "type": "string"
          },
          "payorName": {
            "type": "string"
          },
          "schedule": {
            "$ref": "#/components/schemas/PayoutSchedule"
          }
        },
        "required": [
          "payorName",
          "payoutType",
          "status",
          "submittedDateTime"
        ],
        "type": "object"
      },
      "PayoutStatus": {
        "description": "Current status of the Payout. One of the following values: ACCEPTED, REJECTED, SUBMITTED, QUOTED, INSTRUCTED, COMPLETED, INCOMPLETE, CONFIRMED, WITHDRAWN",
        "type": "string"
      },
      "PayoutType": {
        "description": "The type of payout. One of the following values: STANDARD, AS, ON_BEHALF_OF",
        "type": "string"
      },
      "PayoutPayor": {
        "description": "Details of payor and principal participating in a payout.",
        "example": {
          "principal": "principal",
          "principalId": "046b6c7f-0b8a-43b9-b35d-6489e6daee91",
          "payorId": "046b6c7f-0b8a-43b9-b35d-6489e6daee91",
          "dbaName": "dbaName",
          "payorName": "payorName"
        },
        "properties": {
          "payorId": {
            "description": "The id of the payor.",
            "format": "uuid",
            "type": "string"
          },
          "payorName": {
            "description": "The name of the payor.",
            "type": "string"
          },
          "dbaName": {
            "description": "The alternate name of the payor.",
            "type": "string"
          },
          "principal": {
            "description": "Email address if principal is a user or ID if application.",
            "type": "string"
          },
          "principalId": {
            "description": "The id of the principal.",
            "format": "uuid",
            "type": "string"
          }
        },
        "required": [
          "dbaName",
          "payorId",
          "payorName",
          "principal",
          "principalId"
        ],
        "type": "object"
      },
      "PayoutPrincipal": {
        "description": "Details of principal participating in a payout.",
        "example": {
          "principal": "principal",
          "principalId": "046b6c7f-0b8a-43b9-b35d-6489e6daee91"
        },
        "properties": {
          "principal": {
            "description": "Email address if principal is a user or ID if application.",
            "type": "string"
          },
          "principalId": {
            "description": "The id of the principal.",
            "format": "uuid",
            "type": "string"
          }
        },
        "required": [
          "principal",
          "principalId"
        ],
        "type": "object"
      },
      "PayoutSchedule": {
        "description": "Details relating to a payout that was executed via a schedule or is still waiting to be executed",
        "example": {
          "scheduledFor": "2000-01-23T04:56:07.000Z",
          "scheduleStatus": "SCHEDULED",
          "notificationsEnabled": true,
          "scheduledBy": "Aphra Behn",
          "scheduledByPrincipalId": "8946953b-1e3b-49cf-9da4-b704cbb78f3e",
          "scheduledAt": "2000-01-23T04:56:07.000Z"
        },
        "properties": {
          "scheduleStatus": {
            "description": "Current status of the payout schedule. One of the following values: SCHEDULED, EXECUTED, FAILED",
            "example": "SCHEDULED",
            "type": "string"
          },
          "scheduledAt": {
            "format": "date-time",
            "type": "string"
          },
          "scheduledFor": {
            "format": "date-time",
            "type": "string"
          },
          "scheduledByPrincipalId": {
            "description": "ID of the user or application that scheduled the payout",
            "example": "8946953b-1e3b-49cf-9da4-b704cbb78f3e",
            "type": "string"
          },
          "notificationsEnabled": {
            "type": "boolean"
          },
          "scheduledBy": {
            "description": "Optional display name as a hint for who scheduled the payout. Not populated if payout was scheduled by an application.",
            "example": "Aphra Behn",
            "type": "string"
          }
        },
        "required": [
          "notificationsEnabled",
          "scheduleStatus",
          "scheduledAt",
          "scheduledByPrincipalId",
          "scheduledFor"
        ],
        "type": "object"
      },
      "PaymentAuditCurrency": {
        "description": "ISO-4217 3 character currency code",
        "example": "EUR",
        "maxLength": 3,
        "minLength": 3,
        "type": "string"
      },
      "PaymentEventResponse": {
        "example": {
          "eventId": "046b6c7f-0b8a-43b9-b35d-6489e6daee91",
          "eventDateTime": "2000-01-23T04:56:07.000Z",
          "accountName": "accountName",
          "sourceCurrency": "EUR",
          "eventType": "eventType",
          "accountNumber": "accountNumber",
          "paymentAmount": 1299,
          "principal": "principal",
          "routingNumber": "routingNumber",
          "iban": "iban",
          "scheduledFor": "2000-01-23T04:56:07.000Z",
          "sourceAmount": 1299,
          "scheduledBy": "Aphra Behn",
          "paymentCurrency": "EUR",
          "scheduledAt": "2000-01-23T04:56:07.000Z"
        },
        "properties": {
          "eventId": {
            "description": "The id of the event.",
            "format": "uuid",
            "type": "string"
          },
          "eventDateTime": {
            "description": "The date/time at which the event occurred.",
            "format": "date-time",
            "type": "string"
          },
          "eventType": {
            "description": "One of the following values: PAYOUT_SUBMITTED, PAYOUT_COMPLETED, PAYOUT_INSTRUCTED_V3, BANK_PAYMENT_REQUESTED, SOURCE_AMOUNT_CONFIRMED, PAYMENT_SUBMITTED, PAYMENT_SUBMITTED_ACCEPTED, PAYMENT_SUBMITTED_REJECTED, PAYMENT_CONFIRMED, PAYMENT_AWAITING_FUNDS, PAYMENT_FUNDED, PAYMENT_UNFUNDED, PAYMENT_FAILED, PAYMENT_TRACKING_DETAILS_UPDATED, ACH_SUBMITTED_TO_ODFI, PAYMENT_ACCEPTED_BY_RAILS, ACH_RETURN_RECEIVED, RETURN_PAYMENT_FUNDING_REQUESTED, PAYOUT_BATCH_EXECUTED, PAYOUT_BATCH_QUOTE_EXPIRED, PAYOUT_BATCH_FUNDED, PAYOUT_BATCH_FUNDS_RETURN_REQUEST, PAYOUT_BATCH_FUNDS_RETURNED, PAYOUT_FUNDS_REQUEST, PAYOUT_FUNDS_GRANTED, PAYOUT_FUNDS_DENIED, PAYOUT_BATCH_QUOTED, PAYOUT_QUOTED, ACH_PAYMENT_RETURN_CANCELLED, RETURN_PAYMENT_CANCELLATION_REQUESTED, PAYOUT_WITHDRAWN, ORCHESTRATED_PAYMENT_BATCH_REQUESTED, ORCHESTRATED_PAYMENT_BATCH_CONFIRMED, ORCHESTRATED_PAYMENT_REQUESTED",
            "type": "string"
          },
          "sourceCurrency": {
            "description": "ISO-4217 3 character currency code",
            "example": "EUR",
            "maxLength": 3,
            "minLength": 3,
            "type": "string"
          },
          "sourceAmount": {
            "description": "The source amount exposed by the event.",
            "example": 1299,
            "format": "int64",
            "type": "integer"
          },
          "paymentCurrency": {
            "description": "ISO-4217 3 character currency code",
            "example": "EUR",
            "maxLength": 3,
            "minLength": 3,
            "type": "string"
          },
          "paymentAmount": {
            "description": "The destination amount exposed by the event.",
            "example": 1299,
            "format": "int64",
            "type": "integer"
          },
          "accountNumber": {
            "description": "The account number attached to the event.",
            "type": "string"
          },
          "routingNumber": {
            "description": "The routing number attached to the event.",
            "type": "string"
          },
          "iban": {
            "type": "string"
          },
          "accountName": {
            "type": "string"
          },
          "principal": {
            "type": "string"
          },
          "scheduledAt": {
            "format": "date-time",
            "type": "string"
          },
          "scheduledFor": {
            "format": "date-time",
            "type": "string"
          },
          "scheduledBy": {
            "description": "Optional display name as a hint for who scheduled the payout. Not populated if payout was scheduled by an application.",
            "example": "Aphra Behn",
            "type": "string"
          }
        },
        "required": [
          "eventDateTime",
          "eventId",
          "eventType"
        ],
        "type": "object"
      },
      "PostInstructFxInfo": {
        "description": "FX details relating to a payout that was executed or is still waiting to be executed",
        "example": {
          "fxStatus": "INITIATED",
          "fxStatusUpdatedAt": "2000-01-23T04:56:07.000Z",
          "fxTransactionReference": "AB123GHI",
          "fxMode": "MANUAL"
        },
        "properties": {
          "fxMode": {
            "description": "The mode by which the FX rate is to be determined (MANUAL or AUTO)",
            "example": "MANUAL",
            "type": "string"
          },
          "fxStatus": {
            "description": "The state to which the Post-Instruct FX process has reached (INITIATED or COMPLETED)",
            "example": "INITIATED",
            "type": "string"
          },
          "fxStatusUpdatedAt": {
            "description": "The date-time at which the most recent fxStatus was determined.",
            "format": "date-time",
            "type": "string"
          },
          "fxTransactionReference": {
            "description": "The reference assigned to the FX funding that will fulfil this payment.",
            "example": "AB123GHI",
            "type": "string"
          }
        },
        "required": [
          "fxMode",
          "fxStatus",
          "fxStatusUpdatedAt"
        ],
        "type": "object"
      },
      "PaymentDelta": {
        "example": {
          "paymentId": "046b6c7f-0b8a-43b9-b35d-6489e6daee91",
          "payorPaymentId": "payorPaymentId",
          "sourceCurrency": "sourceCurrency",
          "sourceAmount": 6,
          "payoutId": "046b6c7f-0b8a-43b9-b35d-6489e6daee91",
          "paymentCurrency": "paymentCurrency",
          "paymentAmount": 0,
          "status": "status"
        },
        "properties": {
          "paymentId": {
            "format": "uuid",
            "readOnly": true,
            "type": "string"
          },
          "payoutId": {
            "format": "uuid",
            "readOnly": true,
            "type": "string"
          },
          "payorPaymentId": {
            "nullable": true,
            "type": "string"
          },
          "paymentCurrency": {
            "nullable": true,
            "type": "string"
          },
          "paymentAmount": {
            "nullable": true,
            "type": "integer"
          },
          "status": {
            "nullable": true,
            "type": "string"
          },
          "sourceCurrency": {
            "nullable": true,
            "type": "string"
          },
          "sourceAmount": {
            "nullable": true,
            "type": "integer"
          }
        },
        "required": [
          "paymentId",
          "payoutId"
        ],
        "type": "object"
      },
      "QuoteFxSummaryV3": {
        "example": {
          "invertedRate": 1.12,
          "creationTime": "2022-10-30T09:45:09.000Z",
          "rate": 0.89,
          "expiryTime": "2022-10-30T09:50:09.000Z",
          "sourceCurrency": "USD",
          "totalPaymentAmount": 890000,
          "paymentCurrency": "USD",
          "quoteId": "af80d455-29dd-4e72-a000-495a9829a7d0",
          "totalSourceAmount": 1000000,
          "fundingStatus": "FUNDED",
          "status": "QUOTED"
        },
        "properties": {
          "rate": {
            "description": "The conversion rate (from the source currency to the payment currency)",
            "example": 0.89,
            "format": "float",
            "type": "number"
          },
          "invertedRate": {
            "description": "The inverse conversion rate (from paymnent currency to source currency)",
            "example": 1.12,
            "format": "float",
            "type": "number"
          },
          "creationTime": {
            "description": "Timestamp of when the quote was created",
            "example": "2022-10-30T09:45:09.000Z",
            "format": "date-time",
            "type": "string"
          },
          "expiryTime": {
            "description": "The timestamp for when the quote will expire",
            "example": "2022-10-30T09:50:09.000Z",
            "format": "date-time",
            "type": "string"
          },
          "quoteId": {
            "description": "The id of the created quote",
            "example": "af80d455-29dd-4e72-a000-495a9829a7d0",
            "format": "uuid",
            "type": "string"
          },
          "totalSourceAmount": {
            "description": "The amount (in minor units) that will be paid from the source account",
            "example": 1000000,
            "type": "integer"
          },
          "totalPaymentAmount": {
            "description": "The amount (in minor units) that the payee will receive",
            "example": 890000,
            "type": "integer"
          },
          "sourceCurrency": {
            "description": "Valid ISO 4217 3 letter currency code. See the <a href=\"https://www.iso.org/iso-4217-currency-codes.html\" target=\"_blank\" a>ISO specification</a> for details.",
            "example": "USD",
            "maxLength": 3,
            "minLength": 3,
            "pattern": "^[A-Z]{3}$",
            "title": "ISO Currency Code",
            "type": "string"
          },
          "paymentCurrency": {
            "description": "Valid ISO 4217 3 letter currency code. See the <a href=\"https://www.iso.org/iso-4217-currency-codes.html\" target=\"_blank\" a>ISO specification</a> for details.",
            "example": "USD",
            "maxLength": 3,
            "minLength": 3,
            "pattern": "^[A-Z]{3}$",
            "title": "ISO Currency Code",
            "type": "string"
          },
          "fundingStatus": {
            "description": "Current status of the funding associated with this quote. One of the following values: UNFUNDED, INSTRUCTED, FUNDED",
            "example": "FUNDED",
            "type": "string"
          },
          "status": {
            "description": "Current status of the fx quote. One of the following values: UNQUOTED, QUOTED, EXPIRED, EXECUTED, REJECTED",
            "example": "QUOTED",
            "type": "string"
          }
        },
        "required": [
          "creationTime",
          "fundingStatus",
          "paymentCurrency",
          "quoteId",
          "rate",
          "sourceCurrency",
          "status",
          "totalPaymentAmount",
          "totalSourceAmount"
        ],
        "type": "object"
      },
      "SourceAccountV3": {
        "example": {
          "sourceAccountId": "cf81e490-4ab8-49c2-bd68-9d1e725480cb",
          "currency": "USD",
          "totalPayoutCost": 1000000,
          "sourceAccountName": "AccountName"
        },
        "properties": {
          "sourceAccountName": {
            "description": "The name of the source account as referencec in the payout",
            "example": "AccountName",
            "type": "string"
          },
          "sourceAccountId": {
            "description": "The id of the payout",
            "example": "cf81e490-4ab8-49c2-bd68-9d1e725480cb",
            "format": "uuid",
            "type": "string"
          },
          "currency": {
            "description": "Valid ISO 4217 3 letter currency code. See the <a href=\"https://www.iso.org/iso-4217-currency-codes.html\" target=\"_blank\" a>ISO specification</a> for details.",
            "example": "USD",
            "maxLength": 3,
            "minLength": 3,
            "pattern": "^[A-Z]{3}$",
            "title": "ISO Currency Code",
            "type": "string"
          },
          "totalPayoutCost": {
            "description": "The total amount (in mnor units) that will be debited from the source account for the payout",
            "example": 1000000,
            "type": "integer"
          }
        },
        "required": [
          "currency",
          "sourceAccountId",
          "sourceAccountName",
          "totalPayoutCost"
        ],
        "type": "object"
      },
      "AcceptedPaymentV3": {
        "example": {
          "currencyType": "USD",
          "amount": 10000,
          "paymentMetadata": "invoiceeId_123|abc001:12345|xyz002:4567",
          "payorPaymentId": "123211321ABSD",
          "railsId": "SVB",
          "paymentMemo": "INV00112",
          "remoteSystemId": "OB012",
          "remoteId": "remoteId1234",
          "sourceAccountName": "Chase Bank Account"
        },
        "properties": {
          "remoteId": {
            "description": "Your identifier for the payee",
            "example": "remoteId1234",
            "maxLength": 100,
            "minLength": 1,
            "type": "string"
          },
          "currencyType": {
            "description": "Valid ISO 4217 3 letter currency code. See the <a href=\"https://www.iso.org/iso-4217-currency-codes.html\" target=\"_blank\" a>ISO specification</a> for details.",
            "example": "USD",
            "maxLength": 3,
            "minLength": 3,
            "pattern": "^[A-Z]{3}$",
            "title": "ISO Currency Code",
            "type": "string"
          },
          "amount": {
            "description": "The amount of the payment in minor units",
            "example": 10000,
            "type": "integer"
          },
          "sourceAccountName": {
            "description": "The identifier of the source account to debit the payment from",
            "example": "Chase Bank Account",
            "type": "string"
          },
          "payorPaymentId": {
            "description": "A reference identifier for the payor for the given payee payment",
            "example": "123211321ABSD",
            "maxLength": 40,
            "minLength": 0,
            "type": "string"
          },
          "paymentMemo": {
            "description": "<p>Any value here will override the memo value in the parent payout</p>\n<p>This should be the reference field on the statement seen by the payee (but not via ACH)</p>\n",
            "example": "INV00112",
            "maxLength": 40,
            "minLength": 0,
            "type": "string"
          },
          "remoteSystemId": {
            "description": "<p>The identifier for the remote payments system if not Velo</p>\n",
            "example": "OB012",
            "maxLength": 100,
            "minLength": 1,
            "type": "string"
          },
          "paymentMetadata": {
            "description": "<p>Metadata about the payment that may be relevant to the specific rails or remote system making the payout</p>\n<p>The structure of the data will be dictated by the requirements of the payment rails</p>\n",
            "example": "invoiceeId_123|abc001:12345|xyz002:4567",
            "maxLength": 512,
            "minLength": 0,
            "type": "string"
          },
          "railsId": {
            "description": "Indicates the 3rd party system involved in making this payment",
            "example": "SVB",
            "type": "string"
          }
        },
        "required": [
          "amount",
          "currencyType",
          "payorPaymentId",
          "railsId",
          "remoteId",
          "sourceAccountName"
        ],
        "type": "object"
      },
      "RejectedPaymentV3": {
        "example": {
          "currencyType": "USD",
          "reason": "The payee has not been onboarded",
          "amount": 10000,
          "paymentMetadata": "invoiceeId_123|abc001:12345|xyz002:4567",
          "payorPaymentId": "123211321ABSD",
          "reasonCode": "VE1012",
          "remoteSystemId": "OB012",
          "lineNumber": 34,
          "message": "Payment cannot be processed because of the Payee's OFAC or Compliance Status",
          "remoteId": "remoteIdVal123",
          "sourceAccountName": "Chase Bank Account"
        },
        "properties": {
          "remoteId": {
            "description": "The remoteId supplied by the payor that identifies the payee",
            "example": "remoteIdVal123",
            "type": "string"
          },
          "currencyType": {
            "description": "Valid ISO 4217 3 letter currency code. See the <a href=\"https://www.iso.org/iso-4217-currency-codes.html\" target=\"_blank\" a>ISO specification</a> for details.",
            "example": "USD",
            "maxLength": 3,
            "minLength": 3,
            "pattern": "^[A-Z]{3}$",
            "title": "ISO Currency Code",
            "type": "string"
          },
          "amount": {
            "description": "The amount of the payment in minor units",
            "example": 10000,
            "type": "integer"
          },
          "sourceAccountName": {
            "description": "The identifier of the source account to debit the payment from",
            "example": "Chase Bank Account",
            "type": "string"
          },
          "payorPaymentId": {
            "description": "A reference identifier for the payor for the given payee payment",
            "example": "123211321ABSD",
            "maxLength": 40,
            "minLength": 0,
            "type": "string"
          },
          "remoteSystemId": {
            "description": "<p>The identifier for the remote payments system if not Velo</p>\n",
            "example": "OB012",
            "maxLength": 100,
            "minLength": 1,
            "type": "string"
          },
          "paymentMetadata": {
            "description": "<p>Metadata about the payment that may be relevant to the specific rails or remote system making the payout</p>\n<p>The structure of the data will be dictated by the requirements of the payment rails</p>\n",
            "example": "invoiceeId_123|abc001:12345|xyz002:4567",
            "maxLength": 512,
            "minLength": 0,
            "type": "string"
          },
          "reason": {
            "description": "The reason for the payment being rejected",
            "example": "The payee has not been onboarded",
            "type": "string"
          },
          "reasonCode": {
            "description": "The reason code as determined by Velo",
            "example": "VE1012",
            "type": "string"
          },
          "lineNumber": {
            "description": "If the payment was submitted in a csv payout then this will be the line number of the payment in the file",
            "example": 34,
            "type": "integer"
          },
          "message": {
            "description": "A more general rejection message than the reason property",
            "example": "Payment cannot be processed because of the Payee's OFAC or Compliance Status",
            "type": "string"
          }
        },
        "required": [
          "amount",
          "currencyType",
          "payorPaymentId",
          "reason",
          "remoteId",
          "sourceAccountName"
        ],
        "type": "object"
      },
      "PayoutScheduleV3": {
        "description": "Details relating to a payout that was executed via a schedule or is still waiting to be executed",
        "example": {
          "scheduledFor": "2000-01-23T04:56:07.000Z",
          "scheduleStatus": "SCHEDULED",
          "notificationsEnabled": true,
          "scheduledByPrincipalId": "8946953b-1e3b-49cf-9da4-b704cbb78f3e",
          "scheduledAt": "2000-01-23T04:56:07.000Z"
        },
        "properties": {
          "scheduleStatus": {
            "description": "The current status of the payout schedule. One of the following values: SCHEDULED, EXECUTED, FAILED",
            "example": "SCHEDULED",
            "type": "string"
          },
          "scheduledAt": {
            "format": "date-time",
            "type": "string"
          },
          "scheduledFor": {
            "format": "date-time",
            "type": "string"
          },
          "scheduledByPrincipalId": {
            "description": "ID of the user or application that scheduled the payout",
            "example": "8946953b-1e3b-49cf-9da4-b704cbb78f3e",
            "type": "string"
          },
          "notificationsEnabled": {
            "type": "boolean"
          }
        },
        "required": [
          "notificationsEnabled",
          "scheduleStatus",
          "scheduledAt",
          "scheduledByPrincipalId",
          "scheduledFor"
        ],
        "type": "object"
      },
      "PaymentV3": {
        "example": {
          "amount": 10000,
          "paymentMemo": "INV00112",
          "remoteId": "remoteIdVal123",
          "payee": {
            "individual": {
              "name": {
                "firstName": "Fred",
                "lastName": "Flintstone"
              }
            },
            "company": {
              "companyName": "ACME Anvils PLC"
            },
            "payeeId": "046b6c7f-0b8a-43b9-b35d-6489e6daee91"
          },
          "paymentId": "859af785-223b-4d5b-a708-5fa57f006dbb",
          "withdrawable": false,
          "autoWithdrawnReasonCode": "VE0003",
          "paymentMetadata": "invoiceeId_123|abc001:12345|xyz002:4567",
          "currency": "USD",
          "payorPaymentId": "123211321ABSD",
          "transmissionType": "LOCAL",
          "railsId": "SVB",
          "remoteSystemId": "OB012",
          "sourceAccountName": "Chase Bank Account",
          "status": "AWAITING_FUNDS"
        },
        "properties": {
          "paymentId": {
            "description": "The id of the payment",
            "example": "859af785-223b-4d5b-a708-5fa57f006dbb",
            "format": "uuid",
            "type": "string"
          },
          "remoteId": {
            "description": "The remoteId supplied by the payor that identifies the payee",
            "example": "remoteIdVal123",
            "type": "string"
          },
          "currency": {
            "description": "The currency that the payment was made in",
            "example": "USD",
            "maxLength": 3,
            "minLength": 3,
            "type": "string"
          },
          "amount": {
            "description": "The amount of the payment in minor units",
            "example": 10000,
            "type": "integer"
          },
          "sourceAccountName": {
            "description": "The identifier of the source account to debit the payment from",
            "example": "Chase Bank Account",
            "type": "string"
          },
          "payorPaymentId": {
            "description": "A reference identifier for the payor for the given payee payment",
            "example": "123211321ABSD",
            "maxLength": 40,
            "minLength": 0,
            "type": "string"
          },
          "paymentMemo": {
            "description": "<p>Any value here will override the memo value in the parent payout</p>\n<p>This should be the reference field on the statement seen by the payee (but not via ACH)</p>\n",
            "example": "INV00112",
            "maxLength": 40,
            "minLength": 0,
            "type": "string"
          },
          "payee": {
            "$ref": "#/components/schemas/PayoutPayeeV3"
          },
          "withdrawable": {
            "description": "Can this paynent be withdrawn",
            "example": false,
            "type": "boolean"
          },
          "status": {
            "description": "Current status of payment. One of the following values: SUBMITTED, ACCEPTED, REJECTED, WITHDRAWN, RETURNED, AWAITING_FUNDS, FUNDED, UNFUNDED, CANCELLED, BANK_PAYMENT_REQUESTED",
            "example": "AWAITING_FUNDS",
            "type": "string"
          },
          "transmissionType": {
            "description": "The transmission method of the payment. One of the following values: ACH, SAME_DAY_ACH, WIRE, LOCAL, SWIFT",
            "example": "LOCAL",
            "type": "string"
          },
          "remoteSystemId": {
            "description": "<p>The identifier for the remote payments system if not Velo</p>\n",
            "example": "OB012",
            "maxLength": 100,
            "minLength": 1,
            "type": "string"
          },
          "paymentMetadata": {
            "description": "<p>Metadata about the payment that may be relevant to the specific rails or remote system making the payout</p>\n<p>The structure of the data will be dictated by the requirements of the payment rails</p>\n",
            "example": "invoiceeId_123|abc001:12345|xyz002:4567",
            "maxLength": 512,
            "minLength": 0,
            "type": "string"
          },
          "autoWithdrawnReasonCode": {
            "description": "Populated only if the payment was automatically withdrawn during instruction for being invalid",
            "example": "VE0003",
            "type": "string"
          },
          "railsId": {
            "description": "Indicates the 3rd party system involved in making this payment",
            "example": "SVB",
            "type": "string"
          }
        },
        "required": [
          "paymentId"
        ],
        "type": "object"
      },
      "PaymentChannelCountry": {
        "example": {
          "isoCountryCode": "US",
          "rules": [
            {
              "displayName": "Account Name",
              "minLength": 5,
              "displayOrder": 0,
              "description": "The bank branch, account number prefix and account number suffix; with hyphen separators.",
              "required": true,
              "maxLength": 50,
              "validation": "^[0-9]{6,11}$",
              "element": "accountName"
            },
            {
              "displayName": "Account Name",
              "minLength": 5,
              "displayOrder": 0,
              "description": "The bank branch, account number prefix and account number suffix; with hyphen separators.",
              "required": true,
              "maxLength": 50,
              "validation": "^[0-9]{6,11}$",
              "element": "accountName"
            }
          ]
        },
        "properties": {
          "isoCountryCode": {
            "description": "The ISO code for the country",
            "example": "US",
            "type": "string"
          },
          "rules": {
            "description": "The rules for the given country",
            "items": {
              "$ref": "#/components/schemas/PaymentChannelRule"
            },
            "type": "array"
          }
        },
        "required": [
          "isoCountryCode",
          "rules"
        ],
        "type": "object"
      },
      "SupportedCountry": {
        "example": {
          "isoCountryCode": "US",
          "currencies": [
            "USD",
            "USD"
          ]
        },
        "properties": {
          "isoCountryCode": {
            "description": "Valid ISO 3166 2 character country code. See the <a href=\"https://www.iso.org/iso-3166-country-codes.html\" target=\"_blank\" a>ISO specification</a> for details.",
            "example": "US",
            "maxLength": 2,
            "minLength": 2,
            "pattern": "^[A-Z]{2}$",
            "title": "ISO 3166 2 Character Country Code",
            "type": "string"
          },
          "currencies": {
            "items": {
              "$ref": "#/components/schemas/IsoCurrency"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "SupportedCountryV2": {
        "example": {
          "regions": [
            {
              "name": "California",
              "abbreviation": "CA"
            },
            {
              "name": "California",
              "abbreviation": "CA"
            }
          ],
          "isoCountryCode": "US",
          "currencies": [
            "USD",
            "USD"
          ]
        },
        "properties": {
          "isoCountryCode": {
            "description": "Valid ISO 3166 2 character country code. See the <a href=\"https://www.iso.org/iso-3166-country-codes.html\" target=\"_blank\" a>ISO specification</a> for details.",
            "example": "US",
            "maxLength": 2,
            "minLength": 2,
            "pattern": "^[A-Z]{2}$",
            "title": "ISO 3166 2 Character Country Code",
            "type": "string"
          },
          "currencies": {
            "items": {
              "$ref": "#/components/schemas/IsoCurrency"
            },
            "type": "array"
          },
          "regions": {
            "items": {
              "$ref": "#/components/schemas/RegionV2"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "SupportedCurrencyV2": {
        "example": {
          "currency": "USD",
          "maxPaymentAmount": 100000
        },
        "properties": {
          "currency": {
            "description": "Valid ISO 4217 3 letter currency code. See the <a href=\"https://www.iso.org/iso-4217-currency-codes.html\" target=\"_blank\" a>ISO specification</a> for details.",
            "example": "USD",
            "maxLength": 3,
            "minLength": 3,
            "pattern": "^[A-Z]{3}$",
            "title": "ISO Currency Code",
            "type": "string"
          },
          "maxPaymentAmount": {
            "description": "The max amount allowed in this currency",
            "example": 100000,
            "type": "integer"
          }
        },
        "type": "object"
      },
      "CommonPageObject": {
        "example": {
          "numberOfElements": 10,
          "totalPages": 10,
          "pageSize": 10,
          "page": 10,
          "totalElements": 10
        },
        "properties": {
          "numberOfElements": {
            "example": 10,
            "format": "int64",
            "type": "integer"
          },
          "totalElements": {
            "example": 10,
            "format": "int64",
            "type": "integer"
          },
          "totalPages": {
            "example": 10,
            "format": "int64",
            "type": "integer"
          },
          "page": {
            "example": 10,
            "format": "int64",
            "type": "integer"
          },
          "pageSize": {
            "example": 10,
            "format": "int64",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "CommonLinkObject": {
        "example": {
          "rel": "first",
          "href": "https://api.sandbox.velopayments.com/v1/resources?page=1&pageSize=3&sort=lastLoadedAt:asc"
        },
        "properties": {
          "rel": {
            "description": "One of: first, last, or self",
            "example": "first",
            "type": "string"
          },
          "href": {
            "description": "the resource URI",
            "example": "https://api.sandbox.velopayments.com/v1/resources?page=1&pageSize=3&sort=lastLoadedAt:asc",
            "type": "string"
          }
        },
        "type": "object"
      },
      "Category": {
        "description": "The category into which the notification fails. One of\n* \"payment\" - notifications related to payments (submitted, accepted, rejected, returned)\n* \"payee\" - notifications related to payees (payor accepted, payor declined, payee updated)\n* \"debit\" - notifications related to debit events\n* \"funding\" - notifications related to funding (funding detected)\n",
        "enum": [
          "payment",
          "payee",
          "debit",
          "funding"
        ],
        "type": "string"
      },
      "UserType_2": {
        "enum": [
          "BACKOFFICE",
          "PAYOR",
          "PAYEE"
        ],
        "example": "PAYOR",
        "type": "string"
      },
      "MFADetails": {
        "example": {
          "mfa_type": "TOTP",
          "verified": true
        },
        "properties": {
          "mfa_type": {
            "$ref": "#/components/schemas/MFAType"
          },
          "verified": {
            "description": "true if the user has used the MFA device for login",
            "example": true,
            "type": "boolean"
          }
        },
        "type": "object"
      },
      "InvitationStatusV3": {
        "type": "string"
      },
      "PayableIssueV3": {
        "description": "payable issues for the payee and payor combination",
        "example": {
          "code": "3",
          "message": "payee-disabled"
        },
        "properties": {
          "code": {
            "example": "3",
            "type": "string"
          },
          "message": {
            "example": "payee-disabled",
            "type": "string"
          }
        },
        "required": [
          "code",
          "message"
        ],
        "type": "object"
      },
      "GetPayeeListResponseIndividualV3": {
        "example": {
          "name": {
            "firstName": "Bob",
            "lastName": "Smith",
            "otherNames": "H",
            "title": "Mr"
          }
        },
        "properties": {
          "name": {
            "$ref": "#/components/schemas/NameV3"
          }
        },
        "type": "object"
      },
      "GetPayeeListResponseCompanyV3": {
        "example": {
          "name": "ABC Group Plc",
          "operatingName": "ABC Co"
        },
        "properties": {
          "name": {
            "example": "ABC Group Plc",
            "maxLength": 40,
            "minLength": 1,
            "type": "string"
          },
          "operatingName": {
            "example": "ABC Co",
            "maxLength": 100,
            "minLength": 1,
            "nullable": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "CreatePayeeAddressV3": {
        "example": {
          "country": "US",
          "countyOrProvince": "FL",
          "line4": "line4",
          "city": "Key West",
          "line3": "line3",
          "line2": "line2",
          "line1": "500 Duval St",
          "zipOrPostcode": "33945"
        },
        "properties": {
          "line1": {
            "example": "500 Duval St",
            "maxLength": 100,
            "minLength": 1,
            "nullable": false,
            "type": "string"
          },
          "line2": {
            "maxLength": 100,
            "minLength": 0,
            "nullable": true,
            "type": "string"
          },
          "line3": {
            "maxLength": 100,
            "minLength": 0,
            "nullable": true,
            "type": "string"
          },
          "line4": {
            "maxLength": 100,
            "minLength": 0,
            "nullable": true,
            "type": "string"
          },
          "city": {
            "example": "Key West",
            "maxLength": 50,
            "minLength": 2,
            "nullable": false,
            "type": "string"
          },
          "countyOrProvince": {
            "example": "FL",
            "maxLength": 50,
            "minLength": 2,
            "nullable": true,
            "type": "string"
          },
          "zipOrPostcode": {
            "example": "33945",
            "maxLength": 60,
            "minLength": 2,
            "nullable": true,
            "type": "string"
          },
          "country": {
            "description": "2 letter ISO 3166-1 country code",
            "example": "US",
            "maxLength": 2,
            "minLength": 2,
            "nullable": false,
            "type": "string"
          }
        },
        "required": [
          "city",
          "country",
          "line1"
        ],
        "type": "object"
      },
      "CreatePaymentChannelV3": {
        "example": {
          "paymentChannelName": "My Payment Channel",
          "routingNumber": "XXXXX6789",
          "accountName": "My account",
          "countryCode": "US",
          "iban": "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXX1234",
          "currency": "USD",
          "accountNumber": "XXXXXX5678"
        },
        "properties": {
          "paymentChannelName": {
            "example": "My Payment Channel",
            "type": "string"
          },
          "iban": {
            "description": "Must match the regular expression ```^[A-Za-z0-9]+$```.",
            "example": "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXX1234",
            "maxLength": 34,
            "minLength": 15,
            "pattern": "^[A-Za-z0-9]+$",
            "title": "IBAN - International Bank Account Number",
            "type": "string"
          },
          "accountNumber": {
            "description": "Either routing number and account number or only iban must be set",
            "example": "XXXXXX5678",
            "maxLength": 17,
            "minLength": 6,
            "type": "string"
          },
          "routingNumber": {
            "description": "Either routing number and account number or only iban must be set",
            "example": "XXXXX6789",
            "maxLength": 9,
            "minLength": 9,
            "type": "string"
          },
          "countryCode": {
            "description": "Valid ISO 3166 2 character country code. See the <a href=\"https://www.iso.org/iso-3166-country-codes.html\" target=\"_blank\" a>ISO specification</a> for details.",
            "example": "US",
            "maxLength": 2,
            "minLength": 2,
            "pattern": "^[A-Z]{2}$",
            "title": "ISO 3166 2 Character Country Code",
            "type": "string"
          },
          "currency": {
            "description": "Valid ISO 4217 3 letter currency code. See the <a href=\"https://www.iso.org/iso-4217-currency-codes.html\" target=\"_blank\" a>ISO specification</a> for details.",
            "example": "USD",
            "maxLength": 3,
            "minLength": 3,
            "pattern": "^[A-Z]{3}$",
            "title": "ISO Currency Code",
            "type": "string"
          },
          "accountName": {
            "example": "My account",
            "type": "string"
          }
        },
        "required": [
          "accountName",
          "countryCode",
          "currency"
        ],
        "type": "object"
      },
      "CreateIndividualV3": {
        "example": {
          "name": {
            "firstName": "Bob",
            "lastName": "Smith",
            "otherNames": "H",
            "title": "Mr"
          },
          "nationalIdentification": "SA211123K",
          "dateOfBirth": "1970-05-20T00:00:00.000+0000"
        },
        "properties": {
          "name": {
            "$ref": "#/components/schemas/CreateIndividualV3_name"
          },
          "nationalIdentification": {
            "example": "SA211123K",
            "maxLength": 30,
            "minLength": 6,
            "type": "string"
          },
          "dateOfBirth": {
            "description": "Must not be date in future. Example - 1970-05-20",
            "example": "1970-05-20T00:00:00.000Z",
            "format": "date",
            "type": "string"
          }
        },
        "required": [
          "dateOfBirth",
          "name"
        ],
        "type": "object"
      },
      "FailedPayeeV3": {
        "example": {
          "payorRefs": [
            {
              "payorId": "ba08877f-9d96-41e4-9c26-44a872d856ae",
              "invitationStatusTimestamp": "2019-01-20T09:00:00.000Z",
              "payableStatus": true,
              "invitationStatus": "invitationStatus",
              "payableIssues": [
                {
                  "code": "3",
                  "message": "payee-disabled"
                },
                {
                  "code": "3",
                  "message": "payee-disabled"
                }
              ],
              "remoteId": "uniqueIdForRemoteEntity",
              "paymentChannelId": "70faaff7-2c32-4b44-b27f-f0b6c484e6f3"
            },
            {
              "payorId": "ba08877f-9d96-41e4-9c26-44a872d856ae",
              "invitationStatusTimestamp": "2019-01-20T09:00:00.000Z",
              "payableStatus": true,
              "invitationStatus": "invitationStatus",
              "payableIssues": [
                {
                  "code": "3",
                  "message": "payee-disabled"
                },
                {
                  "code": "3",
                  "message": "payee-disabled"
                }
              ],
              "remoteId": "uniqueIdForRemoteEntity",
              "paymentChannelId": "70faaff7-2c32-4b44-b27f-f0b6c484e6f3"
            }
          ],
          "address": {
            "country": "US",
            "countyOrProvince": "FL",
            "line4": "line4",
            "city": "Key West",
            "line3": "line3",
            "line2": "line2",
            "line1": "500 Duval St",
            "zipOrPostcode": "33945"
          },
          "individual": {
            "name": {
              "firstName": "Bob",
              "lastName": "Smith",
              "otherNames": "H",
              "title": "Mr"
            },
            "nationalIdentification": "SA211123K",
            "dateOfBirth": "1970-05-20T00:00:00.000+0000"
          },
          "challenge": {
            "description": "challenge description",
            "value": "challenge test"
          },
          "language": "en-US",
          "company": {
            "taxId": "123123123",
            "name": "ABC Group Plc",
            "operatingName": "ABC Co"
          },
          "payeeId": "2aa5d7e0-2ecb-403f-8494-1865ed0454e9",
          "type": "type",
          "email": "bob@example.com",
          "remoteId": "Remote ID",
          "paymentChannel": {
            "paymentChannelName": "My Payment Channel",
            "routingNumber": "XXXXX6789",
            "accountName": "My account",
            "countryCode": "US",
            "iban": "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXX1234",
            "currency": "USD",
            "accountNumber": "XXXXXX5678"
          }
        },
        "properties": {
          "payeeId": {
            "example": "2aa5d7e0-2ecb-403f-8494-1865ed0454e9",
            "format": "uuid",
            "readOnly": true,
            "type": "string"
          },
          "payorRefs": {
            "items": {
              "$ref": "#/components/schemas/PayeePayorRefV3"
            },
            "nullable": true,
            "readOnly": true,
            "type": "array"
          },
          "email": {
            "example": "bob@example.com",
            "format": "email",
            "type": "string"
          },
          "remoteId": {
            "example": "Remote ID",
            "type": "string"
          },
          "type": {
            "description": "Type of Payee. One of the following values: Individual, Company",
            "type": "string"
          },
          "address": {
            "$ref": "#/components/schemas/CreatePayeeAddressV3"
          },
          "paymentChannel": {
            "$ref": "#/components/schemas/CreatePaymentChannelV3"
          },
          "challenge": {
            "$ref": "#/components/schemas/ChallengeV3"
          },
          "language": {
            "description": "An IETF BCP 47 language code which has been configured for use within this Velo environment.<BR>\nSee the /v1/supportedLanguages endpoint to list the available codes for an environment.\n",
            "example": "en-US",
            "type": "string"
          },
          "company": {
            "$ref": "#/components/schemas/CompanyV3"
          },
          "individual": {
            "$ref": "#/components/schemas/CreateIndividualV3"
          }
        },
        "type": "object"
      },
      "OnboardedStatusV3_2": {
        "description": "Onboarded status. One of the following values: CREATED, INVITED, REGISTERED, ONBOARDED",
        "type": "string"
      },
      "PayableIssueV4": {
        "description": "payable issues for the payee and payor combination",
        "example": {
          "code": "3",
          "message": "payee-disabled"
        },
        "properties": {
          "code": {
            "example": "3",
            "type": "string"
          },
          "message": {
            "example": "payee-disabled",
            "type": "string"
          }
        },
        "required": [
          "code",
          "message"
        ],
        "type": "object"
      },
      "GetPayeeListResponseIndividualV4": {
        "example": {
          "name": {
            "firstName": "Bob",
            "lastName": "Smith",
            "otherNames": "H",
            "title": "Mr"
          }
        },
        "properties": {
          "name": {
            "$ref": "#/components/schemas/NameV4"
          }
        },
        "type": "object"
      },
      "GetPayeeListResponseCompanyV4": {
        "example": {
          "name": "ABC Group Plc",
          "operatingName": "ABC Co"
        },
        "properties": {
          "name": {
            "example": "ABC Group Plc",
            "maxLength": 40,
            "minLength": 1,
            "type": "string"
          },
          "operatingName": {
            "example": "ABC Co",
            "maxLength": 100,
            "minLength": 1,
            "nullable": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "CreatePayeeAddressV4": {
        "example": {
          "country": "US",
          "countyOrProvince": "FL",
          "line4": "line4",
          "city": "Key West",
          "line3": "line3",
          "line2": "line2",
          "line1": "500 Duval St",
          "zipOrPostcode": "33945"
        },
        "properties": {
          "line1": {
            "example": "500 Duval St",
            "maxLength": 100,
            "minLength": 1,
            "nullable": false,
            "type": "string"
          },
          "line2": {
            "maxLength": 100,
            "minLength": 0,
            "nullable": true,
            "type": "string"
          },
          "line3": {
            "maxLength": 100,
            "minLength": 0,
            "nullable": true,
            "type": "string"
          },
          "line4": {
            "maxLength": 100,
            "minLength": 0,
            "nullable": true,
            "type": "string"
          },
          "city": {
            "example": "Key West",
            "maxLength": 50,
            "minLength": 2,
            "nullable": false,
            "type": "string"
          },
          "countyOrProvince": {
            "example": "FL",
            "maxLength": 50,
            "minLength": 2,
            "nullable": true,
            "type": "string"
          },
          "zipOrPostcode": {
            "example": "33945",
            "maxLength": 60,
            "minLength": 2,
            "nullable": true,
            "type": "string"
          },
          "country": {
            "description": "Valid ISO 3166 2 character country code. See the <a href=\"https://www.iso.org/iso-3166-country-codes.html\" target=\"_blank\" a>ISO specification</a> for details.",
            "example": "US",
            "maxLength": 2,
            "minLength": 2,
            "pattern": "^[A-Z]{2}$",
            "title": "ISO 3166 2 Character Country Code",
            "type": "string"
          }
        },
        "required": [
          "city",
          "country",
          "line1"
        ],
        "type": "object"
      },
      "CreatePaymentChannelV4": {
        "example": {
          "paymentChannelName": "My Payment Channel",
          "routingNumber": "XXXXX6789",
          "accountName": "My account",
          "countryCode": "US",
          "iban": "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXX1234",
          "currency": "USD",
          "accountNumber": "XXXXXX5678"
        },
        "properties": {
          "paymentChannelName": {
            "example": "My Payment Channel",
            "type": "string"
          },
          "iban": {
            "description": "Must match the regular expression ```^[A-Za-z0-9]+$```.",
            "example": "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXX1234",
            "maxLength": 34,
            "minLength": 15,
            "pattern": "^[A-Za-z0-9]+$",
            "title": "IBAN - International Bank Account Number",
            "type": "string"
          },
          "accountNumber": {
            "description": "Either routing number and account number or only iban must be set",
            "example": "XXXXXX5678",
            "maxLength": 17,
            "minLength": 6,
            "type": "string"
          },
          "routingNumber": {
            "description": "Either routing number and account number or only iban must be set",
            "example": "XXXXX6789",
            "maxLength": 9,
            "minLength": 9,
            "type": "string"
          },
          "countryCode": {
            "description": "Valid ISO 3166 2 character country code. See the <a href=\"https://www.iso.org/iso-3166-country-codes.html\" target=\"_blank\" a>ISO specification</a> for details.",
            "example": "US",
            "maxLength": 2,
            "minLength": 2,
            "pattern": "^[A-Z]{2}$",
            "title": "ISO 3166 2 Character Country Code",
            "type": "string"
          },
          "currency": {
            "description": "Valid ISO 4217 3 letter currency code. See the <a href=\"https://www.iso.org/iso-4217-currency-codes.html\" target=\"_blank\" a>ISO specification</a> for details.",
            "example": "USD",
            "maxLength": 3,
            "minLength": 3,
            "pattern": "^[A-Z]{3}$",
            "title": "ISO Currency Code",
            "type": "string"
          },
          "accountName": {
            "example": "My account",
            "type": "string"
          }
        },
        "required": [
          "accountName",
          "countryCode",
          "currency"
        ],
        "type": "object"
      },
      "CreateIndividualV4": {
        "example": {
          "name": {
            "firstName": "Bob",
            "lastName": "Smith",
            "otherNames": "H",
            "title": "Mr"
          },
          "nationalIdentification": "SA211123K",
          "dateOfBirth": "1970-05-20T00:00:00.000+0000"
        },
        "properties": {
          "name": {
            "$ref": "#/components/schemas/CreateIndividualV3_name"
          },
          "nationalIdentification": {
            "example": "SA211123K",
            "maxLength": 30,
            "minLength": 6,
            "type": "string"
          },
          "dateOfBirth": {
            "description": "Must not be date in future. Example - 1970-05-20",
            "example": "1970-05-20T00:00:00.000Z",
            "format": "date",
            "type": "string"
          }
        },
        "required": [
          "dateOfBirth",
          "name"
        ],
        "type": "object"
      },
      "FailedPayeeV4": {
        "example": {
          "payorRefs": [
            {
              "payorId": "ba08877f-9d96-41e4-9c26-44a872d856ae",
              "invitationStatusTimestamp": "2019-01-20T09:00:00.000Z",
              "payableStatus": true,
              "invitationStatus": "invitationStatus",
              "payableIssues": [
                {
                  "code": "3",
                  "message": "payee-disabled"
                },
                {
                  "code": "3",
                  "message": "payee-disabled"
                }
              ],
              "remoteId": "uniqueIdForRemoteEntity",
              "paymentChannelId": "70faaff7-2c32-4b44-b27f-f0b6c484e6f3"
            },
            {
              "payorId": "ba08877f-9d96-41e4-9c26-44a872d856ae",
              "invitationStatusTimestamp": "2019-01-20T09:00:00.000Z",
              "payableStatus": true,
              "invitationStatus": "invitationStatus",
              "payableIssues": [
                {
                  "code": "3",
                  "message": "payee-disabled"
                },
                {
                  "code": "3",
                  "message": "payee-disabled"
                }
              ],
              "remoteId": "uniqueIdForRemoteEntity",
              "paymentChannelId": "70faaff7-2c32-4b44-b27f-f0b6c484e6f3"
            }
          ],
          "address": {
            "country": "US",
            "countyOrProvince": "FL",
            "line4": "line4",
            "city": "Key West",
            "line3": "line3",
            "line2": "line2",
            "line1": "500 Duval St",
            "zipOrPostcode": "33945"
          },
          "individual": {
            "name": {
              "firstName": "Bob",
              "lastName": "Smith",
              "otherNames": "H",
              "title": "Mr"
            },
            "nationalIdentification": "SA211123K",
            "dateOfBirth": "1970-05-20T00:00:00.000+0000"
          },
          "challenge": {
            "description": "challenge description",
            "value": "11984567"
          },
          "language": "en-US",
          "company": {
            "taxId": "123123123",
            "name": "ABC Group Plc",
            "operatingName": "ABC Co"
          },
          "payeeId": "2aa5d7e0-2ecb-403f-8494-1865ed0454e9",
          "type": "type",
          "email": "bob@example.com",
          "remoteId": "Remote ID",
          "paymentChannel": {
            "paymentChannelName": "My Payment Channel",
            "routingNumber": "XXXXX6789",
            "accountName": "My account",
            "countryCode": "US",
            "iban": "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXX1234",
            "currency": "USD",
            "accountNumber": "XXXXXX5678"
          }
        },
        "properties": {
          "payeeId": {
            "example": "2aa5d7e0-2ecb-403f-8494-1865ed0454e9",
            "format": "uuid",
            "readOnly": true,
            "type": "string"
          },
          "payorRefs": {
            "items": {
              "$ref": "#/components/schemas/PayeePayorRefV4"
            },
            "nullable": true,
            "readOnly": true,
            "type": "array"
          },
          "email": {
            "example": "bob@example.com",
            "format": "email",
            "type": "string"
          },
          "remoteId": {
            "example": "Remote ID",
            "type": "string"
          },
          "type": {
            "description": "Type of Payee. One of the following values: Individual, Company",
            "type": "string"
          },
          "address": {
            "$ref": "#/components/schemas/CreatePayeeAddressV4"
          },
          "paymentChannel": {
            "$ref": "#/components/schemas/CreatePaymentChannelV4"
          },
          "challenge": {
            "$ref": "#/components/schemas/ChallengeV4"
          },
          "language": {
            "description": "An IETF BCP 47 language code which has been configured for use within this Velo environment.<BR>\nSee the /v1/supportedLanguages endpoint to list the available codes for an environment.\n",
            "example": "en-US",
            "type": "string"
          },
          "company": {
            "$ref": "#/components/schemas/CompanyV4"
          },
          "individual": {
            "$ref": "#/components/schemas/CreateIndividualV4"
          }
        },
        "type": "object"
      },
      "OnboardedStatusV4_2": {
        "description": "Payee onboarded status. One of the following value: CREATED, INVITED, REGISTERED, ONBOARDED",
        "type": "string"
      },
      "FundingEvent_2": {
        "example": {
          "principal": "principal",
          "eventId": "046b6c7f-0b8a-43b9-b35d-6489e6daee91",
          "eventDateTime": "2000-01-23T04:56:07.000Z",
          "fundingEventType": "fundingEventType"
        },
        "properties": {
          "eventId": {
            "format": "uuid",
            "type": "string"
          },
          "eventDateTime": {
            "format": "date-time",
            "type": "string"
          },
          "fundingEventType": {
            "description": "Funding event type. One of the following values: PAYOR_FUNDING_DETECTED, PAYOR_FUNDING_REQUESTED, PAYOR_FUNDING_RETURN_RECEIVED, FUNDING_RETURN_DETECTED, PAYOR_FUNDING_REQUEST_SUBMITTED, PAYOR_FUNDING_ENTRY_DETAIL_RECEIVED, FUNDING_DEALLOCATED",
            "type": "string"
          },
          "principal": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "PayoutStatusV3": {
        "description": "Current status of the payout. One of the following values: ACCEPTED, REJECTED, SUBMITTED, QUOTED, INSTRUCTED, COMPLETED, INCOMPLETE, CONFIRMED, WITHDRAWN",
        "type": "string"
      },
      "SourceAccountSummaryV3": {
        "example": {
          "sourceAccountId": "046b6c7f-0b8a-43b9-b35d-6489e6daee91",
          "currency": "currency",
          "totalCost": 3434
        },
        "properties": {
          "sourceAccountId": {
            "format": "uuid",
            "type": "string"
          },
          "totalCost": {
            "example": 3434,
            "format": "int64",
            "type": "integer"
          },
          "currency": {
            "description": "ISO 3 character currency code",
            "maxLength": 3,
            "minLength": 3,
            "type": "string"
          }
        },
        "required": [
          "sourceAccountId",
          "totalCost"
        ],
        "type": "object"
      },
      "FxSummaryV3": {
        "example": {
          "invertedRate": 1.12,
          "rate": 1.12,
          "sourceCurrency": "sourceCurrency",
          "totalPaymentAmount": 1234,
          "paymentCurrency": "paymentCurrency",
          "quoteId": "046b6c7f-0b8a-43b9-b35d-6489e6daee91",
          "totalCost": 1234,
          "fundingStatus": "fundingStatus",
          "creationDateTime": "2000-01-23T04:56:07.000Z",
          "status": "status"
        },
        "properties": {
          "quoteId": {
            "format": "uuid",
            "type": "string"
          },
          "creationDateTime": {
            "format": "date-time",
            "type": "string"
          },
          "rate": {
            "example": 1.12,
            "format": "float",
            "type": "number"
          },
          "invertedRate": {
            "example": 1.12,
            "format": "float",
            "type": "number"
          },
          "totalCost": {
            "example": 1234,
            "type": "integer"
          },
          "totalPaymentAmount": {
            "example": 1234,
            "type": "integer"
          },
          "sourceCurrency": {
            "description": "ISO 3 character currency code",
            "maxLength": 3,
            "minLength": 3,
            "type": "string"
          },
          "paymentCurrency": {
            "description": "ISO 3 character currency code",
            "maxLength": 3,
            "minLength": 3,
            "type": "string"
          },
          "status": {
            "description": "Current status of the FX Summary. One of the following values: UNQUOTED, QUOTED, EXPIRED, EXECUTED",
            "type": "string"
          },
          "fundingStatus": {
            "description": "Current status of the funding. One of the following values: FUNDED, INSTRUCTED, UNFUNDED",
            "type": "string"
          }
        },
        "required": [
          "creationDateTime",
          "fundingStatus",
          "invertedRate",
          "quoteId",
          "rate",
          "status",
          "totalCost",
          "totalPaymentAmount"
        ],
        "type": "object"
      },
      "SourceAccountSummary": {
        "example": {
          "sourceAccountId": "046b6c7f-0b8a-43b9-b35d-6489e6daee91",
          "currency": "EUR",
          "totalCost": 3344
        },
        "properties": {
          "sourceAccountId": {
            "format": "uuid",
            "type": "string"
          },
          "totalCost": {
            "example": 3344,
            "format": "int64",
            "type": "integer"
          },
          "currency": {
            "description": "ISO-4217 3 character currency code",
            "example": "EUR",
            "maxLength": 3,
            "minLength": 3,
            "type": "string"
          }
        },
        "required": [
          "sourceAccountId",
          "totalCost"
        ],
        "type": "object"
      },
      "FxSummary": {
        "example": {
          "invertedRate": 123.23,
          "rate": 123.23,
          "sourceCurrency": "EUR",
          "totalPaymentAmount": 34235,
          "paymentCurrency": "EUR",
          "quoteId": "046b6c7f-0b8a-43b9-b35d-6489e6daee91",
          "totalCost": 5,
          "fundingStatus": "fundingStatus",
          "creationDateTime": "2000-01-23T04:56:07.000Z",
          "status": "status"
        },
        "properties": {
          "quoteId": {
            "format": "uuid",
            "type": "string"
          },
          "creationDateTime": {
            "format": "date-time",
            "type": "string"
          },
          "rate": {
            "example": 123.23,
            "format": "double",
            "type": "number"
          },
          "invertedRate": {
            "example": 123.23,
            "format": "double",
            "type": "number"
          },
          "totalCost": {
            "type": "integer"
          },
          "totalPaymentAmount": {
            "example": 34235,
            "type": "integer"
          },
          "sourceCurrency": {
            "description": "ISO-4217 3 character currency code",
            "example": "EUR",
            "maxLength": 3,
            "minLength": 3,
            "type": "string"
          },
          "paymentCurrency": {
            "description": "ISO-4217 3 character currency code",
            "example": "EUR",
            "maxLength": 3,
            "minLength": 3,
            "type": "string"
          },
          "status": {
            "description": "Current status of the FX Summary. One of the following values: UNQUOTED, QUOTED, EXPIRED, EXECUTED",
            "type": "string"
          },
          "fundingStatus": {
            "description": "Current status of the funding. One of the following values: FUNDED, INSTRUCTED, UNFUNDED",
            "type": "string"
          }
        },
        "required": [
          "creationDateTime",
          "fundingStatus",
          "invertedRate",
          "quoteId",
          "rate",
          "status",
          "totalCost",
          "totalPaymentAmount"
        ],
        "type": "object"
      },
      "ScheduleStatus": {
        "description": "Current status of the payout schedule. One of the following values: SCHEDULED, EXECUTED, FAILED",
        "example": "SCHEDULED",
        "type": "string"
      },
      "PostInstructFxMode": {
        "description": "The mode by which the FX rate is to be determined (MANUAL or AUTO)",
        "example": "MANUAL",
        "type": "string"
      },
      "PostInstructFxStatus": {
        "description": "The state to which the Post-Instruct FX process has reached (INITIATED or COMPLETED)",
        "example": "INITIATED",
        "type": "string"
      },
      "PayoutPayeeV3": {
        "description": "Payee data associated with a payment. Either individual or company must be populated",
        "example": {
          "individual": {
            "name": {
              "firstName": "Fred",
              "lastName": "Flintstone"
            }
          },
          "company": {
            "companyName": "ACME Anvils PLC"
          },
          "payeeId": "046b6c7f-0b8a-43b9-b35d-6489e6daee91"
        },
        "properties": {
          "payeeId": {
            "format": "uuid",
            "type": "string"
          },
          "individual": {
            "$ref": "#/components/schemas/PayoutIndividualV3"
          },
          "company": {
            "$ref": "#/components/schemas/PayoutCompanyV3"
          }
        },
        "required": [
          "payeeId"
        ],
        "type": "object"
      },
      "PaymentChannelRule": {
        "description": "Rules that will get applied when creating or updating a payment channel for the given country",
        "example": {
          "displayName": "Account Name",
          "minLength": 5,
          "displayOrder": 0,
          "description": "The bank branch, account number prefix and account number suffix; with hyphen separators.",
          "required": true,
          "maxLength": 50,
          "validation": "^[0-9]{6,11}$",
          "element": "accountName"
        },
        "properties": {
          "element": {
            "description": "<p>the rule element</p>\n<p>will match a given element name for a payment channel configuration\n",
            "example": "accountName",
            "type": "string"
          },
          "required": {
            "description": "is this element required",
            "type": "boolean"
          },
          "displayName": {
            "description": "User friendly name",
            "example": "Account Name",
            "type": "string"
          },
          "minLength": {
            "description": "mininum length of the element data",
            "example": 5,
            "type": "integer"
          },
          "maxLength": {
            "description": "maximum length of the element data",
            "example": 50,
            "type": "integer"
          },
          "validation": {
            "description": "a regex to validate the element data",
            "example": "^[0-9]{6,11}$",
            "type": "string"
          },
          "displayOrder": {
            "type": "integer"
          },
          "description": {
            "description": "An optional description, or hint, as to how the user should enter the field value.",
            "example": "The bank branch, account number prefix and account number suffix; with hyphen separators.",
            "type": "string"
          }
        },
        "required": [
          "displayName",
          "element",
          "required",
          "validation"
        ],
        "type": "object"
      },
      "RegionV2": {
        "example": {
          "name": "California",
          "abbreviation": "CA"
        },
        "properties": {
          "name": {
            "example": "California",
            "type": "string"
          },
          "abbreviation": {
            "example": "CA",
            "type": "string"
          }
        },
        "type": "object"
      },
      "NameV3": {
        "example": {
          "firstName": "Bob",
          "lastName": "Smith",
          "otherNames": "H",
          "title": "Mr"
        },
        "properties": {
          "title": {
            "example": "Mr",
            "maxLength": 10,
            "minLength": 1,
            "type": "string"
          },
          "firstName": {
            "example": "Bob",
            "maxLength": 40,
            "minLength": 1,
            "type": "string"
          },
          "otherNames": {
            "example": "H",
            "maxLength": 40,
            "minLength": 1,
            "type": "string"
          },
          "lastName": {
            "example": "Smith",
            "maxLength": 40,
            "minLength": 1,
            "type": "string"
          }
        },
        "type": "object"
      },
      "NameV4": {
        "example": {
          "firstName": "Bob",
          "lastName": "Smith",
          "otherNames": "H",
          "title": "Mr"
        },
        "properties": {
          "title": {
            "example": "Mr",
            "maxLength": 10,
            "minLength": 1,
            "type": "string"
          },
          "firstName": {
            "example": "Bob",
            "maxLength": 40,
            "minLength": 1,
            "type": "string"
          },
          "otherNames": {
            "example": "H",
            "maxLength": 40,
            "minLength": 1,
            "type": "string"
          },
          "lastName": {
            "example": "Smith",
            "maxLength": 40,
            "minLength": 1,
            "type": "string"
          }
        },
        "type": "object"
      },
      "FundingEventType": {
        "description": "Funding event type. One of the following values: PAYOR_FUNDING_DETECTED, PAYOR_FUNDING_REQUESTED, PAYOR_FUNDING_RETURN_RECEIVED, FUNDING_RETURN_DETECTED, PAYOR_FUNDING_REQUEST_SUBMITTED, PAYOR_FUNDING_ENTRY_DETAIL_RECEIVED, FUNDING_DEALLOCATED",
        "type": "string"
      },
      "PayoutIndividualV3": {
        "example": {
          "name": {
            "firstName": "Fred",
            "lastName": "Flintstone"
          }
        },
        "properties": {
          "name": {
            "$ref": "#/components/schemas/PayoutNameV3"
          }
        },
        "required": [
          "name"
        ],
        "type": "object"
      },
      "PayoutCompanyV3": {
        "example": {
          "companyName": "ACME Anvils PLC"
        },
        "properties": {
          "companyName": {
            "example": "ACME Anvils PLC",
            "type": "string"
          }
        },
        "required": [
          "companyName"
        ],
        "type": "object"
      },
      "PayoutNameV3": {
        "example": {
          "firstName": "Fred",
          "lastName": "Flintstone"
        },
        "properties": {
          "firstName": {
            "example": "Fred",
            "type": "string"
          },
          "lastName": {
            "example": "Flintstone",
            "type": "string"
          }
        },
        "required": [
          "firstName",
          "lastName"
        ],
        "type": "object"
      },
      "inline_response_401": {
        "properties": {
          "errors": {
            "description": "one or more errors",
            "items": {
              "$ref": "#/components/schemas/Error"
            },
            "minItems": 1,
            "nullable": true,
            "type": "array"
          },
          "correlationId": {
            "description": "a unique identifier to track a request or related sequence of requests",
            "example": "ee53e01d-c078-43fd-abd4-47e92f4a06cf",
            "format": "uuid",
            "nullable": true,
            "type": "string"
          },
          "httpStatusCode": {
            "description": "this will mirror the Status-Code part of the Status-Line http response header and is included for extra clarity",
            "example": 401,
            "type": "integer"
          }
        }
      },
      "inline_response_403": {
        "properties": {
          "errors": {
            "description": "one or more errors",
            "items": {
              "$ref": "#/components/schemas/Error"
            },
            "minItems": 1,
            "nullable": true,
            "type": "array"
          },
          "correlationId": {
            "description": "a unique identifier to track a request or related sequence of requests",
            "example": "ee53e01d-c078-43fd-abd4-47e92f4a06cf",
            "format": "uuid",
            "nullable": true,
            "type": "string"
          },
          "httpStatusCode": {
            "description": "this will mirror the Status-Code part of the Status-Line http response header and is included for extra clarity",
            "example": 403,
            "type": "integer"
          }
        }
      },
      "inline_response_400": {
        "properties": {
          "errors": {
            "description": "one or more errors",
            "items": {
              "$ref": "#/components/schemas/Error"
            },
            "minItems": 1,
            "nullable": true,
            "type": "array"
          },
          "correlationId": {
            "description": "a unique identifier to track a request or related sequence of requests",
            "example": "ee53e01d-c078-43fd-abd4-47e92f4a06cf",
            "format": "uuid",
            "nullable": true,
            "type": "string"
          },
          "httpStatusCode": {
            "description": "this will mirror the Status-Code part of the Status-Line http response header and is included for extra clarity",
            "example": 400,
            "type": "integer"
          }
        }
      },
      "inline_response_404": {
        "properties": {
          "errors": {
            "description": "one or more errors",
            "items": {
              "$ref": "#/components/schemas/Error"
            },
            "minItems": 1,
            "nullable": true,
            "type": "array"
          },
          "correlationId": {
            "description": "a unique identifier to track a request or related sequence of requests",
            "example": "ee53e01d-c078-43fd-abd4-47e92f4a06cf",
            "format": "uuid",
            "nullable": true,
            "type": "string"
          },
          "httpStatusCode": {
            "description": "this will mirror the Status-Code part of the Status-Line http response header and is included for extra clarity",
            "example": 404,
            "type": "integer"
          }
        }
      },
      "inline_response_409": {
        "properties": {
          "errors": {
            "description": "one or more errors",
            "items": {
              "$ref": "#/components/schemas/Error"
            },
            "minItems": 1,
            "nullable": true,
            "type": "array"
          },
          "correlationId": {
            "description": "a unique identifier to track a request or related sequence of requests",
            "example": "ee53e01d-c078-43fd-abd4-47e92f4a06cf",
            "format": "uuid",
            "nullable": true,
            "type": "string"
          },
          "httpStatusCode": {
            "description": "this will mirror the Status-Code part of the Status-Line http response header and is included for extra clarity",
            "example": 409,
            "type": "integer"
          }
        }
      },
      "inline_response_412": {
        "properties": {
          "errors": {
            "description": "one or more errors",
            "items": {
              "$ref": "#/components/schemas/Error"
            },
            "minItems": 1,
            "nullable": true,
            "type": "array"
          },
          "correlationId": {
            "description": "a unique identifier to track a request or related sequence of requests",
            "example": "ee53e01d-c078-43fd-abd4-47e92f4a06cf",
            "format": "uuid",
            "nullable": true,
            "type": "string"
          },
          "httpStatusCode": {
            "description": "this will mirror the Status-Code part of the Status-Line http response header and is included for extra clarity",
            "example": 412,
            "type": "integer"
          }
        }
      },
      "PaymentEvent_allOf": {
        "properties": {
          "paymentId": {
            "description": "ID of this payment within the Velo platform",
            "example": "cbd9280f-8fde-4190-b014-979d88f3ec54",
            "format": "uuid",
            "type": "string"
          },
          "payoutPayorIds": {
            "$ref": "#/components/schemas/PayoutPayorIds"
          },
          "payorPaymentId": {
            "description": "ID of this payment in the payors system",
            "example": "ourpayment-id12345",
            "type": "string"
          }
        },
        "required": [
          "paymentId"
        ]
      },
      "PaymentStatusChanged_allOf": {
        "properties": {
          "status": {
            "description": "The new status of the payment. One of \"SUBMITTED\" \"ACCEPTED\" \"REJECTED\" \"ACCEPTED_BY_RAILS\" \"CONFIRMED\" \"RETURNED\" \"WITHDRAWN\"",
            "example": "ACCEPTED",
            "type": "string"
          }
        },
        "required": [
          "status"
        ]
      },
      "PaymentRejectedOrReturned_allOf": {
        "properties": {
          "reasonCode": {
            "description": "The Velo code that indicates why the payment was rejected or returned",
            "example": "VE0001",
            "type": "string"
          },
          "reasonMessage": {
            "description": "The description of why the payment was rejected or returned",
            "example": "VE0001",
            "type": "string"
          }
        },
        "required": [
          "reasonCode",
          "reasonMessage"
        ]
      },
      "PayeeEvent_allOf_reasons": {
        "properties": {
          "code": {
            "example": "00001",
            "type": "string"
          },
          "message": {
            "example": "payment channel disabled",
            "type": "string"
          }
        },
        "required": [
          "code",
          "message"
        ]
      },
      "PayeeEvent_allOf": {
        "properties": {
          "payeeId": {
            "description": "ID of this payee within the Velo platform",
            "example": "cbd9280f-8fde-4190-b014-979d88f3ec54",
            "format": "uuid",
            "type": "string"
          },
          "reasons": {
            "description": "The reasons for the event notification.",
            "items": {
              "$ref": "#/components/schemas/PayeeEvent_allOf_reasons"
            },
            "type": "array"
          }
        },
        "required": [
          "payeeId"
        ]
      },
      "DebitEvent_allOf": {
        "properties": {
          "debitTransactionId": {
            "description": "ID of this debit transaction within the Velo platform",
            "example": "cbd9280f-8fde-4190-b014-979d88f3ec54",
            "format": "uuid",
            "type": "string"
          }
        },
        "required": [
          "debitTransactionId"
        ]
      },
      "DebitStatusChanged_allOf": {
        "properties": {
          "status": {
            "description": "The new status of the debit. One of \"PENDING\" \"PROCESSING\" \"REJECTED\" \"RELEASED\"",
            "example": "PENDING",
            "type": "string"
          }
        },
        "required": [
          "status"
        ]
      },
      "PayorFundingDetected_allOf": {
        "properties": {
          "railsId": {
            "description": "the identifier of the payment rail from which funding was received",
            "example": "WUBS",
            "type": "string"
          },
          "payorId": {
            "description": "ID of the payor within the Velo platform",
            "example": "cbd9280f-8fde-4190-b014-979d88f3ec54",
            "format": "uuid",
            "type": "string"
          },
          "fundingRequestId": {
            "description": "ID of this funding transaction within the Velo platform",
            "example": "cbd9280f-8fde-4190-b014-979d88f3ec54",
            "format": "uuid",
            "type": "string"
          },
          "fundingRef": {
            "description": "the external identity reference for this funding transaction",
            "example": "some-ref-text",
            "type": "string"
          },
          "currency": {
            "description": "the ISO-4217 code for the currency in which the funding was made",
            "example": "GBP",
            "type": "string"
          },
          "amount": {
            "description": "the received funding amount in currency minor units",
            "example": 1234,
            "format": "int64",
            "type": "integer"
          },
          "physicalAccountName": {
            "description": "the name of the account as registered with the payment rail",
            "example": "Acme Company Ltd",
            "type": "string"
          },
          "sourceAccountName": {
            "description": "the name of the account as registered with the Velo platform",
            "example": "Acme Co UK",
            "type": "string"
          },
          "sourceAccountId": {
            "description": "the ID of the account as registered with the Velo platform",
            "example": "cbd9280f-8fde-4190-b014-979d88f3ec54",
            "format": "uuid",
            "type": "string"
          },
          "additionalInformation": {
            "description": "any additional information received from the payment rail",
            "example": "any additional information",
            "type": "string"
          },
          "transactionId": {
            "description": "The Id of the related transaction",
            "example": "4d88e559-d057-45b1-8d8b-b9ccc06f4503",
            "format": "uuid",
            "type": "string"
          },
          "transactionReference": {
            "description": "The payors own reference for the related transaction",
            "example": "myInvoiceNumber-1234567890",
            "type": "string"
          }
        },
        "required": [
          "fundingRequestId",
          "payorId"
        ]
      },
      "PagedUserResponse_page": {
        "example": {
          "numberOfElements": 12,
          "totalPages": 2,
          "pageSize": 25,
          "page": 1,
          "totalElements": 33
        },
        "properties": {
          "numberOfElements": {
            "example": 12,
            "type": "integer"
          },
          "totalElements": {
            "example": 33,
            "type": "integer"
          },
          "totalPages": {
            "example": 2,
            "type": "integer"
          },
          "page": {
            "example": 1,
            "type": "integer"
          },
          "pageSize": {
            "example": 25,
            "type": "integer"
          }
        }
      },
      "PagedUserResponse_links": {
        "example": {
          "rel": "first",
          "href": "https://api.sandbox.velopayments.com/v2/users??type=PAYOR&page=1&pageSize=10"
        },
        "properties": {
          "rel": {
            "example": "first",
            "type": "string"
          },
          "href": {
            "example": "https://api.sandbox.velopayments.com/v2/users??type=PAYOR&page=1&pageSize=10",
            "type": "string"
          }
        }
      },
      "PayorLinksResponse_links": {
        "example": {
          "toPayorId": "046b6c7f-0b8a-43b9-b35d-6489e6daee91",
          "linkId": "046b6c7f-0b8a-43b9-b35d-6489e6daee91",
          "fromPayorId": "046b6c7f-0b8a-43b9-b35d-6489e6daee91",
          "linkType": "linkType"
        },
        "properties": {
          "linkId": {
            "format": "uuid",
            "type": "string"
          },
          "fromPayorId": {
            "format": "uuid",
            "type": "string"
          },
          "linkType": {
            "description": "The type of the link. One of the following values: PARENT_OF",
            "type": "string"
          },
          "toPayorId": {
            "format": "uuid",
            "type": "string"
          }
        },
        "required": [
          "fromPayorId",
          "linkId",
          "linkType",
          "toPayorId"
        ]
      },
      "PayorLinksResponse_payors": {
        "example": {
          "payorId": "046b6c7f-0b8a-43b9-b35d-6489e6daee91",
          "kycState": "kycState",
          "primaryContactEmail": "primaryContactEmail",
          "payorName": "payorName"
        },
        "properties": {
          "payorId": {
            "format": "uuid",
            "type": "string"
          },
          "payorName": {
            "type": "string"
          },
          "primaryContactEmail": {
            "type": "string"
          },
          "kycState": {
            "description": "Current KYC state. One of the following values: FAILED_KYC, PASSED_KYC, REQUIRES_KYC",
            "type": "string"
          }
        },
        "required": [
          "payorId",
          "payorName"
        ]
      },
      "PagedPayeeResponseV3_summary": {
        "example": {
          "totalOnboardedCount": 10,
          "totalRegisteredCount": 10,
          "totalPayeesCount": 10,
          "totalInvitedCount": 10,
          "totalWatchlistFailedCount": 0
        },
        "properties": {
          "totalPayeesCount": {
            "example": 10,
            "type": "integer"
          },
          "totalInvitedCount": {
            "example": 10,
            "type": "integer"
          },
          "totalRegisteredCount": {
            "example": 10,
            "type": "integer"
          },
          "totalOnboardedCount": {
            "example": 10,
            "type": "integer"
          },
          "totalWatchlistFailedCount": {
            "example": 0,
            "type": "integer"
          }
        }
      },
      "PagedPayeeResponseV3_page": {
        "example": {
          "numberOfElements": 10,
          "totalPages": 10,
          "pageSize": 10,
          "page": 10,
          "totalElements": 10
        },
        "properties": {
          "numberOfElements": {
            "example": 10,
            "type": "integer"
          },
          "totalElements": {
            "example": 10,
            "type": "integer"
          },
          "totalPages": {
            "example": 10,
            "type": "integer"
          },
          "page": {
            "example": 10,
            "type": "integer"
          },
          "pageSize": {
            "example": 10,
            "type": "integer"
          }
        }
      },
      "PagedPayeeResponseV3_links": {
        "example": {
          "rel": "rel",
          "href": "href"
        },
        "properties": {
          "rel": {
            "type": "string"
          },
          "href": {
            "type": "string"
          }
        }
      },
      "CreatePayeesCSVResponseV3_rejectedCsvRows": {
        "example": {
          "rejectedContent": "unable,to,process,csv,line",
          "lineNumber": 3,
          "message": "rejected message 1"
        },
        "properties": {
          "lineNumber": {
            "example": 3,
            "type": "integer"
          },
          "rejectedContent": {
            "example": "unable,to,process,csv,line",
            "type": "string"
          },
          "message": {
            "example": "rejected message 1",
            "type": "string"
          }
        }
      },
      "PagedPayeeInvitationStatusResponseV3_page": {
        "example": {
          "numberOfElements": 0,
          "totalPages": 1,
          "pageSize": 5,
          "page": 5,
          "totalElements": 6
        },
        "properties": {
          "numberOfElements": {
            "type": "integer"
          },
          "totalElements": {
            "type": "integer"
          },
          "totalPages": {
            "type": "integer"
          },
          "page": {
            "type": "integer"
          },
          "pageSize": {
            "type": "integer"
          }
        }
      },
      "PayeeDeltaResponseV3_page": {
        "example": {
          "numberOfElements": 2,
          "totalPages": 1,
          "pageSize": 25,
          "page": 1,
          "totalElements": 2
        },
        "properties": {
          "numberOfElements": {
            "example": 2,
            "type": "integer"
          },
          "totalElements": {
            "example": 2,
            "type": "integer"
          },
          "totalPages": {
            "example": 1,
            "type": "integer"
          },
          "page": {
            "example": 1,
            "type": "integer"
          },
          "pageSize": {
            "example": 25,
            "type": "integer"
          }
        }
      },
      "PayeeDeltaResponseV3_links": {
        "example": {
          "rel": "first",
          "href": "http://api.sandbox.velopayments.com/v3/payees/deltas?payorId=0a818933-087d-47f2-ad83-2f986ed087eb&updatedSince=2019-01-20T09:00:00+00:00&page=1&pageSize=1000"
        },
        "properties": {
          "rel": {
            "example": "first",
            "type": "string"
          },
          "href": {
            "example": "http://api.sandbox.velopayments.com/v3/payees/deltas?payorId=0a818933-087d-47f2-ad83-2f986ed087eb&updatedSince=2019-01-20T09:00:00+00:00&page=1&pageSize=1000",
            "type": "string"
          }
        }
      },
      "PayeeDeltaResponseV4_links": {
        "example": {
          "rel": "first",
          "href": "http://api.sandbox.velopayments.com/v4/payees/deltas?payorId=0a818933-087d-47f2-ad83-2f986ed087eb&updatedSince=2019-01-20T09:00:00+00:00&page=1&pageSize=1000"
        },
        "properties": {
          "rel": {
            "example": "first",
            "type": "string"
          },
          "href": {
            "example": "http://api.sandbox.velopayments.com/v4/payees/deltas?payorId=0a818933-087d-47f2-ad83-2f986ed087eb&updatedSince=2019-01-20T09:00:00+00:00&page=1&pageSize=1000",
            "type": "string"
          }
        }
      },
      "ListSourceAccountResponseV2_links": {
        "example": {
          "rel": "first",
          "href": "https://api.sandbox.velopayments.com/v2/sourceAccounts?payorId=a2967711-df07-41e5-b5ea-f563088911c6&page=1&pageSize=0&sort=fundingRef:asc"
        },
        "properties": {
          "rel": {
            "example": "first",
            "type": "string"
          },
          "href": {
            "example": "https://api.sandbox.velopayments.com/v2/sourceAccounts?payorId=a2967711-df07-41e5-b5ea-f563088911c6&page=1&pageSize=0&sort=fundingRef:asc",
            "type": "string"
          }
        }
      },
      "ListSourceAccountResponseV3_links": {
        "example": {
          "rel": "first",
          "href": "https://api.sandbox.velopayments.com/v3/sourceAccounts?payorId=a2967711-df07-41e5-b5ea-f563088911c6&page=1&pageSize=0&sort=fundingRef:asc"
        },
        "properties": {
          "rel": {
            "example": "first",
            "type": "string"
          },
          "href": {
            "example": "https://api.sandbox.velopayments.com/v3/sourceAccounts?payorId=a2967711-df07-41e5-b5ea-f563088911c6&page=1&pageSize=0&sort=fundingRef:asc",
            "type": "string"
          }
        }
      },
      "ListFundingAccountsResponseV2_page": {
        "example": {
          "numberOfElements": 1,
          "totalPages": 2,
          "pageSize": 25,
          "page": 1,
          "totalElements": 1
        },
        "properties": {
          "numberOfElements": {
            "example": 1,
            "type": "integer"
          },
          "totalElements": {
            "example": 1,
            "type": "integer"
          },
          "totalPages": {
            "example": 2,
            "type": "integer"
          },
          "page": {
            "example": 1,
            "type": "integer"
          },
          "pageSize": {
            "example": 25,
            "type": "integer"
          }
        }
      },
      "GetFundingsResponse_links": {
        "example": {
          "rel": "first",
          "href": "https://api.sandbox.velopayments.com/v1/paymentaudit/fundings?payorId=2a5d8af2-a1ed-4d7f-b9a7-ebe4b333be5a&page=1&pageSize=10"
        },
        "properties": {
          "rel": {
            "example": "first",
            "type": "string"
          },
          "href": {
            "example": "https://api.sandbox.velopayments.com/v1/paymentaudit/fundings?payorId=2a5d8af2-a1ed-4d7f-b9a7-ebe4b333be5a&page=1&pageSize=10",
            "type": "string"
          }
        }
      },
      "GetPayoutsResponseV3_page": {
        "example": {
          "numberOfElements": 12,
          "totalPages": 123,
          "pageSize": 25,
          "page": 1,
          "totalElements": 123
        },
        "properties": {
          "numberOfElements": {
            "example": 12,
            "type": "integer"
          },
          "totalElements": {
            "example": 123,
            "type": "integer"
          },
          "totalPages": {
            "example": 123,
            "type": "integer"
          },
          "page": {
            "example": 1,
            "type": "integer"
          },
          "pageSize": {
            "example": 25,
            "type": "integer"
          }
        }
      },
      "GetPayoutsResponseV3_links": {
        "example": {
          "rel": "first",
          "href": "https://example.com"
        },
        "properties": {
          "rel": {
            "example": "first",
            "type": "string"
          },
          "href": {
            "example": "https://example.com",
            "type": "string"
          }
        }
      },
      "GetPaymentsForPayoutResponseV3_summary": {
        "example": {
          "incompletePayments": 123,
          "confirmedPayments": 123,
          "releasedPayments": 123,
          "submittedDateTime": "2000-01-23T04:56:07.000Z",
          "payoutStatus": "payoutStatus",
          "withdrawnDateTime": "2000-01-23T04:56:07.000Z",
          "totalPayments": 123,
          "instructedDateTime": "2000-01-23T04:56:07.000Z",
          "payoutMemo": "Payment Memo value",
          "failedPayments": 0
        },
        "properties": {
          "payoutStatus": {
            "description": "The current status of the payout. One of the following values: ACCEPTED, REJECTED, SUBMITTED, QUOTED, INSTRUCTED, COMPLETED, INCOMPLETE, CONFIRMED, WITHDRAWN",
            "type": "string"
          },
          "submittedDateTime": {
            "description": "The date/time at which the payout was submitted.",
            "format": "date-time",
            "type": "string"
          },
          "instructedDateTime": {
            "description": "The date/time at which the payout was instructed.",
            "format": "date-time",
            "type": "string"
          },
          "withdrawnDateTime": {
            "description": "The date/time at which the payout was withdrawn.",
            "format": "date-time",
            "type": "string"
          },
          "payoutMemo": {
            "description": "The memo attached to the payout.",
            "example": "Payment Memo value",
            "type": "string"
          },
          "totalPayments": {
            "description": "The count of payments within the payout.",
            "example": 123,
            "type": "integer"
          },
          "confirmedPayments": {
            "description": "The count of payments within the payout which have been confirmed.",
            "example": 123,
            "type": "integer"
          },
          "releasedPayments": {
            "description": "The count of payments within the payout which have been released.",
            "example": 123,
            "type": "integer"
          },
          "incompletePayments": {
            "description": "The count of payments within the payout which are incomplete.",
            "example": 123,
            "type": "integer"
          },
          "failedPayments": {
            "description": "The count of payments within the payout which have failed or been returned.",
            "example": 0,
            "type": "integer"
          }
        }
      },
      "GetPaymentsForPayoutResponseV3_page": {
        "example": {
          "numberOfElements": 12,
          "totalPages": 10,
          "pageSize": 25,
          "page": 1,
          "totalElements": 12
        },
        "properties": {
          "numberOfElements": {
            "example": 12,
            "type": "integer"
          },
          "totalElements": {
            "example": 12,
            "type": "integer"
          },
          "totalPages": {
            "example": 10,
            "type": "integer"
          },
          "page": {
            "example": 1,
            "type": "integer"
          },
          "pageSize": {
            "example": 25,
            "type": "integer"
          }
        }
      },
      "ListPaymentsResponseV3_page": {
        "example": {
          "numberOfElements": 12,
          "totalPages": 12,
          "pageSize": 25,
          "page": 1,
          "totalElements": 12
        },
        "properties": {
          "numberOfElements": {
            "example": 12,
            "type": "integer"
          },
          "totalElements": {
            "example": 12,
            "type": "integer"
          },
          "totalPages": {
            "example": 12,
            "type": "integer"
          },
          "page": {
            "example": 1,
            "type": "integer"
          },
          "pageSize": {
            "example": 25,
            "type": "integer"
          }
        }
      },
      "GetPaymentsForPayoutResponseV4_summary": {
        "example": {
          "withdrawnPayments": 2,
          "submitting": {
            "principal": "principal",
            "principalId": "046b6c7f-0b8a-43b9-b35d-6489e6daee91",
            "payorId": "046b6c7f-0b8a-43b9-b35d-6489e6daee91",
            "dbaName": "dbaName",
            "payorName": "payorName"
          },
          "payoutType": "payoutType",
          "confirmedPayments": 6,
          "releasedPayments": 1,
          "withdrawn": {
            "principal": "principal",
            "principalId": "046b6c7f-0b8a-43b9-b35d-6489e6daee91"
          },
          "payoutStatus": "payoutStatus",
          "totalPayments": 0,
          "payoutFrom": {
            "principal": "principal",
            "principalId": "046b6c7f-0b8a-43b9-b35d-6489e6daee91",
            "payorId": "046b6c7f-0b8a-43b9-b35d-6489e6daee91",
            "dbaName": "dbaName",
            "payorName": "payorName"
          },
          "payoutTo": {
            "principal": "principal",
            "principalId": "046b6c7f-0b8a-43b9-b35d-6489e6daee91",
            "payorId": "046b6c7f-0b8a-43b9-b35d-6489e6daee91",
            "dbaName": "dbaName",
            "payorName": "payorName"
          },
          "quoted": {
            "principal": "principal",
            "principalId": "046b6c7f-0b8a-43b9-b35d-6489e6daee91"
          },
          "instructed": {
            "principal": "principal",
            "principalId": "046b6c7f-0b8a-43b9-b35d-6489e6daee91"
          },
          "schedule": {
            "scheduledFor": "2000-01-23T04:56:07.000Z",
            "scheduleStatus": "SCHEDULED",
            "notificationsEnabled": true,
            "scheduledBy": "Aphra Behn",
            "scheduledByPrincipalId": "8946953b-1e3b-49cf-9da4-b704cbb78f3e",
            "scheduledAt": "2000-01-23T04:56:07.000Z"
          },
          "incompletePayments": 5,
          "submittedDateTime": "2000-01-23T04:56:07.000Z",
          "quotedDateTime": "2000-01-23T04:56:07.000Z",
          "withdrawnDateTime": "2000-01-23T04:56:07.000Z",
          "returnedPayments": 5,
          "instructedDateTime": "2000-01-23T04:56:07.000Z",
          "payoutMemo": "payoutMemo"
        },
        "properties": {
          "payoutStatus": {
            "description": "Current status of the Payout. One of the following values: ACCEPTED, REJECTED, SUBMITTED, QUOTED, INSTRUCTED, COMPLETED, INCOMPLETE, CONFIRMED, WITHDRAWN",
            "type": "string"
          },
          "submittedDateTime": {
            "description": "The date/time at which the payout was submitted.",
            "format": "date-time",
            "type": "string"
          },
          "instructedDateTime": {
            "description": "The date/time at which the payout was instructed.",
            "format": "date-time",
            "type": "string"
          },
          "withdrawnDateTime": {
            "format": "date-time",
            "type": "string"
          },
          "quotedDateTime": {
            "description": "The date/time at which the payout was quoted.",
            "format": "date-time",
            "type": "string"
          },
          "payoutMemo": {
            "description": "The memo attached to the payout.",
            "type": "string"
          },
          "totalPayments": {
            "description": "The count of payments within the payout.",
            "type": "integer"
          },
          "confirmedPayments": {
            "description": "The count of payments within the payout which have been confirmed.",
            "type": "integer"
          },
          "releasedPayments": {
            "description": "The count of payments within the payout which have been released.",
            "type": "integer"
          },
          "incompletePayments": {
            "description": "The count of payments within the payout which are incomplete.",
            "type": "integer"
          },
          "returnedPayments": {
            "description": "The count of payments within the payout which have been returned.",
            "type": "integer"
          },
          "withdrawnPayments": {
            "description": "The count of payments within the payout which have been withdrawn.",
            "type": "integer"
          },
          "payoutType": {
            "description": "The type of payout. One of the following values: STANDARD, AS, ON_BEHALF_OF",
            "type": "string"
          },
          "submitting": {
            "$ref": "#/components/schemas/PayoutPayor"
          },
          "payoutFrom": {
            "$ref": "#/components/schemas/PayoutPayor"
          },
          "payoutTo": {
            "$ref": "#/components/schemas/PayoutPayor"
          },
          "quoted": {
            "$ref": "#/components/schemas/PayoutPrincipal"
          },
          "instructed": {
            "$ref": "#/components/schemas/PayoutPrincipal"
          },
          "withdrawn": {
            "$ref": "#/components/schemas/PayoutPrincipal"
          },
          "schedule": {
            "$ref": "#/components/schemas/PayoutSchedule"
          }
        }
      },
      "PaymentResponseV4_payout": {
        "example": {
          "payoutId": "046b6c7f-0b8a-43b9-b35d-6489e6daee91",
          "payoutFrom": {
            "principal": "principal",
            "principalId": "046b6c7f-0b8a-43b9-b35d-6489e6daee91",
            "payorId": "046b6c7f-0b8a-43b9-b35d-6489e6daee91",
            "dbaName": "dbaName",
            "payorName": "payorName"
          },
          "payoutTo": {
            "principal": "principal",
            "principalId": "046b6c7f-0b8a-43b9-b35d-6489e6daee91",
            "payorId": "046b6c7f-0b8a-43b9-b35d-6489e6daee91",
            "dbaName": "dbaName",
            "payorName": "payorName"
          }
        },
        "properties": {
          "payoutId": {
            "format": "uuid",
            "type": "string"
          },
          "payoutFrom": {
            "$ref": "#/components/schemas/PayoutPayor"
          },
          "payoutTo": {
            "$ref": "#/components/schemas/PayoutPayor"
          }
        }
      },
      "IndividualV3_name": {
        "example": {
          "firstName": "Bob",
          "lastName": "Smith",
          "otherNames": "A",
          "title": "Mr"
        },
        "properties": {
          "title": {
            "example": "Mr",
            "maxLength": 10,
            "minLength": 1,
            "type": "string"
          },
          "firstName": {
            "example": "Bob",
            "maxLength": 40,
            "minLength": 1,
            "type": "string"
          },
          "otherNames": {
            "example": "A",
            "maxLength": 40,
            "minLength": 1,
            "type": "string"
          },
          "lastName": {
            "example": "Smith",
            "maxLength": 40,
            "minLength": 1,
            "type": "string"
          }
        },
        "required": [
          "firstName",
          "lastName"
        ]
      },
      "CreateIndividualV3_name": {
        "example": {
          "firstName": "Bob",
          "lastName": "Smith",
          "otherNames": "H",
          "title": "Mr"
        },
        "properties": {
          "title": {
            "example": "Mr",
            "maxLength": 10,
            "minLength": 1,
            "type": "string"
          },
          "firstName": {
            "example": "Bob",
            "maxLength": 40,
            "minLength": 1,
            "type": "string"
          },
          "otherNames": {
            "example": "H",
            "maxLength": 40,
            "minLength": 1,
            "type": "string"
          },
          "lastName": {
            "example": "Smith",
            "maxLength": 40,
            "minLength": 1,
            "type": "string"
          }
        },
        "required": [
          "firstName",
          "lastName"
        ]
      }
    },
    "securitySchemes": {
      "OAuth2": {
        "description": "This API uses OAuth 2 with the Client Credentials grant flow. [More info](https://www.oauth.com/oauth2-servers/access-tokens/client-credentials)",
        "flows": {
          "clientCredentials": {
            "scopes": {
              " ": "Scopes not required"
            },
            "tokenUrl": "https://api.sandbox.velopayments.com/v1/login"
          }
        },
        "type": "oauth2"
      },
      "basicAuth": {
        "scheme": "basic",
        "type": "http"
      },
      "oAuthVeloBackOffice": {
        "description": "This API uses OAuth 2 with the implicit grant flow. Authenticated user must have backoffice role [More info](https://api.example.com/docs/auth)",
        "flows": {
          "clientCredentials": {
            "scopes": {
              " ": "Scopes not required"
            },
            "tokenUrl": "https://api.sandbox.velopayments.com/oauth/token"
          }
        },
        "type": "oauth2"
      }
    }
  },
  "x-tagGroups": [
    {
      "name": "Payor Operations",
      "tags": [
        "Payors",
        "Payor Hierarchy",
        "Funding",
        "Source Accounts",
        "Transactions",
        "Webhooks",
        "Payins"
      ]
    },
    {
      "name": "Payee Operations",
      "tags": [
        "Payees",
        "Payee Invitation",
        "Invites"
      ]
    },
    {
      "name": "Payout APIs",
      "tags": [
        "Payouts"
      ]
    },
    {
      "name": "Reporting",
      "tags": [
        "Payment Audit Service"
      ]
    },
    {
      "name": "Auth",
      "tags": [
        "Login",
        "Users",
        "Tokens"
      ]
    },
    {
      "name": "API Utilities",
      "tags": [
        "Currencies",
        "Countries"
      ]
    },
    {
      "name": "Legal",
      "tags": [
        "Legal"
      ]
    }
  ],
  "x-webhooks": {
    "veloWebhookNotification": {
      "post": {
        "summary": "Webhook notifications",
        "description": "The webhook notifications that are sent to the payor's configured webhook endpoint URL",
        "tags": [
          "Webhooks"
        ],
        "operationId": "veloWebhook",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Notification"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "A successful response indicates that the notification has been received by the customers system. Any other http status will result in the notification being retried."
          }
        }
      }
    }
  }
}
