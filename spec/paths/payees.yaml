    summary: Payee Service APIs
    description: API Operations available to view and work with **Payee** information.
    get:
      summary: Get List of Payees
      tags:
        - Payee
      operationId: listPayees
      description: Get a paginated response listing the payees for a payor.
      parameters:
        - name: payorId
          in: query
          description: Payor id (only mandatory if the payor is making the request).
          required: false
          schema:
            type: string
            format: uuid
        - name: ofacStatus
          in: query
          description: The ofacStatus of the payees.
          required: false
          schema:
            type: string
        - name: sort
          in: query
          description: >
              List of sort fields (e.g. ?sort=onboardedStatus:asc,name:asc)
              Default is name:asc 'name' is treated as company name for companies -
              last name + ',' + firstName for individuals The supported sort fields are - payeeId, displayName, payoutStatus, onboardedStatus.
          required: false
          schema:
            type: string
        - $ref: '#definitions/parameters/pageParam'
        - $ref: "#definitions/parameters/pageSizeParam"
      responses:
        '200':
          description: Details of Payee
          content:
            application/json:
              schema:
                properties:
                  page:
                    $ref: '#definitions/model/Page'
                  links:
                    $ref: '#definitions/model/Links'
                  content:
                    $ref: '#definitions/model/PayeeDetails'
              example: |
                  {
                    "page" : {
                      "numberOfElements" : 2,
                      "totalElements" : 45,
                      "totalPages" : 23,
                      "page" : 9,
                      "pageSize" : 2
                    },
                    "links" : [ {
                      "rel" : "first",
                      "href" : "https://api.sandbox.velopayments.com/v1/payees?payorId=1982b223-73b7-419d-a2e1-e64362b0ee8b&page=1&pageSize=2&sort=displayName:asc"
                    }, {
                      "rel" : "last",
                      "href" : "https://api.sandbox.velopayments.com/v1/payees?payorId=1982b223-73b7-419d-a2e1-e64362b0ee8b&page=23&pageSize=2&sort=displayName:asc"
                    }, {
                      "rel" : "self",
                      "href" : "https://api.sandbox.velopayments.com/v1/payees?payorId=1982b223-73b7-419d-a2e1-e64362b0ee8b&page=9&pageSize=2&sort=displayName:asc"
                    }, {
                      "rel" : "prev",
                      "href" : "https://api.sandbox.velopayments.com/v1/payees?payorId=1982b223-73b7-419d-a2e1-e64362b0ee8b&page=8&pageSize=2&sort=displayName:asc"
                    }, {
                      "rel" : "next",
                      "href" : "https://api.sandbox.velopayments.com/v1/payees?payorId=1982b223-73b7-419d-a2e1-e64362b0ee8b&page=10&pageSize=2&sort=displayName:asc"
                    } ],
                    "content" : [ {
                      "payeeId" : "ee2cc9a1-34dd-4ab6-91e3-db111d08d995",
                      "payorRefs" : [ {
                        "payorId" : "13322f2a-8edb-41ef-aab4-9b070317a51a",
                        "remoteId" : "remoteId"
                      } ],
                      "displayName" : null,
                      "email" : "bob@example.com",
                      "individual" : {
                        "name" : {
                          "title" : "Mr",
                          "firstName" : "Barney",
                          "otherNames" : "Grubb",
                          "lastName" : "Cuthbert"
                        }
                      },
                      "onboardedStatus" : "CREATED",
                      "ofacStatus" : "PENDING"
                    }, {
                      "payeeId" : "e904966e-ae6a-4ddd-879c-fd1167c21849",
                      "payorRefs" : [ {
                        "payorId" : "13322f2a-8edb-41ef-aab4-9b070317a51a",
                        "remoteId" : "remoteId"
                      } ],
                      "displayName" : null,
                      "email" : "bob@example.com",
                      "individual" : {
                        "name" : {
                          "title" : "Mr",
                          "firstName" : "Barney",
                          "otherNames" : "Grubb",
                          "lastName" : "Cuthbert"
                        }
                      },
                      "onboardedStatus" : "CREATED",
                      "ofacStatus" : "PENDING"
                    } ]
                  }
      x-code-samples:
        - lang: 'shell'
          source: |
            $ curl 'https://api.sandbox.velopayments.com/v1/payees?pageSize=2&page=8&payorId=1982b223-73b7-419d-a2e1-e64362b0ee8b' -i \
            -H 'Content-Type: application/json' \
            -H 'Authorization: Bearer 8a243e84-4bc5-4177-9bd0-0afe03870195'
        - lang: 'java'
          source: |
              public static void main(String[] args) throws IOException {
                  String apiUrl = "https://api.sandbox.velopayments.com/v1/payees";

                  //Payor ID - Unique to your account
                  String payorId = "61e0690e-7d3f-4f87-8740-cf87565369d0";

                  //Get API Access Token
                  String apiAccessToken = AuthorizationExample.getApiToken();

                  // Query parameters
                  UriComponentsBuilder builder = UriComponentsBuilder.fromUriString(apiUrl)
                          // Add query parameter
                          .queryParam("payorId", payorId);

                  String apiUrlWithQueryParams = builder.toUriString();

                  System.out.println("API URL with query Parameters: " + apiUrlWithQueryParams);

                  //Set auth header
                  HttpHeaders httpHeaders = new HttpHeaders();
                  httpHeaders.add("Authorization", "Bearer " + apiAccessToken);
                  httpHeaders.add("Content-Type", "application/json");

                  //add request body and http headers
                  HttpEntity<String> httpEntity = new HttpEntity<>(null, httpHeaders);

                  //Create Spring RestTemplate
                  RestTemplate restTemplate = new RestTemplate();

                  //Using Apache HTTPClient for clear debug logging (this step is optional)
                  restTemplate.setRequestFactory(new HttpComponentsClientHttpRequestFactory());

                  //Call Velo API, capature JSON response as String
                  String apiResponse = restTemplate.exchange(apiUrlWithQueryParams, HttpMethod.GET,
                          httpEntity, String.class).getBody();

                  System.out.println(apiResponse);
              }
    post:
      summary: Create Payees
      description: Initiate the process of creating 1 to 2000 payees in a batch Use the response location header to query for status.
      operationId: createPayees
      tags:
        - Payee
      requestBody:
        description: Submit list of Payees to add to velo
        required: true
        content:
          application/json:
            schema:
              $ref: '#definitions/model/CreatePayeesRequest'
      responses:
        '201':
          description: Created
          headers:
            location:
              schema:
                type: string
              description: Batch Create URI Location