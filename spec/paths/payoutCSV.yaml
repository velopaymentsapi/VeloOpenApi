post:
    summary: CSV Payout
    description: |
        ### CSV Payouts

        Create a new payout from a CSV source file and return a location header with a link to instruct the payout.

        Example CSV:
        ```
            "remoteId","currency","amount","reference"
            "remoteId1","USD","123.45","ref1"
            "remoteId2","USD","234.56","ref2"
        ```

        ### CSV parsing errors
        #### Structural errors
        If there is a structural error meaning that no rows can be extracted then the service will reject the request with a 400 and the message:

            `Unable to extract the file contents: Structural error in the CSV payout request`

        If there are errors that prevent individual rows from being parsed then those will be returned in the response but valid rows will still be submitted as part of the payout
        ```
        {
             "payoutId": "167f57b2-88fa-4cc1-85aa-3fcf9f52693b",
             "rejectedPayees": [],
             "rejectedCsvRows": [
               {
                 "lineNumber": 2,
                 "rejectedContent": "123456789,USD,111.11",
                 "message": "Number of data fields does not match number of headers."
               }
             ]
           }
           ```
         Please note that line numbers are on a one-based index and refer to the line number in the text file.


         #### Data validation errors
         In the case of data validation errors (e.g. a negative amount) then the individual rows will be rejected but valid rows will be submitted as part of the payout (as with structurally invalid rows, described above)
         ```
        {
          "payoutId": "4ac71787-2f9b-49e9-9508-3c7b4689319d",
          "rejectedPayees": [],
          "rejectedCsvRows": [
            {
              "lineNumber": 2,
              "rejectedContent": "123456789,USD,-111.11,ref1",
              "message": "Amount must be greater than or equal to 0.01"
            }
          ]
        }
        ```
    operationId: payoutSubmitCSV
    tags:
        - Payout Service
    parameters:
        - name: payorId
          in: path
          description: Payor ID
          required: true
          schema:
              type: string
              format: uuid
        - name: sourceCurrency
          in: path
          description: Currency Code
          required: true
          schema:
              type: string
              enum: [USD]
    x-code-samples:
        - lang: 'shell'
          source: |
                $ curl 'https://api.sandbox.velopayments.com/v1/payouts?sourceCurrency=USD&payorId=e48f5b33-b5d1-4395-b4a2-1c6cb3d057e1' -i -X POST \
                    -H 'Content-Type: multipart/form-data' \
                    -H 'Authorization: Bearer 6e869ccc-8a90-42d3-807a-df80d2b192a8' \
                    -F 'file=@test.csv;type=text/plain' \
                    -F 'sourceCurrency=USD' \
                    -F 'payorId=e48f5b33-b5d1-4395-b4a2-1c6cb3d057e1'
    requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              properties:
                file:
                    type: string
                    format: binary
    responses:
        '200':
          description: Detailed response of payout instructions
          content:
            application/json:
                schema:
                  $ref: ../definitions/model/CreatePayoutResponse.yaml
                example: |
                    HTTP/1.1 201 Created
                    Location: https://api.sandbox.velopayments.com/v1/payouts/20bc1d70-4771-472a-9dce-92af1eef0ad0
                    Content-Type: application/json;charset=UTF-8
                    Content-Length: 311

                    {
                      "payoutId" : "20bc1d70-4771-472a-9dce-92af1eef0ad0",
                      "rejectedPayees" : [ {
                        "reason" : "UNKNOWN_REMOTE_ID",
                        "remoteId" : "myRemoteId03"
                      }, {
                        "email" : "foo@bar.com",
                        "payeeId" : "8ab5e0c2-4f1a-44b6-b3a5-2666375479d9",
                        "reason" : "OFAC_FAILED",
                        "remoteId" : "myRemoteId03"
                      } ]
                    }
        '400':
            description: CSV Parsing Error
        '404':
            description: Payor Id Not Found